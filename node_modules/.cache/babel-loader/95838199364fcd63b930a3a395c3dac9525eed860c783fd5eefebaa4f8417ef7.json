{"ast":null,"code":"var _jsxFileName = \"D:\\\\3rd Year 1st Sem\\\\DocClickConnect\\\\appointment\\\\src\\\\pages\\\\AppointmentPages\\\\SetAppointment.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport PatientNavBar from '../../components/PatientNavBar';\nimport PatientFooter from '../../components/PatientFooter';\nimport DoctorCalendar from '../../components/DoctorCalendar';\nimport { useParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst SetAppointment = () => {\n  _s();\n  const {\n    doctorId\n  } = useParams();\n  const [error, setError] = useState(null);\n  const [selectedDay, setSelectedDay] = useState('');\n  const [selectedSched, setSelectedSched] = useState('');\n  const [selectedDate, setSelectedDate] = useState('');\n  const [schedules, setSchedules] = useState([{\n    scheduleId: '',\n    clinicId: '',\n    avatar: '',\n    doctorName: '',\n    specialization: '',\n    contactNumber: '',\n    docEmail: '',\n    scheduleDay: '',\n    start: new Date(),\n    end: new Date(),\n    // 5:00 PM\n    slots: '',\n    clinicName: '',\n    address: '',\n    number: '',\n    email: ''\n  }]);\n  useEffect(() => {\n    const fetchDoctorSchedules = async () => {\n      try {\n        const response = await fetch(`http://localhost:8080/docsched/${doctorId}`);\n        if (response.ok) {\n          const data = await response.json();\n          const formattedSchedules = data.map(schedule => ({\n            scheduleId: schedule.scheduleId,\n            clinicId: schedule.clinicId,\n            avatar: schedule.doctor.user.avatar,\n            doctorName: `${schedule.doctor.user.firstName} ${schedule.doctor.user.lastName}`,\n            specialization: schedule.doctor.specialization,\n            contactNumber: schedule.doctor.user.contactNumber,\n            docEmail: schedule.doctor.user.email,\n            scheduleDay: schedule.scheduleDay,\n            start: schedule.startTime,\n            end: schedule.endTime,\n            slots: schedule.slots,\n            clinicName: schedule.clinic.name,\n            address: schedule.clinic.address,\n            number: schedule.clinic.officeNumber,\n            email: schedule.clinic.officeEmail\n          }));\n          setSchedules(formattedSchedules);\n        } else {\n          setError('Error fetching appointment');\n        }\n      } catch (error) {\n        setError('Error fetching appointment');\n      }\n    };\n    fetchDoctorSchedules();\n  }, [doctorId]);\n  const convertMilitaryToStandardTime = militaryTime => {\n    if (typeof militaryTime !== 'string' || militaryTime.length !== 8) {\n      return 'Invalid Time';\n    }\n    const [hours, minutes] = militaryTime.split(':');\n    const parsedHours = parseInt(hours, 10);\n    const period = parsedHours >= 12 ? 'PM' : 'AM';\n    const formattedHours = parsedHours % 12 || 12;\n    return `${formattedHours}:${minutes} ${period}`;\n  };\n  const getNearestDays = (selectedDay, numberOfOccurrences) => {\n    const today = new Date();\n    const daysInWeek = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];\n    const selectedDayIndex = daysInWeek.findIndex(day => day.toLowerCase() === selectedDay.toLowerCase());\n    if (selectedDayIndex === -1) {\n      return []; // Invalid selected day\n    }\n\n    const nearestDays = [];\n    let currentDate = new Date(today);\n    while (nearestDays.length < numberOfOccurrences) {\n      if (currentDate.getDay() === selectedDayIndex) {\n        nearestDays.push(new Date(currentDate));\n      }\n      currentDate.setDate(currentDate.getDate() + 1);\n    }\n    return nearestDays;\n  };\n  const nearestDays = getNearestDays(selectedDay, 5);\n  const uniqueClinicIds = Array.from(new Set(schedules.map(schedule => schedule.clinicId)));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(PatientNavBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"flex\",\n        margin: \"auto\",\n        width: \"100vw\",\n        justifyContent: \"center\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(DoctorCalendar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginLeft: \"30px\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: [\"Dr. \", schedules[0].doctorName]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [\"Specialization: \", schedules[0].specialization]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [\"Contact Number: \", schedules[0].contactNumber]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [\"Email Address: \", schedules[0].docEmail]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: uniqueClinicIds.map(clinicId => {\n            var _schedules$find, _schedules$find2, _schedules$find3, _schedules$find4;\n            return /*#__PURE__*/_jsxDEV(\"table\", {\n              children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n                children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: /*#__PURE__*/_jsxDEV(\"h2\", {\n                      style: {\n                        color: \"#0094d4\"\n                      },\n                      children: [\" \", (_schedules$find = schedules.find(schedule => schedule.clinicId === clinicId)) === null || _schedules$find === void 0 ? void 0 : _schedules$find.clinicName, \" \"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 132,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 132,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 131,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                      colSpan: 2,\n                      children: [\" Address: \", (_schedules$find2 = schedules.find(schedule => schedule.clinicId === clinicId)) === null || _schedules$find2 === void 0 ? void 0 : _schedules$find2.address, \" \"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 135,\n                      columnNumber: 25\n                    }, this), \" \"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 135,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 134,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                      colSpan: 2,\n                      children: [\" Contact Number: \", (_schedules$find3 = schedules.find(schedule => schedule.clinicId === clinicId)) === null || _schedules$find3 === void 0 ? void 0 : _schedules$find3.number, \" \"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 138,\n                      columnNumber: 25\n                    }, this), \" \"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 138,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 137,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: /*#__PURE__*/_jsxDEV(\"h3\", {\n                      colSpan: 2,\n                      children: [\" Email Address: \", (_schedules$find4 = schedules.find(schedule => schedule.clinicId === clinicId)) === null || _schedules$find4 === void 0 ? void 0 : _schedules$find4.officeEmail, \" \"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 141,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 141,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 140,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                    style: {\n                      width: \"150px\"\n                    },\n                    children: \"Day: \"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 144,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: /*#__PURE__*/_jsxDEV(\"select\", {\n                      name: \"sched\",\n                      id: `day-${clinicId}`,\n                      style: {\n                        width: \"250px\"\n                      },\n                      value: selectedDay,\n                      onChange: e => {\n                        setSelectedDay(e.target.value);\n                        console.log(\"Selected Day changed:\", e.target.value);\n                      },\n                      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                        value: \"\",\n                        children: \"Select Day\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 157,\n                        columnNumber: 25\n                      }, this), schedules.filter(schedule => schedule.clinicId === clinicId).map(schedule => /*#__PURE__*/_jsxDEV(\"option\", {\n                        value: schedule.scheduleDay,\n                        children: schedule.scheduleDay\n                      }, schedule.scheduleDay, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 162,\n                        columnNumber: 29\n                      }, this))]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 146,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 145,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 143,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                    style: {\n                      width: \"150px\"\n                    },\n                    children: \"Timeslot: \"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 171,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: /*#__PURE__*/_jsxDEV(\"select\", {\n                      name: \"timeslot\",\n                      id: `timeslot-${clinicId}`,\n                      style: {\n                        width: \"250px\"\n                      },\n                      value: selectedSched,\n                      onChange: e => {\n                        const selectedTimeslot = e.target.value;\n                        setSelectedSched(selectedTimeslot);\n                        console.log('Selected Schedule ID:', e.target.value);\n                      },\n                      children: schedules.filter(schedule => schedule.clinicId === clinicId && schedule.scheduleDay === selectedDay).map(schedule => /*#__PURE__*/_jsxDEV(\"option\", {\n                        value: schedule.scheduleId,\n                        children: [convertMilitaryToStandardTime(schedule.start), \" - \", convertMilitaryToStandardTime(schedule.end)]\n                      }, schedule.scheduleId, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 188,\n                        columnNumber: 29\n                      }, this))\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 173,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 172,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 170,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                    style: {\n                      width: \"150px\"\n                    },\n                    children: \"Date: \"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 196,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: /*#__PURE__*/_jsxDEV(\"select\", {\n                      name: \"sched\",\n                      id: `sched-${clinicId}`,\n                      style: {\n                        width: \"250px\"\n                      },\n                      value: selectedDate,\n                      onChange: e => {\n                        const selectedDateString = e.target.value;\n                        // Save the date in 'yyyy-mm-dd' format to selectedDate\n                        setSelectedDate(selectedDateString);\n                        console.log('Selected Date:', selectedDateString);\n                      },\n                      children: schedules.filter(schedule => schedule.clinicId === clinicId).flatMap(schedule => nearestDays.map(date => /*#__PURE__*/_jsxDEV(\"option\", {\n                        value: date.toISOString().split('T')[0],\n                        children: date.toLocaleDateString('en-US', {\n                          year: 'numeric',\n                          month: 'long',\n                          day: 'numeric'\n                        })\n                      }, `${clinicId}-${schedule.scheduleId}-${date.toISOString()}`, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 214,\n                        columnNumber: 29\n                      }, this)))\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 198,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 197,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 195,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: /*#__PURE__*/_jsxDEV(\"td\", {\n                    colSpan: 2,\n                    children: /*#__PURE__*/_jsxDEV(\"button\", {\n                      style: {\n                        marginTop: \"10px\",\n                        borderRadius: 0,\n                        width: \"100%\"\n                      },\n                      children: \"Book an Appointment\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 231,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 230,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 229,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 130,\n                columnNumber: 17\n              }, this)\n            }, clinicId, false, {\n              fileName: _jsxFileName,\n              lineNumber: 129,\n              columnNumber: 15\n            }, this);\n          })\n        }, void 0, false), /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Existing Appointments \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n          children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              rowSpan: 2,\n              width: 200,\n              style: {\n                border: \"1px solid lightgray\",\n                backgroundColor: \"lightgray\",\n                paddingLeft: \"10px\"\n              },\n              children: [\"11/06/23 MONDAY \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 244,\n                columnNumber: 152\n              }, this), \" 2:00-5:00 PM\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 244,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(Link, {\n                to: \"/patresched\",\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  style: {\n                    borderRadius: 0,\n                    width: \"200px\"\n                  },\n                  children: \"Reschedule\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 245,\n                  columnNumber: 42\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 245,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 245,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 243,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"cancel\",\n                children: \"Cancel\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 247,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 247,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 247,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(PatientFooter, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 116,\n    columnNumber: 5\n  }, this);\n};\n_s(SetAppointment, \"IJ9KYna83s37IGWyWkaquDcPu24=\", false, function () {\n  return [useParams];\n});\n_c = SetAppointment;\nexport default SetAppointment;\nvar _c;\n$RefreshReg$(_c, \"SetAppointment\");","map":{"version":3,"names":["React","useState","useEffect","Link","PatientNavBar","PatientFooter","DoctorCalendar","useParams","jsxDEV","_jsxDEV","Fragment","_Fragment","SetAppointment","_s","doctorId","error","setError","selectedDay","setSelectedDay","selectedSched","setSelectedSched","selectedDate","setSelectedDate","schedules","setSchedules","scheduleId","clinicId","avatar","doctorName","specialization","contactNumber","docEmail","scheduleDay","start","Date","end","slots","clinicName","address","number","email","fetchDoctorSchedules","response","fetch","ok","data","json","formattedSchedules","map","schedule","doctor","user","firstName","lastName","startTime","endTime","clinic","name","officeNumber","officeEmail","convertMilitaryToStandardTime","militaryTime","length","hours","minutes","split","parsedHours","parseInt","period","formattedHours","getNearestDays","numberOfOccurrences","today","daysInWeek","selectedDayIndex","findIndex","day","toLowerCase","nearestDays","currentDate","getDay","push","setDate","getDate","uniqueClinicIds","Array","from","Set","children","fileName","_jsxFileName","lineNumber","columnNumber","style","display","margin","width","justifyContent","marginLeft","_schedules$find","_schedules$find2","_schedules$find3","_schedules$find4","color","find","colSpan","id","value","onChange","e","target","console","log","filter","selectedTimeslot","selectedDateString","flatMap","date","toISOString","toLocaleDateString","year","month","marginTop","borderRadius","rowSpan","border","backgroundColor","paddingLeft","to","className","_c","$RefreshReg$"],"sources":["D:/3rd Year 1st Sem/DocClickConnect/appointment/src/pages/AppointmentPages/SetAppointment.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport PatientNavBar from '../../components/PatientNavBar';\nimport PatientFooter from '../../components/PatientFooter';\nimport DoctorCalendar from '../../components/DoctorCalendar';\nimport { useParams } from 'react-router-dom';\n\nconst SetAppointment = () => {\n  const { doctorId } = useParams();\n  const [error, setError] = useState(null);\n  const [selectedDay, setSelectedDay] = useState('');\n  const [selectedSched, setSelectedSched] = useState('');\n  const [selectedDate, setSelectedDate] = useState('');\n  const [schedules, setSchedules] = useState([\n    {\n      scheduleId: '',\n      clinicId: '',\n      avatar: '',\n      doctorName: '',\n      specialization: '',\n      contactNumber: '',\n      docEmail: '',\n      scheduleDay: '',\n      start: new Date(),\n      end: new Date(),  // 5:00 PM\n      slots: '',\n      clinicName: '',\n      address: '',\n      number: '',\n      email: ''\n    },\n  ]);\n\n  useEffect(() => {\n    const fetchDoctorSchedules = async () => {\n      try {\n        const response = await fetch(`http://localhost:8080/docsched/${doctorId}`);\n\n        if (response.ok) {\n          const data = await response.json();\n\n          const formattedSchedules = data.map(schedule => ({\n            scheduleId: schedule.scheduleId,\n            clinicId: schedule.clinicId,\n            avatar: schedule.doctor.user.avatar,\n            doctorName: `${schedule.doctor.user.firstName} ${schedule.doctor.user.lastName}`,\n            specialization: schedule.doctor.specialization,\n            contactNumber: schedule.doctor.user.contactNumber,\n            docEmail: schedule.doctor.user.email,\n            scheduleDay: schedule.scheduleDay,\n            start: schedule.startTime,\n            end: schedule.endTime,\n            slots: schedule.slots,\n            clinicName: schedule.clinic.name,\n            address: schedule.clinic.address,\n            number: schedule.clinic.officeNumber,\n            email: schedule.clinic.officeEmail\n          }));\n\n          setSchedules(formattedSchedules);\n\n        } else {\n          setError('Error fetching appointment');\n        }\n      } catch (error) {\n        setError('Error fetching appointment');\n      }\n    };\n\n    fetchDoctorSchedules();\n  }, [doctorId]);\n\n  const convertMilitaryToStandardTime = (militaryTime) => {\n    if (typeof militaryTime !== 'string' || militaryTime.length !== 8) {\n      return 'Invalid Time';\n    }\n\n    const [hours, minutes] = militaryTime.split(':');\n    const parsedHours = parseInt(hours, 10);\n    const period = parsedHours >= 12 ? 'PM' : 'AM';\n    const formattedHours = parsedHours % 12 || 12;\n    return `${formattedHours}:${minutes} ${period}`;\n  };\n\n\n\n\n\n\n  const getNearestDays = (selectedDay, numberOfOccurrences) => {\n    const today = new Date();\n    const daysInWeek = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];\n    const selectedDayIndex = daysInWeek.findIndex(day => day.toLowerCase() === selectedDay.toLowerCase());\n\n    if (selectedDayIndex === -1) {\n      return []; // Invalid selected day\n    }\n\n    const nearestDays = [];\n    let currentDate = new Date(today);\n\n    while (nearestDays.length < numberOfOccurrences) {\n      if (currentDate.getDay() === selectedDayIndex) {\n        nearestDays.push(new Date(currentDate));\n      }\n      currentDate.setDate(currentDate.getDate() + 1);\n    }\n\n    return nearestDays;\n  };\n\n  const nearestDays = getNearestDays(selectedDay, 5);\n  const uniqueClinicIds = Array.from(new Set(schedules.map(schedule => schedule.clinicId)));\n\n  return (\n    <div>\n      <PatientNavBar />\n      <div style={{ display: \"flex\", margin: \"auto\", width: \"100vw\", justifyContent: \"center\" }}>\n        <DoctorCalendar />\n\n        <div style={{ marginLeft: \"30px\" }}>\n          <h1>Dr. {schedules[0].doctorName}</h1>\n          <h2>Specialization: {schedules[0].specialization}</h2>\n          <h3>Contact Number: {schedules[0].contactNumber}</h3>\n          <h3>Email Address: {schedules[0].docEmail}</h3>\n          <br />\n          <>\n            {uniqueClinicIds.map((clinicId) => (\n              <table key={clinicId}>\n                <tbody>\n                  <tr>\n                    <td><h2 style={{ color: \"#0094d4\" }}> {schedules.find(schedule => schedule.clinicId === clinicId)?.clinicName} </h2></td>\n                  </tr>\n                  <tr>\n                    <td><h3 colSpan={2}> Address: {schedules.find(schedule => schedule.clinicId === clinicId)?.address} </h3> </td>\n                  </tr>\n                  <tr>\n                    <td><h3 colSpan={2}> Contact Number: {schedules.find(schedule => schedule.clinicId === clinicId)?.number} </h3> </td>\n                  </tr>\n                  <tr>\n                    <td><h3 colSpan={2}> Email Address: {schedules.find(schedule => schedule.clinicId === clinicId)?.officeEmail} </h3></td>\n                  </tr>\n                  <tr>\n                    <td style={{ width: \"150px\" }}>Day: </td>\n                    <td>\n                      <select\n                        name=\"sched\"\n                        id={`day-${clinicId}`}\n                        style={{ width: \"250px\" }}\n                        value={selectedDay}\n                        onChange={(e) => {\n                          setSelectedDay(e.target.value);\n                          console.log(\"Selected Day changed:\", e.target.value);\n                        }}\n                      >\n                        {/* Initial blank option */}\n                        <option value=\"\">Select Day</option>\n                        {/* Options for the selected clinic's days */}\n                        {schedules\n                          .filter(schedule => schedule.clinicId === clinicId)\n                          .map(schedule => (\n                            <option key={schedule.scheduleDay} value={schedule.scheduleDay}>\n                              {schedule.scheduleDay}\n                            </option>\n                          ))}\n                      </select>\n\n                    </td>\n                  </tr>\n                  <tr>\n                    <td style={{ width: \"150px\" }}>Timeslot: </td>\n                    <td>\n                      <select\n                        name=\"timeslot\"\n                        id={`timeslot-${clinicId}`}\n                        style={{ width: \"250px\" }}\n                        value={selectedSched}\n                        onChange={(e) => {\n                          const selectedTimeslot = e.target.value;\n                          setSelectedSched(selectedTimeslot);\n                          console.log('Selected Schedule ID:', e.target.value);\n                        }}\n                      >\n                        {/* Options for the selected clinic's timeslots */}\n                        {schedules\n                          .filter(schedule => schedule.clinicId === clinicId && schedule.scheduleDay === selectedDay)\n                          .map(schedule => (\n                            <option key={schedule.scheduleId} value={schedule.scheduleId}>\n                              {convertMilitaryToStandardTime(schedule.start)} - {convertMilitaryToStandardTime(schedule.end)}\n                            </option>\n                          ))}\n                      </select>\n                    </td>\n                  </tr>\n                  <tr>\n                    <td style={{ width: \"150px\" }}>Date: </td>\n                    <td>\n                      <select\n                        name=\"sched\"\n                        id={`sched-${clinicId}`}\n                        style={{ width: \"250px\" }}\n                        value={selectedDate}\n                        onChange={(e) => {\n                          const selectedDateString = e.target.value;\n                          // Save the date in 'yyyy-mm-dd' format to selectedDate\n                          setSelectedDate(selectedDateString);\n                          console.log('Selected Date:', selectedDateString);\n                        }}\n                      >\n                        {/* Options for the selected clinic's nearest days */}\n                        {schedules\n                          .filter(schedule => schedule.clinicId === clinicId)\n                          .flatMap(schedule => nearestDays.map(date => (\n                            <option\n                              key={`${clinicId}-${schedule.scheduleId}-${date.toISOString()}`}\n                              value={date.toISOString().split('T')[0]}\n                            >\n                              {date.toLocaleDateString('en-US', {\n                                year: 'numeric',\n                                month: 'long',\n                                day: 'numeric',\n                              })}\n                            </option>\n\n                          )))}\n                      </select>\n                    </td>\n                  </tr>\n                  <tr>\n                    <td colSpan={2}>\n                      <button style={{ marginTop: \"10px\", borderRadius: 0, width: \"100%\" }}>\n                        Book an Appointment\n                      </button>\n                    </td>\n                  </tr>\n                </tbody>\n              </table>\n            ))}\n          </>\n\n          <h1>Existing Appointments </h1>\n          <table>\n            <tr>\n              <td rowSpan={2} width={200} style={{ border: \"1px solid lightgray\", backgroundColor: \"lightgray\", paddingLeft: \"10px\" }}>11/06/23 MONDAY <br /> 2:00-5:00 PM</td>\n              <td><Link to=\"/patresched\"><button style={{ borderRadius: 0, width: \"200px\" }}>Reschedule</button></Link></td>\n            </tr>\n            <tr><td><button className='cancel'>Cancel</button></td></tr>\n          </table>\n        </div>\n      </div>\n      <PatientFooter />\n    </div >\n  );\n};\n\nexport default SetAppointment;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}