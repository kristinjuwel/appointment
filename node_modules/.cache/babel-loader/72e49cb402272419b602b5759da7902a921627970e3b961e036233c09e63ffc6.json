{"ast":null,"code":"var _jsxFileName = \"D:\\\\3rd Year 1st Sem\\\\DocClickConnect\\\\appointment\\\\src\\\\components\\\\AvatarSelection.jsx\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport '../../src/styles/Profile.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AvatarSelectionPopup = ({\n  avatars,\n  selectedAvatar,\n  onSelectAvatar,\n  onClose\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"avatar-selection-popup\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"avatar-selection-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Select Profile Picture\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: onClose,\n        children: \"Close\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"avatar-selection-grid\",\n      children: avatars.map((avatar, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `avatar-item ${selectedAvatar === avatar ? 'selected' : ''}`,\n        onClick: () => onSelectAvatar(avatar),\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: avatar,\n          alt: `Avatar ${index + 1}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 13\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 5\n  }, this);\n};\n_c = AvatarSelectionPopup;\nAvatarSelectionPopup.propTypes = {\n  avatars: PropTypes.array.isRequired,\n  selectedAvatar: PropTypes.string,\n  onSelectAvatar: PropTypes.func.isRequired,\n  onClose: PropTypes.func.isRequired\n};\nexport default AvatarSelectionPopup;\nvar _c;\n$RefreshReg$(_c, \"AvatarSelectionPopup\");","map":{"version":3,"names":["React","PropTypes","jsxDEV","_jsxDEV","AvatarSelectionPopup","avatars","selectedAvatar","onSelectAvatar","onClose","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","map","avatar","index","src","alt","_c","propTypes","array","isRequired","string","func","$RefreshReg$"],"sources":["D:/3rd Year 1st Sem/DocClickConnect/appointment/src/components/AvatarSelection.jsx"],"sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport '../../src/styles/Profile.css';\r\n\r\n\r\nconst AvatarSelectionPopup = ({ avatars, selectedAvatar, onSelectAvatar, onClose }) => {\r\n  return (\r\n    <div className=\"avatar-selection-popup\">\r\n      <div className=\"avatar-selection-header\">\r\n        <h2>Select Profile Picture</h2>\r\n        <button onClick={onClose}>Close</button>\r\n      </div>\r\n      <div className=\"avatar-selection-grid\">\r\n        {avatars.map((avatar, index) => (\r\n          <div\r\n            key={index}\r\n            className={`avatar-item ${selectedAvatar === avatar ? 'selected' : ''}`}\r\n            onClick={() => onSelectAvatar(avatar)}\r\n          >\r\n            <img src={avatar} alt={`Avatar ${index + 1}`} />\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nAvatarSelectionPopup.propTypes = {\r\n  avatars: PropTypes.array.isRequired,\r\n  selectedAvatar: PropTypes.string,\r\n  onSelectAvatar: PropTypes.func.isRequired,\r\n  onClose: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default AvatarSelectionPopup;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,SAAS,MAAM,YAAY;AAClC,OAAO,8BAA8B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAGtC,MAAMC,oBAAoB,GAAGA,CAAC;EAAEC,OAAO;EAAEC,cAAc;EAAEC,cAAc;EAAEC;AAAQ,CAAC,KAAK;EACrF,oBACEL,OAAA;IAAKM,SAAS,EAAC,wBAAwB;IAAAC,QAAA,gBACrCP,OAAA;MAAKM,SAAS,EAAC,yBAAyB;MAAAC,QAAA,gBACtCP,OAAA;QAAAO,QAAA,EAAI;MAAsB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC/BX,OAAA;QAAQY,OAAO,EAAEP,OAAQ;QAAAE,QAAA,EAAC;MAAK;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACrC,CAAC,eACNX,OAAA;MAAKM,SAAS,EAAC,uBAAuB;MAAAC,QAAA,EACnCL,OAAO,CAACW,GAAG,CAAC,CAACC,MAAM,EAAEC,KAAK,kBACzBf,OAAA;QAEEM,SAAS,EAAG,eAAcH,cAAc,KAAKW,MAAM,GAAG,UAAU,GAAG,EAAG,EAAE;QACxEF,OAAO,EAAEA,CAAA,KAAMR,cAAc,CAACU,MAAM,CAAE;QAAAP,QAAA,eAEtCP,OAAA;UAAKgB,GAAG,EAAEF,MAAO;UAACG,GAAG,EAAG,UAASF,KAAK,GAAG,CAAE;QAAE;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAC,GAJ3CI,KAAK;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAKP,CACN;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACO,EAAA,GApBIjB,oBAAoB;AAsB1BA,oBAAoB,CAACkB,SAAS,GAAG;EAC/BjB,OAAO,EAAEJ,SAAS,CAACsB,KAAK,CAACC,UAAU;EACnClB,cAAc,EAAEL,SAAS,CAACwB,MAAM;EAChClB,cAAc,EAAEN,SAAS,CAACyB,IAAI,CAACF,UAAU;EACzChB,OAAO,EAAEP,SAAS,CAACyB,IAAI,CAACF;AAC1B,CAAC;AAED,eAAepB,oBAAoB;AAAC,IAAAiB,EAAA;AAAAM,YAAA,CAAAN,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}