{"ast":null,"code":"var _jsxFileName = \"D:\\\\3rd Year 1st Sem\\\\DocClickConnect\\\\appointment\\\\src\\\\pages\\\\AppointmentPages\\\\SetAppointment.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport PatientNavBar from '../../components/PatientNavBar';\nimport PatientFooter from '../../components/PatientFooter';\nimport DoctorCalendar from '../../components/DoctorCalendar';\nimport { useParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SetAppointment = () => {\n  _s();\n  const {\n    doctorId\n  } = useParams();\n  const [error, setError] = useState(null);\n  const [selectedDay, setSelectedDay] = useState('');\n  const [selectedSched, setSelectedSched] = useState('');\n  const [selectedDate, setSelectedDate] = useState('');\n  const [selectedClinicId, setSelectedClinicId] = useState('');\n  const [schedules, setSchedules] = useState([{\n    scheduleId: '',\n    clinicId: '',\n    avatar: '',\n    doctorName: '',\n    specialization: '',\n    contactNumber: '',\n    docEmail: '',\n    scheduleDay: '',\n    start: new Date(),\n    end: new Date(),\n    // 5:00 PM\n    slots: '',\n    clinicName: '',\n    address: '',\n    number: '',\n    email: ''\n  }]);\n  useEffect(() => {\n    const fetchDoctorSchedules = async () => {\n      try {\n        const response = await fetch(`http://localhost:8080/docsched/${doctorId}`);\n        if (response.ok) {\n          const data = await response.json();\n          const formattedSchedules = data.map(schedule => ({\n            scheduleId: schedule.scheduleId,\n            clinicId: schedule.clinicId,\n            avatar: schedule.doctor.user.avatar,\n            doctorName: `${schedule.doctor.user.firstName} ${schedule.doctor.user.lastName}`,\n            specialization: schedule.doctor.specialization,\n            contactNumber: schedule.doctor.user.contactNumber,\n            docEmail: schedule.doctor.user.email,\n            scheduleDay: schedule.scheduleDay,\n            start: schedule.startTime,\n            end: schedule.endTime,\n            slots: schedule.slots,\n            clinicName: schedule.clinic.name,\n            address: schedule.clinic.address,\n            number: schedule.clinic.officeNumber,\n            email: schedule.clinic.officeEmail\n          }));\n          setSchedules(formattedSchedules);\n        } else {\n          setError('Error fetching appointment');\n        }\n      } catch (error) {\n        setError('Error fetching appointment');\n      }\n    };\n    fetchDoctorSchedules();\n  }, [doctorId]);\n  const convertMilitaryToStandardTime = militaryTime => {\n    if (typeof militaryTime !== 'string' || militaryTime.length !== 8) {\n      return 'Invalid Time';\n    }\n    const [hours, minutes] = militaryTime.split(':');\n    const parsedHours = parseInt(hours, 10);\n    const period = parsedHours >= 12 ? 'PM' : 'AM';\n    const formattedHours = parsedHours % 12 || 12;\n    return `${formattedHours}:${minutes} ${period}`;\n  };\n  const getNearestDays = (selectedDay, numberOfOccurrences) => {\n    const today = new Date();\n    const daysInWeek = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];\n    const selectedDayIndex = daysInWeek.findIndex(day => day.toLowerCase() === selectedDay.toLowerCase());\n    if (selectedDayIndex === -1) {\n      return []; // Invalid selected day\n    }\n\n    const nearestDays = [];\n    let currentDate = new Date(today);\n    while (nearestDays.length < numberOfOccurrences) {\n      if (currentDate.getDay() === selectedDayIndex) {\n        nearestDays.push(new Date(currentDate));\n      }\n      currentDate.setDate(currentDate.getDate() + 1);\n    }\n    return nearestDays;\n  };\n  const nearestDays = getNearestDays(selectedDay, 5);\n  const uniqueClinicIds = Array.from(new Set(schedules.map(schedule => schedule.clinicId)));\n  const selectedClinic = schedules.find(schedule => schedule.clinicId === selectedClinicId);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(PatientNavBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"flex\",\n        margin: \"auto\",\n        width: \"100vw\",\n        justifyContent: \"center\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(DoctorCalendar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginLeft: \"30px\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"select\", {\n          name: \"clinicSelector\",\n          id: \"clinicSelector\",\n          style: {\n            width: \"250px\",\n            marginBottom: \"10px\"\n          },\n          value: selectedClinicId,\n          onChange: e => {\n            setSelectedClinicId(e.target.value);\n            console.log(\"Selected Clinic changed:\", e.target.value);\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Select Clinic\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 11\n          }, this), uniqueClinicIds.map(clinicId => {\n            var _schedules$find;\n            return /*#__PURE__*/_jsxDEV(\"option\", {\n              value: clinicId,\n              children: (_schedules$find = schedules.find(schedule => schedule.clinicId === clinicId)) === null || _schedules$find === void 0 ? void 0 : _schedules$find.clinicName\n            }, clinicId, false, {\n              fileName: _jsxFileName,\n              lineNumber: 137,\n              columnNumber: 13\n            }, this);\n          })]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 9\n        }, this), selectedClinicId && /*#__PURE__*/_jsxDEV(\"table\", {\n          children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n              children: /*#__PURE__*/_jsxDEV(\"td\", {\n                colSpan: 2,\n                children: /*#__PURE__*/_jsxDEV(\"h2\", {\n                  style: {\n                    color: \"#0094d4\"\n                  },\n                  children: [\" \", selectedClinic === null || selectedClinic === void 0 ? void 0 : selectedClinic.clinicName, \" \"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 148,\n                  columnNumber: 33\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 148,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 147,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n                  children: \"Address:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 151,\n                  columnNumber: 21\n                }, this), \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 151,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: [\" \", selectedClinic === null || selectedClinic === void 0 ? void 0 : selectedClinic.address, \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 152,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 150,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n                  children: \" Contact Number:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 155,\n                  columnNumber: 21\n                }, this), \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 155,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: [\" \", selectedClinic === null || selectedClinic === void 0 ? void 0 : selectedClinic.number, \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 156,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 154,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"h5\", {\n                  children: \" Email Address:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 159,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 159,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: [\" \", selectedClinic === null || selectedClinic === void 0 ? void 0 : selectedClinic.officeEmail, \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 160,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 158,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"tr\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 162,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                style: {\n                  width: \"150px\"\n                },\n                children: \"Day: \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 164,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"select\", {\n                  name: \"sched\",\n                  id: `day-${selectedClinic.clinicId}`,\n                  style: {\n                    width: \"250px\"\n                  },\n                  value: selectedDay,\n                  onChange: e => {\n                    setSelectedDay(e.target.value);\n                    console.log(\"Selected Day changed:\", e.target.value);\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"\",\n                    children: \"Select Day\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 177,\n                    columnNumber: 27\n                  }, this), [...new Set(schedules.filter(schedule => schedule.clinicId === selectedClinic.clinicId).map(schedule => schedule.scheduleDay))].map(scheduleDay => /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: scheduleDay,\n                    children: scheduleDay\n                  }, `${clinicId}-${scheduleDay}`, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 183,\n                    columnNumber: 31\n                  }, this))]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 166,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 165,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 163,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                style: {\n                  width: \"150px\"\n                },\n                children: \"Timeslot: \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 194,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"select\", {\n                  name: \"timeslot\",\n                  id: `timeslot-${clinicId}`,\n                  style: {\n                    width: \"250px\"\n                  },\n                  value: selectedSched,\n                  onChange: e => {\n                    const selectedTimeslot = e.target.value;\n                    setSelectedSched(selectedTimeslot);\n                    console.log('Selected Schedule ID:', selectedTimeslot);\n                  },\n                  children: schedules.filter(schedule => schedule.clinicId === clinicId && schedule.scheduleDay === selectedDay).map(schedule => /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: schedule.scheduleId,\n                    children: [convertMilitaryToStandardTime(schedule.start), \" - \", convertMilitaryToStandardTime(schedule.end)]\n                  }, schedule.scheduleId, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 211,\n                    columnNumber: 31\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 196,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 195,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 193,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                style: {\n                  width: \"150px\"\n                },\n                children: \"Date: \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 219,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"select\", {\n                  name: \"sched\",\n                  id: `sched-${schedule.clinicId}`,\n                  style: {\n                    width: \"250px\"\n                  },\n                  value: selectedDate,\n                  onChange: e => {\n                    const selectedDateString = e.target.value;\n                    // Save the date in 'yyyy-mm-dd' format to selectedDate\n                    setSelectedDate(selectedDateString);\n                    console.log('Selected Date:', selectedDateString);\n                  },\n                  children: schedules.filter(schedule => schedule.clinicId === selectedClinic.clinicId).flatMap(schedule => nearestDays.map(date => /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: date.toISOString().split('T')[0],\n                    children: date.toLocaleDateString('en-US', {\n                      year: 'numeric',\n                      month: 'long',\n                      day: 'numeric'\n                    })\n                  }, `${clinicId}-${schedule.scheduleId}-${date.toISOString()}`, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 237,\n                    columnNumber: 31\n                  }, this)))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 221,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 220,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 218,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: /*#__PURE__*/_jsxDEV(\"td\", {\n                colSpan: 2,\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  style: {\n                    marginTop: \"10px\",\n                    borderRadius: 0,\n                    width: \"100%\"\n                  },\n                  children: \"Book an Appointment\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 254,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 253,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 252,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Existing Appointments \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 264,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n          children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              rowSpan: 2,\n              width: 200,\n              style: {\n                border: \"1px solid lightgray\",\n                backgroundColor: \"lightgray\",\n                paddingLeft: \"10px\"\n              },\n              children: [\"11/06/23 MONDAY \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 267,\n                columnNumber: 152\n              }, this), \" 2:00-5:00 PM\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 267,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(Link, {\n                to: \"/patresched\",\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  style: {\n                    borderRadius: 0,\n                    width: \"200px\"\n                  },\n                  children: \"Reschedule\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 268,\n                  columnNumber: 42\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 268,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 268,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 266,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"cancel\",\n                children: \"Cancel\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 270,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 270,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 270,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 265,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(PatientFooter, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 274,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 118,\n    columnNumber: 5\n  }, this);\n};\n_s(SetAppointment, \"IkoLLHT9sZMw7XoKPnAZH6kRU+w=\", false, function () {\n  return [useParams];\n});\n_c = SetAppointment;\nexport default SetAppointment;\nvar _c;\n$RefreshReg$(_c, \"SetAppointment\");","map":{"version":3,"names":["React","useState","useEffect","Link","PatientNavBar","PatientFooter","DoctorCalendar","useParams","jsxDEV","_jsxDEV","SetAppointment","_s","doctorId","error","setError","selectedDay","setSelectedDay","selectedSched","setSelectedSched","selectedDate","setSelectedDate","selectedClinicId","setSelectedClinicId","schedules","setSchedules","scheduleId","clinicId","avatar","doctorName","specialization","contactNumber","docEmail","scheduleDay","start","Date","end","slots","clinicName","address","number","email","fetchDoctorSchedules","response","fetch","ok","data","json","formattedSchedules","map","schedule","doctor","user","firstName","lastName","startTime","endTime","clinic","name","officeNumber","officeEmail","convertMilitaryToStandardTime","militaryTime","length","hours","minutes","split","parsedHours","parseInt","period","formattedHours","getNearestDays","numberOfOccurrences","today","daysInWeek","selectedDayIndex","findIndex","day","toLowerCase","nearestDays","currentDate","getDay","push","setDate","getDate","uniqueClinicIds","Array","from","Set","selectedClinic","find","children","fileName","_jsxFileName","lineNumber","columnNumber","style","display","margin","width","justifyContent","marginLeft","id","marginBottom","value","onChange","e","target","console","log","_schedules$find","colSpan","color","filter","selectedTimeslot","selectedDateString","flatMap","date","toISOString","toLocaleDateString","year","month","marginTop","borderRadius","rowSpan","border","backgroundColor","paddingLeft","to","className","_c","$RefreshReg$"],"sources":["D:/3rd Year 1st Sem/DocClickConnect/appointment/src/pages/AppointmentPages/SetAppointment.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport PatientNavBar from '../../components/PatientNavBar';\nimport PatientFooter from '../../components/PatientFooter';\nimport DoctorCalendar from '../../components/DoctorCalendar';\nimport { useParams } from 'react-router-dom';\n\nconst SetAppointment = () => {\n  const { doctorId } = useParams();\n  const [error, setError] = useState(null);\n  const [selectedDay, setSelectedDay] = useState('');\n  const [selectedSched, setSelectedSched] = useState('');\n  const [selectedDate, setSelectedDate] = useState('');\n  const [selectedClinicId, setSelectedClinicId] = useState('');\n  const [schedules, setSchedules] = useState([\n    {\n      scheduleId: '',\n      clinicId: '',\n      avatar: '',\n      doctorName: '',\n      specialization: '',\n      contactNumber: '',\n      docEmail: '',\n      scheduleDay: '',\n      start: new Date(),\n      end: new Date(),  // 5:00 PM\n      slots: '',\n      clinicName: '',\n      address: '',\n      number: '',\n      email: ''\n    },\n  ]);\n\n  useEffect(() => {\n    const fetchDoctorSchedules = async () => {\n      try {\n        const response = await fetch(`http://localhost:8080/docsched/${doctorId}`);\n\n        if (response.ok) {\n          const data = await response.json();\n\n          const formattedSchedules = data.map(schedule => ({\n            scheduleId: schedule.scheduleId,\n            clinicId: schedule.clinicId,\n            avatar: schedule.doctor.user.avatar,\n            doctorName: `${schedule.doctor.user.firstName} ${schedule.doctor.user.lastName}`,\n            specialization: schedule.doctor.specialization,\n            contactNumber: schedule.doctor.user.contactNumber,\n            docEmail: schedule.doctor.user.email,\n            scheduleDay: schedule.scheduleDay,\n            start: schedule.startTime,\n            end: schedule.endTime,\n            slots: schedule.slots,\n            clinicName: schedule.clinic.name,\n            address: schedule.clinic.address,\n            number: schedule.clinic.officeNumber,\n            email: schedule.clinic.officeEmail\n          }));\n\n          setSchedules(formattedSchedules);\n\n        } else {\n          setError('Error fetching appointment');\n        }\n      } catch (error) {\n        setError('Error fetching appointment');\n      }\n    };\n\n    fetchDoctorSchedules();\n  }, [doctorId]);\n\n  const convertMilitaryToStandardTime = (militaryTime) => {\n    if (typeof militaryTime !== 'string' || militaryTime.length !== 8) {\n      return 'Invalid Time';\n    }\n\n    const [hours, minutes] = militaryTime.split(':');\n    const parsedHours = parseInt(hours, 10);\n    const period = parsedHours >= 12 ? 'PM' : 'AM';\n    const formattedHours = parsedHours % 12 || 12;\n    return `${formattedHours}:${minutes} ${period}`;\n  };\n\n\n\n\n\n\n  const getNearestDays = (selectedDay, numberOfOccurrences) => {\n    const today = new Date();\n    const daysInWeek = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];\n    const selectedDayIndex = daysInWeek.findIndex(day => day.toLowerCase() === selectedDay.toLowerCase());\n\n    if (selectedDayIndex === -1) {\n      return []; // Invalid selected day\n    }\n\n    const nearestDays = [];\n    let currentDate = new Date(today);\n\n    while (nearestDays.length < numberOfOccurrences) {\n      if (currentDate.getDay() === selectedDayIndex) {\n        nearestDays.push(new Date(currentDate));\n      }\n      currentDate.setDate(currentDate.getDate() + 1);\n    }\n\n    return nearestDays;\n  };\n\n  const nearestDays = getNearestDays(selectedDay, 5);\n  const uniqueClinicIds = Array.from(new Set(schedules.map(schedule => schedule.clinicId)));\n  const selectedClinic = schedules.find(schedule => schedule.clinicId === selectedClinicId);\n\n  return (\n    <div>\n      <PatientNavBar />\n      <div style={{ display: \"flex\", margin: \"auto\", width: \"100vw\", justifyContent: \"center\" }}>\n        <DoctorCalendar />\n\n        <div style={{ marginLeft: \"30px\" }}>\n        {/* Clinic Selector */}\n        <select\n          name=\"clinicSelector\"\n          id=\"clinicSelector\"\n          style={{ width: \"250px\", marginBottom: \"10px\" }}\n          value={selectedClinicId}\n          onChange={(e) => {\n            setSelectedClinicId(e.target.value);\n            console.log(\"Selected Clinic changed:\", e.target.value);\n          }}\n        >\n          <option value=\"\">Select Clinic</option>\n          {uniqueClinicIds.map(clinicId => (\n            <option key={clinicId} value={clinicId}>\n              {schedules.find(schedule => schedule.clinicId === clinicId)?.clinicName}\n            </option>\n          ))}\n        </select>\n\n        {/* Display Clinic Details */}\n        {selectedClinicId && (\n          <table>\n            <tbody>\n              <tr>\n                <td colSpan={2}><h2 style={{ color: \"#0094d4\" }}> {selectedClinic?.clinicName} </h2></td>\n              </tr>\n              <tr>\n                <td><h5>Address:</h5> </td>\n                <td> {selectedClinic?.address} </td>\n              </tr>\n              <tr>\n                <td><h5> Contact Number:</h5> </td>\n                <td> {selectedClinic?.number} </td>\n              </tr>\n              <tr>\n                <td><h5> Email Address:</h5></td>\n                <td> {selectedClinic?.officeEmail} </td>\n              </tr>\n              <tr></tr>\n                    <tr>\n                      <td style={{ width: \"150px\" }}>Day: </td>\n                      <td>\n                        <select\n                          name=\"sched\"\n                          id={`day-${selectedClinic.clinicId}`}\n                          style={{ width: \"250px\" }}\n                          value={selectedDay}\n                          onChange={(e) => {\n                            setSelectedDay(e.target.value);\n                            console.log(\"Selected Day changed:\", e.target.value);\n                          }}\n                        >\n                          {/* Initial blank option */}\n                          <option value=\"\">Select Day</option>\n                          {/* Options for the selected clinic's unique days */}\n                          {[...new Set(schedules\n                            .filter(schedule => schedule.clinicId === selectedClinic.clinicId)\n                            .map(schedule => schedule.scheduleDay))]\n                            .map(scheduleDay => (\n                              <option key={`${clinicId}-${scheduleDay}`} value={scheduleDay}>\n                                {scheduleDay}\n                              </option>\n                            ))}\n                        </select>\n\n\n\n                      </td>\n                    </tr>\n                    <tr>\n                      <td style={{ width: \"150px\" }}>Timeslot: </td>\n                      <td>\n                        <select\n                          name=\"timeslot\"\n                          id={`timeslot-${clinicId}`}\n                          style={{ width: \"250px\" }}\n                          value={selectedSched}\n                          onChange={(e) => {\n                            const selectedTimeslot = e.target.value;\n                            setSelectedSched(selectedTimeslot);\n                            console.log('Selected Schedule ID:', selectedTimeslot);\n                          }}\n                        >\n                          {/* Options for the selected clinic's timeslots */}\n                          {schedules\n                            .filter(schedule => schedule.clinicId === clinicId && schedule.scheduleDay === selectedDay)\n                            .map(schedule => (\n                              <option key={schedule.scheduleId} value={schedule.scheduleId}>\n                                {convertMilitaryToStandardTime(schedule.start)} - {convertMilitaryToStandardTime(schedule.end)}\n                              </option>\n                            ))}\n                        </select>\n                      </td>\n                    </tr>\n                    <tr>\n                      <td style={{ width: \"150px\" }}>Date: </td>\n                      <td>\n                        <select\n                          name=\"sched\"\n                          id={`sched-${schedule.clinicId}`}\n                          style={{ width: \"250px\" }}\n                          value={selectedDate}\n                          onChange={(e) => {\n                            const selectedDateString = e.target.value;\n                            // Save the date in 'yyyy-mm-dd' format to selectedDate\n                            setSelectedDate(selectedDateString);\n                            console.log('Selected Date:', selectedDateString);\n                          }}\n                        >\n                          {/* Options for the selected clinic's nearest days */}\n                          {schedules\n                            .filter(schedule => schedule.clinicId === selectedClinic.clinicId)\n                            .flatMap(schedule => nearestDays.map(date => (\n                              <option\n                                key={`${clinicId}-${schedule.scheduleId}-${date.toISOString()}`}\n                                value={date.toISOString().split('T')[0]}\n                              >\n                                {date.toLocaleDateString('en-US', {\n                                  year: 'numeric',\n                                  month: 'long',\n                                  day: 'numeric',\n                                })}\n                              </option>\n\n                            )))}\n                        </select>\n                      </td>\n                    </tr>\n                    <tr>\n                      <td colSpan={2}>\n                        <button style={{ marginTop: \"10px\", borderRadius: 0, width: \"100%\" }}>\n                          Book an Appointment\n                        </button>\n                      </td>\n                    </tr>\n                  </tbody>\n                </table>\n        )}\n\n\n          <h1>Existing Appointments </h1>\n          <table>\n            <tr>\n              <td rowSpan={2} width={200} style={{ border: \"1px solid lightgray\", backgroundColor: \"lightgray\", paddingLeft: \"10px\" }}>11/06/23 MONDAY <br /> 2:00-5:00 PM</td>\n              <td><Link to=\"/patresched\"><button style={{ borderRadius: 0, width: \"200px\" }}>Reschedule</button></Link></td>\n            </tr>\n            <tr><td><button className='cancel'>Cancel</button></td></tr>\n          </table>\n        </div>\n      </div>\n      <PatientFooter />\n    </div >\n  );\n};\n\nexport default SetAppointment;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}