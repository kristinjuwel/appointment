{"ast":null,"code":"var _jsxFileName = \"D:\\\\3rd Year 1st Sem\\\\DocClickConnect\\\\appointment\\\\src\\\\pages\\\\AppointmentPages\\\\SetAppointment.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport PatientNavBar from '../../components/PatientNavBar';\nimport PatientFooter from '../../components/PatientFooter';\nimport DoctorCalendar from '../../components/DoctorCalendar';\nimport { useParams } from 'react-router-dom';\nimport { startOfWeek, addWeeks, addDays, format } from 'date-fns';\nimport HomeFooter from '../../components/HomeFooter';\nimport HomeNavbar from '../../components/HomeNavbar';\nimport { Calendar, dateFnsLocalizer } from 'react-big-calendar';\nimport parse from 'date-fns/parse';\nimport getDay from 'date-fns/getDay';\nimport \"react-big-calendar/lib/css/react-big-calendar.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SetAppointment = () => {\n  _s();\n  var _schedules$find, _schedules$find2, _schedules$find3;\n  const {\n    doctorId\n  } = useParams();\n  const [error, setError] = useState(null);\n  const [selectedDay, setSelectedDay] = useState('');\n  const [selectedSched, setSelectedSched] = useState('');\n  const [selectedDate, setSelectedDate] = useState('');\n  const [status] = useState(\"Scheduled by Patient\");\n  const [selectedClinicId, setSelectedClinicId] = useState('');\n  const [patientUserId, setPatientUserId] = useState('');\n  const [isPatientLoggedIn, setIsPatientLoggedIn] = useState('');\n  const [isError, setIsError] = useState('');\n  const [schedules, setSchedules] = useState([{\n    scheduleId: '',\n    clinicId: '',\n    avatar: '',\n    doctorName: '',\n    specialization: '',\n    contactNumber: '',\n    docEmail: '',\n    scheduleDay: '',\n    start: new Date(),\n    end: new Date(),\n    // 5:00 PM\n    slots: '',\n    clinicName: '',\n    address: '',\n    number: '',\n    email: ''\n  }]);\n  const [appointments, setAppointments] = useState([{\n    title: '',\n    start: new Date(),\n    end: new Date(),\n    // 5:00 PM\n    appointmentId: '',\n    appointmentStatus: ''\n  }]);\n  useEffect(() => {\n    // Replace 'http://localhost:8080' with your actual API URL\n    fetch('http://localhost:8080/checkLoggedInPatient').then(response => {\n      if (response.ok) {\n        return response.json();\n      }\n      throw new Error('Network response was not ok');\n    }).then(data => {\n      setPatientUserId(data);\n      // Once you have the patientUserId, make another request to get appointments\n      fetch(`http://localhost:8080/appointments?patientUserId=${data}`).then(appointmentsResponse => {\n        if (appointmentsResponse.ok) {\n          return appointmentsResponse.json();\n        }\n        throw new Error('Network response was not ok');\n      }).then(appointmentsData => {\n        const formattedAppointments = appointmentsData.map(appointment => {\n          // Extract date and time components\n          const [year, month, day] = appointment.scheduleDate.split('-').map(Number);\n          const [hours, minutes] = appointment.startTime.split(':').map(Number);\n          const [hours2, minutes2] = appointment.endTime.split(':').map(Number);\n\n          // Create Date objects for start and end times\n          const startDate = new Date(year, month - 1, day, hours, minutes);\n          const endDate = new Date(year, month - 1, day, hours2, minutes2);\n\n          // Create an appointment object\n          return {\n            title: 'Dr. ' + appointment.doctorName,\n            start: startDate,\n            end: endDate,\n            appointmentId: appointment.transactionNo,\n            appointmentStatus: appointment.status\n          };\n        });\n        setAppointments(formattedAppointments);\n      }).catch(error => {\n        // Handle errors\n        console.error(error);\n      });\n    }).catch(error => {\n      setIsError(true);\n      console.error('Error:', error);\n    });\n  }, []);\n  const locales = {\n    \"en-US\": require(\"date-fns/locale/en-US\")\n  };\n  const localizer = dateFnsLocalizer({\n    format,\n    parse,\n    startOfWeek,\n    getDay,\n    locales\n  });\n  const handleCancel = async appointmentId => {\n    try {\n      const response = await fetch(`http://localhost:8080/appointmentChange/${appointmentId}?newStatus=Cancelled`, {\n        method: 'PUT'\n      });\n      if (response.ok) {\n        // Handle success if needed\n        console.log('Appointment cancelled successfully');\n        window.location.reload();\n      } else {\n        setIsError(true);\n      }\n    } catch (error) {\n      console.error('Error cancelling appointment:', error);\n      setIsError(true);\n    }\n  };\n  const handleReschedule = async appointmentId => {\n    window.location.href = `/patresched/${appointmentId}`;\n  };\n  useEffect(() => {\n    const fetchDoctorSchedules = async () => {\n      try {\n        const response = await fetch(`http://localhost:8080/docsched/${doctorId}`);\n        if (response.ok) {\n          const data = await response.json();\n          const formattedSchedules = data.map(schedule => ({\n            scheduleId: schedule.scheduleId,\n            clinicId: schedule.clinicId,\n            avatar: schedule.doctor.user.avatar,\n            doctorName: `${schedule.doctor.user.firstName} ${schedule.doctor.user.lastName}`,\n            specialization: schedule.doctor.specialization,\n            contactNumber: schedule.doctor.user.contactNumber,\n            docEmail: schedule.doctor.user.email,\n            scheduleDay: schedule.scheduleDay,\n            start: schedule.startTime,\n            end: schedule.endTime,\n            slots: schedule.slots,\n            clinicName: schedule.clinic.name,\n            address: schedule.clinic.address,\n            number: schedule.clinic.officeNumber,\n            email: schedule.clinic.officeEmail\n          }));\n          setSchedules(formattedSchedules);\n        } else {\n          setError('Error fetching appointment');\n        }\n      } catch (error) {\n        setError('Error fetching appointment');\n      }\n    };\n    fetchDoctorSchedules();\n  }, [doctorId]);\n  const convertMilitaryToStandardTime = militaryTime => {\n    if (typeof militaryTime !== 'string' || militaryTime.length !== 8) {\n      return 'Invalid Time';\n    }\n    const [hours, minutes] = militaryTime.split(':');\n    const parsedHours = parseInt(hours, 10);\n    const period = parsedHours >= 12 ? 'PM' : 'AM';\n    const formattedHours = parsedHours % 12 || 12;\n    return `${formattedHours}:${minutes} ${period}`;\n  };\n  const getNearestDays = (selectedDay, numberOfOccurrences) => {\n    const today = new Date();\n    const daysInWeek = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];\n    const selectedDayIndex = daysInWeek.findIndex(day => day === selectedDay);\n    if (selectedDayIndex === -1) {\n      return []; // Invalid selected day\n    }\n\n    const nearestDays = Array.from({\n      length: numberOfOccurrences\n    }, (_, index) => {\n      const currentWeek = startOfWeek(today, {\n        weekStartsOn: 0\n      }); // Always start from Sunday\n      const startOfSelectedWeek = addWeeks(currentWeek, index);\n\n      // Find the next occurrence of the selected day in the current week\n      let nextDay = addDays(startOfSelectedWeek, selectedDayIndex - currentWeek.getDay());\n      if (nextDay < today) {\n        // If the selected day has already passed in the current week, move to the next week\n        nextDay = addDays(startOfSelectedWeek, selectedDayIndex - currentWeek.getDay() + 7);\n      }\n      return format(nextDay, 'yyyy-MM-dd');\n    });\n    return nearestDays;\n  };\n  const uniqueClinics = [...new Set(schedules.map(schedule => schedule.clinicName))];\n  const handleChangeClinic = clinicName => {\n    const selectedClinic = schedules.find(schedule => schedule.clinicName === clinicName);\n    setSelectedClinicId((selectedClinic === null || selectedClinic === void 0 ? void 0 : selectedClinic.clinicId) || '');\n    setSelectedDay('');\n    setSelectedDate('');\n  };\n  useEffect(() => {\n    const fetchLoggedInPatientId = async () => {\n      try {\n        const response = await fetch('http://localhost:8080/checkLoggedInPatient');\n        if (response.ok) {\n          const userId = await response.json();\n          setPatientUserId(userId);\n          setIsPatientLoggedIn(true);\n        } else {\n          setError('Failed to fetch logged-in patient user ID.');\n          setIsPatientLoggedIn(false);\n        }\n      } catch (error) {\n        setError('Error fetching logged-in patient user ID:', error);\n        setIsPatientLoggedIn(false);\n        // Handle the error or provide feedback to the user\n      }\n    };\n\n    fetchLoggedInPatientId();\n  }, []); // The empty dependency array ensures that this effect runs once when the component mounts\n\n  // Change this line\n\n  if (!isPatientLoggedIn) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(HomeNavbar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          textAlign: 'center',\n          marginTop: '50px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"No patient is logged in.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 265,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/login\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            children: \"Login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 266,\n            columnNumber: 27\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 266,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(HomeFooter, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 268,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 5\n    }, this);\n  }\n  const handleBookAppointment = async () => {\n    try {\n      // Validate your appointment data here if needed\n\n      const url = `http://localhost:8080/appointment?patientId=${patientUserId}&scheduleId=${selectedSched}&scheduleDate=${selectedDate}&status=${status}`;\n      const response = await fetch(url, {\n        method: 'POST'\n      });\n      if (response.ok) {\n        console.log('Appointment added successfully!');\n        console.log('Clinic ID:', selectedClinicId);\n        console.log('Selected Day:', selectedDay);\n        console.log('Selected Timeslot:', selectedSched);\n        console.log('Selected Date:', selectedDate);\n        // You can handle any other logic after a successful appointment addition here\n      } else {\n        setError('Failed to add appointment.');\n        // Handle the error or provide feedback to the user\n      }\n    } catch (error) {\n      setError('Error adding appointment:', error);\n      // Handle the error or provide feedback to the user\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(PatientNavBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 304,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"flex\",\n        margin: \"auto\",\n        width: \"100vw\",\n        justifyContent: \"center\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(DoctorCalendar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 306,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginLeft: \"30px\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: [\"Dr. \", schedules[0].doctorName]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 309,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [\"Specialization: \", schedules[0].specialization]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 310,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [\"Contact Number: \", schedules[0].contactNumber]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 311,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [\"Email Address: \", schedules[0].docEmail]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 312,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 313,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n          children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"h2\", {\n                style: {\n                  color: \"#0094d4\"\n                },\n                children: \"Clinic: \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 318,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 317,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"select\", {\n                name: \"clinic\",\n                id: \"clinic\",\n                style: {\n                  width: \"250px\",\n                  fontSize: \"1.5rem\",\n                  fontWeight: \"bold\",\n                  color: \"#0094d4\"\n                },\n                onChange: e => handleChangeClinic(e.target.value),\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"\",\n                  children: \"Select Clinic\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 332,\n                  columnNumber: 19\n                }, this), uniqueClinics.map((clinicName, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: clinicName,\n                  children: clinicName\n                }, index, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 334,\n                  columnNumber: 21\n                }, this))]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 321,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 320,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 316,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"h5\", {\n                children: \"Address:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 342,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 342,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: (_schedules$find = schedules.find(schedule => schedule.clinicId === selectedClinicId)) === null || _schedules$find === void 0 ? void 0 : _schedules$find.address\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 343,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 341,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"h5\", {\n                children: \"Contact Number:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 346,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 346,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: (_schedules$find2 = schedules.find(schedule => schedule.clinicId === selectedClinicId)) === null || _schedules$find2 === void 0 ? void 0 : _schedules$find2.number\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 347,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 345,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"h5\", {\n                children: \"Email Address:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 350,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 350,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: (_schedules$find3 = schedules.find(schedule => schedule.clinicId === selectedClinicId)) === null || _schedules$find3 === void 0 ? void 0 : _schedules$find3.email\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 351,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 349,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              style: {\n                width: \"150px\"\n              },\n              children: \"Day: \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 354,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"select\", {\n                name: \"sched\",\n                id: `day-${selectedClinicId}`,\n                style: {\n                  width: \"250px\"\n                },\n                value: selectedDay,\n                onChange: e => {\n                  setSelectedDay(e.target.value);\n                  setSelectedSched('');\n                  setSelectedDate('');\n                  console.log(\"Selected Day changed:\", e.target.value);\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"\",\n                  children: \"Select Day\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 369,\n                  columnNumber: 19\n                }, this), [...new Set(schedules.filter(schedule => schedule.clinicId === selectedClinicId).map(schedule => schedule.scheduleDay))].map(scheduleDay => /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: scheduleDay,\n                  children: scheduleDay\n                }, `${selectedClinicId}-${scheduleDay}`, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 375,\n                  columnNumber: 23\n                }, this))]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 356,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 355,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 353,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              style: {\n                width: \"150px\"\n              },\n              children: \"Timeslot: \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 384,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"select\", {\n                name: \"timeslot\",\n                id: `timeslot-${selectedClinicId}`,\n                style: {\n                  width: \"250px\"\n                },\n                value: selectedSched,\n                onChange: e => {\n                  const selectedTimeslot = e.target.value;\n                  setSelectedDate('');\n                  setSelectedSched(selectedTimeslot);\n                  console.log('Selected Schedule ID:', selectedTimeslot);\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"\",\n                  children: \"Select Timeslot\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 399,\n                  columnNumber: 19\n                }, this), schedules.filter(schedule => schedule.clinicId === selectedClinicId && schedule.scheduleDay === selectedDay).map(schedule => /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: schedule.scheduleId,\n                  children: [convertMilitaryToStandardTime(schedule.start), \" - \", convertMilitaryToStandardTime(schedule.end)]\n                }, schedule.scheduleId, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 405,\n                  columnNumber: 23\n                }, this))]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 386,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 385,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 383,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              style: {\n                width: \"150px\"\n              },\n              children: \"Date: \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 417,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"select\", {\n                name: \"sched\",\n                id: `sched-${selectedClinicId}`,\n                style: {\n                  width: \"250px\"\n                },\n                value: selectedDate,\n                onChange: e => {\n                  const selectedDateString = e.target.value;\n                  setSelectedDate(selectedDateString);\n                  console.log('Selected Date:', selectedDateString);\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"\",\n                  children: \"Select Date\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 431,\n                  columnNumber: 19\n                }, this), getNearestDays(selectedDay, 5).map((date, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: date,\n                  children: new Date(date).toLocaleDateString('en-US', {\n                    year: 'numeric',\n                    month: 'long',\n                    day: 'numeric'\n                  })\n                }, index, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 435,\n                  columnNumber: 21\n                }, this))]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 419,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 418,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 416,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: /*#__PURE__*/_jsxDEV(\"td\", {\n              colSpan: 2,\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                style: {\n                  marginTop: \"10px\",\n                  borderRadius: 0,\n                  width: \"100%\"\n                },\n                onClick: handleBookAppointment,\n                children: \"Book an Appointment\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 449,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 449,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 449,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"h5\", {\n                children: [\" \", error]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 450,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 450,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 450,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 315,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Existing Appointments \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 453,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: appointments.filter(appointment => appointment.appointmentStatus === \"Approved by Doctor\").length > 0 ?\n          // Display appointments\n          appointments.map((appointment, index) => appointment.appointmentStatus === \"Approved by Doctor\" && /*#__PURE__*/_jsxDEV(\"table\", {\n            children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                rowSpan: 2,\n                width: 200,\n                style: {\n                  border: \"1px solid lightgray\",\n                  backgroundColor: \"lightgray\",\n                  paddingLeft: \"10px\"\n                },\n                children: [appointment.title, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 462,\n                  columnNumber: 45\n                }, this), format(appointment.start, \"MM/dd/yyyy EEEE\"), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 463,\n                  columnNumber: 72\n                }, this), format(appointment.start, \"h:mm a\"), \" - \", format(appointment.end, \"h:mm a\")]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 461,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  style: {\n                    borderRadius: 0,\n                    width: \"100%\"\n                  },\n                  onClick: () => handleReschedule(appointment.appointmentId),\n                  children: \"Reschedule\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 466,\n                  columnNumber: 27\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 466,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 460,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"cancel\",\n                  onClick: () => handleCancel(appointment.appointmentId),\n                  type: \"submit\",\n                  children: \"Cancel\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 469,\n                  columnNumber: 27\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 469,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 468,\n              columnNumber: 21\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 459,\n            columnNumber: 19\n          }, this)) :\n          /*#__PURE__*/\n          // Display a message if there are no appointments with appointmentStatus === \"Approved by Doctor\"\n          _jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"You have no appointments yet.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 477,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Link, {\n              to: \"/docsearch\",\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                children: \"Set an appointment now\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 479,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 478,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 476,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 454,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 308,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 305,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(PatientFooter, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 486,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 303,\n    columnNumber: 5\n  }, this);\n};\n_s(SetAppointment, \"cdhSMzmRKFl4OQSTizjnL7oXBnA=\", false, function () {\n  return [useParams];\n});\n_c = SetAppointment;\nexport default SetAppointment;\nvar _c;\n$RefreshReg$(_c, \"SetAppointment\");","map":{"version":3,"names":["React","useState","useEffect","Link","PatientNavBar","PatientFooter","DoctorCalendar","useParams","startOfWeek","addWeeks","addDays","format","HomeFooter","HomeNavbar","Calendar","dateFnsLocalizer","parse","getDay","jsxDEV","_jsxDEV","SetAppointment","_s","_schedules$find","_schedules$find2","_schedules$find3","doctorId","error","setError","selectedDay","setSelectedDay","selectedSched","setSelectedSched","selectedDate","setSelectedDate","status","selectedClinicId","setSelectedClinicId","patientUserId","setPatientUserId","isPatientLoggedIn","setIsPatientLoggedIn","isError","setIsError","schedules","setSchedules","scheduleId","clinicId","avatar","doctorName","specialization","contactNumber","docEmail","scheduleDay","start","Date","end","slots","clinicName","address","number","email","appointments","setAppointments","title","appointmentId","appointmentStatus","fetch","then","response","ok","json","Error","data","appointmentsResponse","appointmentsData","formattedAppointments","map","appointment","year","month","day","scheduleDate","split","Number","hours","minutes","startTime","hours2","minutes2","endTime","startDate","endDate","transactionNo","catch","console","locales","require","localizer","handleCancel","method","log","window","location","reload","handleReschedule","href","fetchDoctorSchedules","formattedSchedules","schedule","doctor","user","firstName","lastName","clinic","name","officeNumber","officeEmail","convertMilitaryToStandardTime","militaryTime","length","parsedHours","parseInt","period","formattedHours","getNearestDays","numberOfOccurrences","today","daysInWeek","selectedDayIndex","findIndex","nearestDays","Array","from","_","index","currentWeek","weekStartsOn","startOfSelectedWeek","nextDay","uniqueClinics","Set","handleChangeClinic","selectedClinic","find","fetchLoggedInPatientId","userId","children","fileName","_jsxFileName","lineNumber","columnNumber","style","textAlign","marginTop","to","handleBookAppointment","url","display","margin","width","justifyContent","marginLeft","color","id","fontSize","fontWeight","onChange","e","target","value","filter","selectedTimeslot","selectedDateString","date","toLocaleDateString","colSpan","borderRadius","onClick","rowSpan","border","backgroundColor","paddingLeft","className","type","_c","$RefreshReg$"],"sources":["D:/3rd Year 1st Sem/DocClickConnect/appointment/src/pages/AppointmentPages/SetAppointment.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport PatientNavBar from '../../components/PatientNavBar';\nimport PatientFooter from '../../components/PatientFooter';\nimport DoctorCalendar from '../../components/DoctorCalendar';\nimport { useParams } from 'react-router-dom';\nimport { startOfWeek, addWeeks, addDays, format } from 'date-fns';\nimport HomeFooter from '../../components/HomeFooter';\nimport HomeNavbar from '../../components/HomeNavbar';\nimport { Calendar, dateFnsLocalizer } from 'react-big-calendar';\nimport parse from 'date-fns/parse';\nimport getDay from 'date-fns/getDay';\nimport \"react-big-calendar/lib/css/react-big-calendar.css\";\nconst SetAppointment = () => {\n  const { doctorId } = useParams();\n  const [error, setError] = useState(null);\n  const [selectedDay, setSelectedDay] = useState('');\n  const [selectedSched, setSelectedSched] = useState('');\n  const [selectedDate, setSelectedDate] = useState('');\n  const [status] = useState(\"Scheduled by Patient\");\n  const [selectedClinicId, setSelectedClinicId] = useState('');\n  const [patientUserId, setPatientUserId] = useState('');\n  const [isPatientLoggedIn, setIsPatientLoggedIn] = useState('');\n  const [isError, setIsError] = useState('');\n  const [schedules, setSchedules] = useState([\n    {\n      scheduleId: '',\n      clinicId: '',\n      avatar: '',\n      doctorName: '',\n      specialization: '',\n      contactNumber: '',\n      docEmail: '',\n      scheduleDay: '',\n      start: new Date(),\n      end: new Date(),  // 5:00 PM\n      slots: '',\n      clinicName: '',\n      address: '',\n      number: '',\n      email: ''\n    },\n  ]);\n  const [appointments, setAppointments] = useState([\n    {\n      title: '',\n      start: new Date(),\n      end: new Date(),  // 5:00 PM\n      appointmentId: '',\n      appointmentStatus: ''\n    },\n  ]);\n  useEffect(() => {\n    // Replace 'http://localhost:8080' with your actual API URL\n    fetch('http://localhost:8080/checkLoggedInPatient')\n      .then((response) => {\n        if (response.ok) {\n          return response.json();\n        }\n        throw new Error('Network response was not ok');\n      })\n      .then((data) => {\n        setPatientUserId(data);\n        // Once you have the patientUserId, make another request to get appointments\n        fetch(`http://localhost:8080/appointments?patientUserId=${data}`)\n          .then((appointmentsResponse) => {\n            if (appointmentsResponse.ok) {\n              return appointmentsResponse.json();\n            }\n            throw new Error('Network response was not ok');\n          })\n          .then((appointmentsData) => {\n            const formattedAppointments = appointmentsData.map((appointment) => {\n              // Extract date and time components\n              const [year, month, day] = appointment.scheduleDate.split('-').map(Number);\n              const [hours, minutes] = appointment.startTime.split(':').map(Number);\n              const [hours2, minutes2] = appointment.endTime.split(':').map(Number);\n\n              // Create Date objects for start and end times\n              const startDate = new Date(year, month - 1, day, hours, minutes);\n              const endDate = new Date(year, month - 1, day, hours2, minutes2);\n\n              // Create an appointment object\n              return {\n                title: 'Dr. ' + appointment.doctorName,\n                start: startDate,\n                end: endDate,\n                appointmentId: appointment.transactionNo,\n                appointmentStatus: appointment.status\n              };\n            });\n\n            setAppointments(formattedAppointments);\n          })\n          .catch((error) => {\n            // Handle errors\n            console.error(error);\n          });\n\n      })\n      .catch((error) => {\n        setIsError(true);\n        console.error('Error:', error);\n      });\n  }, []);\n\n  const locales = {\n    \"en-US\": require(\"date-fns/locale/en-US\")\n  }\n\n  const localizer = dateFnsLocalizer({\n    format,\n    parse,\n    startOfWeek,\n    getDay,\n    locales\n  })\n\n  const handleCancel = async (appointmentId) => {\n    try {\n      const response = await fetch(`http://localhost:8080/appointmentChange/${appointmentId}?newStatus=Cancelled`, {\n        method: 'PUT',\n      });\n\n      if (response.ok) {\n        // Handle success if needed\n        console.log('Appointment cancelled successfully');\n        window.location.reload();\n      } else {\n        setIsError(true);\n      }\n    } catch (error) {\n      console.error('Error cancelling appointment:', error);\n      setIsError(true);\n    }\n  };\n\n  const handleReschedule = async (appointmentId) => {\n    window.location.href = `/patresched/${appointmentId}`;\n  };\n\n\n  useEffect(() => {\n    const fetchDoctorSchedules = async () => {\n      try {\n        const response = await fetch(`http://localhost:8080/docsched/${doctorId}`);\n\n        if (response.ok) {\n          const data = await response.json();\n\n          const formattedSchedules = data.map(schedule => ({\n            scheduleId: schedule.scheduleId,\n            clinicId: schedule.clinicId,\n            avatar: schedule.doctor.user.avatar,\n            doctorName: `${schedule.doctor.user.firstName} ${schedule.doctor.user.lastName}`,\n            specialization: schedule.doctor.specialization,\n            contactNumber: schedule.doctor.user.contactNumber,\n            docEmail: schedule.doctor.user.email,\n            scheduleDay: schedule.scheduleDay,\n            start: schedule.startTime,\n            end: schedule.endTime,\n            slots: schedule.slots,\n            clinicName: schedule.clinic.name,\n            address: schedule.clinic.address,\n            number: schedule.clinic.officeNumber,\n            email: schedule.clinic.officeEmail\n          }));\n\n          setSchedules(formattedSchedules);\n\n        } else {\n          setError('Error fetching appointment');\n        }\n      } catch (error) {\n        setError('Error fetching appointment');\n      }\n    };\n\n    fetchDoctorSchedules();\n  }, [doctorId]);\n\n  const convertMilitaryToStandardTime = (militaryTime) => {\n    if (typeof militaryTime !== 'string' || militaryTime.length !== 8) {\n      return 'Invalid Time';\n    }\n\n    const [hours, minutes] = militaryTime.split(':');\n    const parsedHours = parseInt(hours, 10);\n    const period = parsedHours >= 12 ? 'PM' : 'AM';\n    const formattedHours = parsedHours % 12 || 12;\n    return `${formattedHours}:${minutes} ${period}`;\n  };\n\n\n\n  const getNearestDays = (selectedDay, numberOfOccurrences) => {\n    const today = new Date();\n    const daysInWeek = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];\n    const selectedDayIndex = daysInWeek.findIndex(day => day === selectedDay);\n  \n    if (selectedDayIndex === -1) {\n      return []; // Invalid selected day\n    }\n  \n    const nearestDays = Array.from({ length: numberOfOccurrences }, (_, index) => {\n      const currentWeek = startOfWeek(today, { weekStartsOn: 0 }); // Always start from Sunday\n      const startOfSelectedWeek = addWeeks(currentWeek, index);\n  \n      // Find the next occurrence of the selected day in the current week\n      let nextDay = addDays(startOfSelectedWeek, selectedDayIndex - currentWeek.getDay());\n  \n      if (nextDay < today) {\n        // If the selected day has already passed in the current week, move to the next week\n        nextDay = addDays(startOfSelectedWeek, selectedDayIndex - currentWeek.getDay() + 7);\n      }\n  \n      return format(nextDay, 'yyyy-MM-dd');\n    });\n  \n    return nearestDays;\n  };\n  \n  \n\n\n  const uniqueClinics = [...new Set(schedules.map(schedule => schedule.clinicName))];\n\n\n  const handleChangeClinic = (clinicName) => {\n    const selectedClinic = schedules.find(schedule => schedule.clinicName === clinicName);\n    setSelectedClinicId(selectedClinic?.clinicId || '');\n    setSelectedDay('');\n    setSelectedDate('');\n\n  };\n  useEffect(() => {\n    const fetchLoggedInPatientId = async () => {\n      try {\n        const response = await fetch('http://localhost:8080/checkLoggedInPatient');\n        if (response.ok) {\n          const userId = await response.json();\n          setPatientUserId(userId);\n          setIsPatientLoggedIn(true);\n        } else {\n          setError('Failed to fetch logged-in patient user ID.');\n          setIsPatientLoggedIn(false);\n        }\n      } catch (error) {\n        setError('Error fetching logged-in patient user ID:', error);\n        setIsPatientLoggedIn(false);\n        // Handle the error or provide feedback to the user\n      }\n    };\n\n    fetchLoggedInPatientId();\n  }, []); // The empty dependency array ensures that this effect runs once when the component mounts\n\n   // Change this line\n\n  if (!isPatientLoggedIn) {\n    return (\n    <div>\n      <HomeNavbar/>\n      <div style={{ textAlign: 'center', marginTop: '50px' }}>\n        <h1>No patient is logged in.</h1>\n        <Link to=\"/login\"><button>Login</button></Link>\n      </div>\n      <HomeFooter/>\n    </div>\n      \n    );\n  }\n  const handleBookAppointment = async () => {\n    try {\n      // Validate your appointment data here if needed\n  \n      const url = `http://localhost:8080/appointment?patientId=${patientUserId}&scheduleId=${selectedSched}&scheduleDate=${selectedDate}&status=${status}`;\n  \n      const response = await fetch(url, {\n        method: 'POST',\n      });\n  \n      if (response.ok) {\n        console.log('Appointment added successfully!');\n        console.log('Clinic ID:', selectedClinicId);\n        console.log('Selected Day:', selectedDay);\n        console.log('Selected Timeslot:', selectedSched);\n        console.log('Selected Date:', selectedDate);\n        // You can handle any other logic after a successful appointment addition here\n      } else {\n        setError('Failed to add appointment.');\n        // Handle the error or provide feedback to the user\n      }\n    } catch (error) {\n      setError('Error adding appointment:', error);\n      // Handle the error or provide feedback to the user\n    }\n  };\n  \n  \n\n  return (\n    <div>\n      <PatientNavBar />\n      <div style={{ display: \"flex\", margin: \"auto\", width: \"100vw\", justifyContent: \"center\" }}>\n        <DoctorCalendar/>\n\n        <div style={{ marginLeft: \"30px\" }}>\n          <h1>Dr. {schedules[0].doctorName}</h1>\n          <h2>Specialization: {schedules[0].specialization}</h2>\n          <h3>Contact Number: {schedules[0].contactNumber}</h3>\n          <h3>Email Address: {schedules[0].docEmail}</h3>\n          <br />\n\n          <table>\n            <tr>\n              <td>\n                <h2 style={{ color: \"#0094d4\" }}>Clinic: </h2>\n              </td>\n              <td>\n                <select\n                  name=\"clinic\"\n                  id=\"clinic\"\n                  style={{\n                    width: \"250px\",\n                    fontSize: \"1.5rem\",\n                    fontWeight: \"bold\",\n                    color: \"#0094d4\",\n                  }}\n                  onChange={(e) => handleChangeClinic(e.target.value)}\n                >\n                  <option value=\"\">Select Clinic</option>\n                  {uniqueClinics.map((clinicName, index) => (\n                    <option key={index} value={clinicName}>\n                      {clinicName}\n                    </option>\n                  ))}\n                </select>\n              </td>\n            </tr>\n            <tr>\n              <td><h5>Address:</h5></td>\n              <td>{schedules.find(schedule => schedule.clinicId === selectedClinicId)?.address}</td>\n            </tr>\n            <tr>\n              <td><h5>Contact Number:</h5></td>\n              <td>{schedules.find(schedule => schedule.clinicId === selectedClinicId)?.number}</td>\n            </tr>\n            <tr>\n              <td><h5>Email Address:</h5></td>\n              <td>{schedules.find(schedule => schedule.clinicId === selectedClinicId)?.email}</td>\n            </tr>\n            <tr>\n              <td style={{ width: \"150px\" }}>Day: </td>\n              <td>\n                <select\n                  name=\"sched\"\n                  id={`day-${selectedClinicId}`}\n                  style={{ width: \"250px\" }}\n                  value={selectedDay}\n                  onChange={(e) => {\n                    setSelectedDay(e.target.value);\n                    setSelectedSched('');\n                    setSelectedDate('');\n                    console.log(\"Selected Day changed:\", e.target.value);\n                  }}\n                >\n                  {/* Initial blank option */}\n                  <option value=\"\">Select Day</option>\n                  {/* Options for the selected clinic's unique days */}\n                  {[...new Set(schedules\n                    .filter(schedule => schedule.clinicId === selectedClinicId)\n                    .map(schedule => schedule.scheduleDay))]\n                    .map(scheduleDay => (\n                      <option key={`${selectedClinicId}-${scheduleDay}`} value={scheduleDay}>\n                        {scheduleDay}\n                      </option>\n                    ))}\n                </select>\n\n              </td>\n            </tr>\n            <tr>\n              <td style={{ width: \"150px\" }}>Timeslot: </td>\n              <td>\n                <select\n                  name=\"timeslot\"\n                  id={`timeslot-${selectedClinicId}`}\n                  style={{ width: \"250px\" }}\n                  value={selectedSched}\n                  onChange={(e) => {\n                    const selectedTimeslot = e.target.value;\n                    setSelectedDate('');\n                    setSelectedSched(selectedTimeslot);\n                    console.log('Selected Schedule ID:', selectedTimeslot);\n                  }}\n                >\n                  {/* Initial blank option */}\n                  <option value=\"\">Select Timeslot</option>\n\n                  {/* Options for the selected clinic's timeslots */}\n                  {schedules\n                    .filter(schedule => schedule.clinicId === selectedClinicId && schedule.scheduleDay === selectedDay)\n                    .map(schedule => (\n                      <option key={schedule.scheduleId} value={schedule.scheduleId}>\n                        {convertMilitaryToStandardTime(schedule.start)} - {convertMilitaryToStandardTime(schedule.end)}\n                      </option>\n                    ))}\n                </select>\n\n\n              </td>\n            </tr>\n\n            {/* autogenerated dapat */}\n            <tr>\n              <td style={{ width: \"150px\" }}>Date: </td>\n              <td>\n                <select\n                  name=\"sched\"\n                  id={`sched-${selectedClinicId}`}\n                  style={{ width: \"250px\" }}\n                  value={selectedDate}\n                  onChange={(e) => {\n                    const selectedDateString = e.target.value;\n                    setSelectedDate(selectedDateString);\n                    console.log('Selected Date:', selectedDateString);\n                  }}\n                >\n                  {/* Initial blank option */}\n                  <option value=\"\">Select Date</option>\n\n                  {/* Options for the selected clinic's nearest days (only 5) */}\n                  {getNearestDays(selectedDay, 5).map((date, index) => (\n                    <option key={index} value={date}>\n                      {new Date(date).toLocaleDateString('en-US', {\n                        year: 'numeric',\n                        month: 'long',\n                        day: 'numeric',\n                      })}\n                    </option>\n                  ))}\n                </select>\n\n\n\n              </td>\n            </tr>\n            <tr><td colSpan={2}><button style={{ marginTop: \"10px\", borderRadius: 0, width: \"100%\" }} onClick={handleBookAppointment}>Book an Appointment</button></td></tr>\n            <tr><td><h5> {error}</h5></td></tr>\n          </table>\n\n          <h1>Existing Appointments </h1>\n          <div>\n            {appointments.filter(appointment => appointment.appointmentStatus === \"Approved by Doctor\").length > 0 ? (\n              // Display appointments\n              appointments.map((appointment, index) => (\n                appointment.appointmentStatus === \"Approved by Doctor\" && (\n                  <table key={index}>\n                    <tr>\n                      <td rowSpan={2} width={200} style={{ border: \"1px solid lightgray\", backgroundColor: \"lightgray\", paddingLeft: \"10px\" }}>\n                        {appointment.title} <br />\n                        {format(appointment.start, \"MM/dd/yyyy EEEE\")} <br />\n                        {format(appointment.start, \"h:mm a\")} - {format(appointment.end, \"h:mm a\")}\n                      </td>\n                      <td><button style={{ borderRadius: 0, width: \"100%\" }} onClick={() => handleReschedule(appointment.appointmentId)}>Reschedule</button></td>\n                    </tr>\n                    <tr>\n                      <td><button className='cancel' onClick={() => handleCancel(appointment.appointmentId)} type=\"submit\">Cancel</button></td>\n                    </tr>\n                  </table>\n                )\n              ))\n            ) : (\n              // Display a message if there are no appointments with appointmentStatus === \"Approved by Doctor\"\n              <div>\n                <p>You have no appointments yet.</p>\n                <Link to=\"/docsearch\">\n                  <button>Set an appointment now</button>\n                </Link>\n              </div>\n            )}\n          </div>\n        </div>\n      </div>\n      <PatientFooter />\n    </div>\n  );\n};\n\nexport default SetAppointment;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}