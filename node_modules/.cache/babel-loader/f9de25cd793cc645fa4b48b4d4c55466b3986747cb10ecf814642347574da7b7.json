{"ast":null,"code":"var _jsxFileName = \"D:\\\\3rd Year 1st Sem\\\\DocClickConnect\\\\appointment\\\\src\\\\pages\\\\AppointmentPages\\\\AddClinic.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport \"../../styles/Register.css\";\nimport { useParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst AddClinic = () => {\n  _s();\n  const {\n    doctorUserId\n  } = useParams();\n  const [name, setName] = useState('');\n  const [address, setAddress] = useState('');\n  const [officeNumber, setOfficeNumber] = useState('');\n  const [officeEmail, setOfficeEmail] = useState('');\n  const [hospital, setHospital] = useState('');\n  const [addClinicMessage, setAddClinicMessage] = useState('');\n  const [registrationSuccessful, setRegistrationSuccessful] = useState(false);\n  const [startTime, setStartTime] = useState('');\n  const [endTime, setEndTime] = useState('');\n  const [scheduleDay, setScheduleDay] = useState('');\n  const [slots, setSlots] = useState('');\n  const [addScheduleMessage, setAddScheduleMessage] = useState('');\n  const [daysChecked, setDaysChecked] = useState([]);\n  const [scheduleEntries, setScheduleEntries] = useState([]);\n  if (daysChecked.length === 0) {\n    setAddClinicMessage('Please select at least one day for the schedule.');\n    return;\n  }\n\n  // Create schedule entries based on selected checkboxes\n  const newScheduleEntries = daysChecked.map(day => {\n    return {\n      doctorUserId,\n      scheduleDay: day,\n      startTime: '08:00:00',\n      // Default start time\n      endTime: '10:00:00' // Default end time\n    };\n  });\n\n  const handleDayCheckboxChange = (event, day) => {\n    if (event.target.checked) {\n      setDaysChecked(prevChecked => [...prevChecked, day]);\n    } else {\n      setDaysChecked(prevChecked => prevChecked.filter(checkedDay => checkedDay !== day));\n    }\n  };\n  const handleAddClinic = async () => {\n    // Check if any of the fields are empty\n    if (!name || !address || !officeNumber || !officeEmail) {\n      setAddClinicMessage('Please fill in all required fields.');\n      return;\n    }\n    const officeNumberRegex = /^\\d{11}$/;\n    if (!officeNumberRegex.test(officeNumber)) {\n      setAddClinicMessage('Contact number should be exactly 11 digits and contain only numbers (0-9).');\n      return;\n    }\n\n    // Validate email format using regular expression\n    const officeEmailRegex = /^\\w+([.-]?\\w+)*@\\w+([.-]?\\w+)*(\\.\\w{2,3})+$/;\n    if (!officeEmailRegex.test(officeEmail)) {\n      setAddClinicMessage('Invalid email format.');\n      return;\n    }\n    try {\n      const url = new URL('http://localhost:8080/clinic');\n      const userData = {\n        name,\n        address,\n        officeNumber,\n        officeEmail,\n        hospital\n      };\n      const response = await fetch(url, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(userData)\n      });\n      if (response.ok) {\n        // Signup successful\n        setAddClinicMessage('Clinic added successfully');\n        setRegistrationSuccessful(true);\n      } else {\n        // Signup failed\n        const errorMessage = await response.text();\n        setAddClinicMessage(errorMessage);\n        setAddClinicMessage(`Signup failed`);\n        // Handle the error or display an error message to the user\n      }\n    } catch (error) {\n      console.error('Error during signup:', error);\n      setAddClinicMessage('Error during signup. Please try again later.');\n      // Handle the error or display an error message to the user\n    }\n  };\n\n  const handleAddSchedule = async () => {\n    // Check if any of the fields are empty\n    const queryString = `name=${name}&doctorUserId=${doctorUserId}&scheduleDay=${scheduleDay}&startTime=${startTime}&endTime=${endTime}&slots=${slots}`;\n    try {\n      const response = await fetch(`http://localhost:8080/schedule?${queryString}`, {\n        method: 'POST'\n      });\n      if (response.ok) {\n        // Schedule added successfully\n        setAddScheduleMessage('Schedule added successfully');\n        // You can add additional handling here if needed\n      } else {\n        // Schedule addition failed\n        const errorMessage = await response.text();\n        setAddScheduleMessage(`Schedule addition failed: ${errorMessage}`);\n        // Handle the error or display an error message to the user\n      }\n    } catch (error) {\n      console.error('Error during schedule addition:', error);\n      setAddScheduleMessage('Error during schedule addition. Please try again later.');\n      // Handle the error or display an error message to the user\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"reg-container\",\n    id: \"reg-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"register\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        style: {\n          color: '#0094d4'\n        },\n        children: \"Add Clinic\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        action: \"#\",\n        id: \"register-form\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"reg-infield\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"name\",\n            placeholder: \"*Clinic Name\",\n            name: \"name\",\n            value: name,\n            onChange: e => setName(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"reg-infield\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"address\",\n            placeholder: \"*(House/Lot/Unit No., Street, Barangay, City/Town, Province)\",\n            name: \"address\",\n            value: address,\n            onChange: e => setAddress(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"reg-infield\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"officeNumber\",\n            placeholder: \"*Office Number\",\n            name: \"officeNumber\",\n            value: officeNumber,\n            onChange: e => setOfficeNumber(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"reg-infield\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"officeEmail\",\n            placeholder: \"*Office Email\",\n            name: \"officeEmail\",\n            value: officeEmail,\n            onChange: e => setOfficeEmail(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"reg-infield\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"hospital\",\n            placeholder: \"Hospital Affiliation\",\n            name: \"hospital\",\n            value: hospital,\n            onChange: e => setHospital(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"reg-row\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"reg-infield\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              style: {\n                marginBottom: '-20px'\n              },\n              children: \"*Schedule: \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 188,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              style: {\n                marginBottom: '-5px'\n              },\n              children: \"Select all that applies\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 189,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"reg-row\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"reg-infield\",\n            children: /*#__PURE__*/_jsxDEV(\"table\", {\n              width: 500,\n              children: ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday'].map(day => /*#__PURE__*/_jsxDEV(\"tr\", {\n                name: `${day.toLowerCase()}Row`,\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  width: 25,\n                  children: /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"checkbox\",\n                    name: `${day.toLowerCase()}Checkbox`,\n                    onChange: event => handleDayCheckboxChange(event, day)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 198,\n                    columnNumber: 13\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 197,\n                  columnNumber: 11\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  width: 200,\n                  children: day\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 204,\n                  columnNumber: 11\n                }, this), daysChecked.includes(day) && /*#__PURE__*/_jsxDEV(_Fragment, {\n                  children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                    width: 50,\n                    children: \"Time: \"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 207,\n                    columnNumber: 15\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: /*#__PURE__*/_jsxDEV(\"select\", {\n                      name: `${day.toLowerCase()}StartTime`,\n                      id: `${day.toLowerCase()}StartTime`,\n                      onChange: event => handleTimeChange(event, day, 'start'),\n                      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                        value: \"08:00:00\",\n                        children: \"8:00 AM\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 214,\n                        columnNumber: 19\n                      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                        value: \"09:00:00\",\n                        children: \"9:00 AM\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 215,\n                        columnNumber: 19\n                      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                        value: \"10:00:00\",\n                        children: \"10:00 AM\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 216,\n                        columnNumber: 19\n                      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                        value: \"11:00:00\",\n                        children: \"11:00 AM\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 217,\n                        columnNumber: 19\n                      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                        value: \"12:00:00\",\n                        children: \"12:00 PM\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 218,\n                        columnNumber: 19\n                      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                        value: \"13:00:00\",\n                        children: \"1:00 PM\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 219,\n                        columnNumber: 19\n                      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                        value: \"14:00:00\",\n                        children: \"2:00 PM\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 220,\n                        columnNumber: 19\n                      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                        value: \"15:00:00\",\n                        children: \"3:00 PM\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 221,\n                        columnNumber: 19\n                      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                        value: \"16:00:00\",\n                        children: \"4:00 PM\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 222,\n                        columnNumber: 19\n                      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                        value: \"17:00:00\",\n                        children: \"5:00 PM\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 223,\n                        columnNumber: 19\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 209,\n                      columnNumber: 17\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 208,\n                    columnNumber: 15\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    width: 0,\n                    children: \"to\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 226,\n                    columnNumber: 15\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: /*#__PURE__*/_jsxDEV(\"select\", {\n                      name: `${day.toLowerCase()}EndTime`,\n                      id: `${day.toLowerCase()}EndTime`,\n                      onChange: event => handleTimeChange(event, day, 'end'),\n                      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                        value: \"08:00:00\",\n                        children: \"8:00 AM\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 233,\n                        columnNumber: 19\n                      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                        value: \"09:00:00\",\n                        children: \"9:00 AM\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 234,\n                        columnNumber: 19\n                      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                        value: \"10:00:00\",\n                        children: \"10:00 AM\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 235,\n                        columnNumber: 19\n                      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                        value: \"11:00:00\",\n                        children: \"11:00 AM\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 236,\n                        columnNumber: 19\n                      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                        value: \"12:00:00\",\n                        children: \"12:00 PM\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 237,\n                        columnNumber: 19\n                      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                        value: \"13:00:00\",\n                        children: \"1:00 PM\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 238,\n                        columnNumber: 19\n                      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                        value: \"14:00:00\",\n                        children: \"2:00 PM\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 239,\n                        columnNumber: 19\n                      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                        value: \"15:00:00\",\n                        children: \"3:00 PM\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 240,\n                        columnNumber: 19\n                      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                        value: \"16:00:00\",\n                        children: \"4:00 PM\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 241,\n                        columnNumber: 19\n                      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                        value: \"17:00:00\",\n                        children: \"5:00 PM\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 242,\n                        columnNumber: 19\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 228,\n                      columnNumber: 17\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 227,\n                    columnNumber: 15\n                  }, this)]\n                }, void 0, true)]\n              }, day, true, {\n                fileName: _jsxFileName,\n                lineNumber: 196,\n                columnNumber: 9\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 194,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: handleAddClinic,\n        children: \"Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 9\n      }, this), addClinicMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"signup-message\",\n        children: addClinicMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 30\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 137,\n    columnNumber: 5\n  }, this);\n};\n_s(AddClinic, \"mkahAS3RMOluVOP9npjj0/8aliQ=\", false, function () {\n  return [useParams];\n});\n_c = AddClinic;\nexport default AddClinic;\nvar _c;\n$RefreshReg$(_c, \"AddClinic\");","map":{"version":3,"names":["React","useState","useParams","jsxDEV","_jsxDEV","Fragment","_Fragment","AddClinic","_s","doctorUserId","name","setName","address","setAddress","officeNumber","setOfficeNumber","officeEmail","setOfficeEmail","hospital","setHospital","addClinicMessage","setAddClinicMessage","registrationSuccessful","setRegistrationSuccessful","startTime","setStartTime","endTime","setEndTime","scheduleDay","setScheduleDay","slots","setSlots","addScheduleMessage","setAddScheduleMessage","daysChecked","setDaysChecked","scheduleEntries","setScheduleEntries","length","newScheduleEntries","map","day","handleDayCheckboxChange","event","target","checked","prevChecked","filter","checkedDay","handleAddClinic","officeNumberRegex","test","officeEmailRegex","url","URL","userData","response","fetch","method","headers","body","JSON","stringify","ok","errorMessage","text","error","console","handleAddSchedule","queryString","className","id","children","style","color","fileName","_jsxFileName","lineNumber","columnNumber","action","type","placeholder","value","onChange","e","marginBottom","width","toLowerCase","includes","handleTimeChange","onClick","_c","$RefreshReg$"],"sources":["D:/3rd Year 1st Sem/DocClickConnect/appointment/src/pages/AppointmentPages/AddClinic.jsx"],"sourcesContent":["import React, { useState }  from 'react';\nimport \"../../styles/Register.css\";\nimport { useParams } from 'react-router-dom';\n\nconst AddClinic = () => {\n  const {doctorUserId} = useParams();\n  const [name, setName] = useState('');\n  const [address, setAddress] = useState('');\n  const [officeNumber, setOfficeNumber] = useState('');\n  const [officeEmail, setOfficeEmail] = useState('');\n  const [hospital, setHospital] = useState('');\n  const [addClinicMessage, setAddClinicMessage] = useState('');\n  const [registrationSuccessful, setRegistrationSuccessful] = useState(false);\n  const [startTime, setStartTime] = useState('');\n  const [endTime, setEndTime] = useState('');\n  const [scheduleDay, setScheduleDay] = useState('');\n  const [slots, setSlots] = useState('');\n  const [addScheduleMessage, setAddScheduleMessage] = useState('');\n  const [daysChecked, setDaysChecked] = useState([]);\n  const [scheduleEntries, setScheduleEntries] = useState([]);\n\n  if (daysChecked.length === 0) {\n    setAddClinicMessage('Please select at least one day for the schedule.');\n    return;\n  }\n\n  // Create schedule entries based on selected checkboxes\n  const newScheduleEntries = daysChecked.map((day) => {\n    return {\n      doctorUserId,\n      scheduleDay: day,\n      startTime: '08:00:00', // Default start time\n      endTime: '10:00:00', // Default end time\n    };\n  });\n\n  const handleDayCheckboxChange = (event, day) => {\n    if (event.target.checked) {\n      setDaysChecked((prevChecked) => [...prevChecked, day]);\n    } else {\n      setDaysChecked((prevChecked) => prevChecked.filter((checkedDay) => checkedDay !== day));\n    }\n  };\n\n  const handleAddClinic = async () => {\n    // Check if any of the fields are empty\n    if (\n      !name ||\n      !address ||\n      !officeNumber ||\n      !officeEmail\n    ) {\n      setAddClinicMessage('Please fill in all required fields.');\n      return;\n    }\n\n    const officeNumberRegex = /^\\d{11}$/;\n    if (!officeNumberRegex.test(officeNumber)) {\n      setAddClinicMessage('Contact number should be exactly 11 digits and contain only numbers (0-9).');\n      return;\n    }\n\n    // Validate email format using regular expression\n    const officeEmailRegex = /^\\w+([.-]?\\w+)*@\\w+([.-]?\\w+)*(\\.\\w{2,3})+$/;\n    if (!officeEmailRegex.test(officeEmail)) {\n      setAddClinicMessage('Invalid email format.');\n      return;\n    }\n\n    try {\n      const url = new URL('http://localhost:8080/clinic');\n      const userData = {\n        name,\n        address,\n        officeNumber,\n        officeEmail,\n        hospital,\n      };\n\n\n      const response = await fetch(url, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(userData),\n      });\n\n      if (response.ok) {\n        // Signup successful\n        setAddClinicMessage('Clinic added successfully');\n        setRegistrationSuccessful(true);\n\n \n      } else {\n        // Signup failed\n        const errorMessage = await response.text();\n        setAddClinicMessage(errorMessage);\n        setAddClinicMessage(`Signup failed`);\n        // Handle the error or display an error message to the user\n      }\n    } catch (error) {\n      console.error('Error during signup:', error);\n      setAddClinicMessage('Error during signup. Please try again later.');\n      // Handle the error or display an error message to the user\n    }\n  }\n\n  const handleAddSchedule = async () => {\n    // Check if any of the fields are empty\n    const queryString = `name=${name}&doctorUserId=${doctorUserId}&scheduleDay=${scheduleDay}&startTime=${startTime}&endTime=${endTime}&slots=${slots}`;\n\n    try {\n      const response = await fetch(`http://localhost:8080/schedule?${queryString}`, {\n        method: 'POST',\n      });\n  \n      if (response.ok) {\n        // Schedule added successfully\n        setAddScheduleMessage('Schedule added successfully');\n        // You can add additional handling here if needed\n      } else {\n        // Schedule addition failed\n        const errorMessage = await response.text();\n        setAddScheduleMessage(`Schedule addition failed: ${errorMessage}`);\n        // Handle the error or display an error message to the user\n      }\n    } catch (error) {\n      console.error('Error during schedule addition:', error);\n      setAddScheduleMessage('Error during schedule addition. Please try again later.');\n      // Handle the error or display an error message to the user\n    }\n  };\n  \n\n  return (\n    <div className=\"reg-container\" id=\"reg-container\">\n      <div className=\"register\">\n        <h1 style={{ color: '#0094d4' }}>Add Clinic</h1>\n        <form action=\"#\" id=\"register-form\">\n            <div className=\"reg-infield\">              \n                <input type=\"text\"\n                  id=\"name\"\n                  placeholder=\"*Clinic Name\"\n                  name=\"name\"\n                  value={name}\n                  onChange={(e) => setName(e.target.value)}\n                />\n            </div>\n            <div className=\"reg-infield\">          \n                <input type=\"text\"\n                  id=\"address\"\n                  placeholder=\"*(House/Lot/Unit No., Street, Barangay, City/Town, Province)\"\n                  name=\"address\"\n                  value={address}\n                  onChange={(e) => setAddress(e.target.value)}\n                />\n          </div>\n            <div className=\"reg-infield\">\n              <input type=\"text\"\n                  id=\"officeNumber\"\n                  placeholder=\"*Office Number\"\n                  name=\"officeNumber\"\n                  value={officeNumber}\n                  onChange={(e) => setOfficeNumber(e.target.value)}\n                />\n            </div>\n            <div className=\"reg-infield\">\n              <input type=\"text\"\n                  id=\"officeEmail\"\n                  placeholder=\"*Office Email\"\n                  name=\"officeEmail\"\n                  value={officeEmail}\n                  onChange={(e) => setOfficeEmail(e.target.value)}\n                />\n          </div>\n          <div className=\"reg-infield\">              \n              <input type=\"text\"\n                  id=\"hospital\"\n                  placeholder=\"Hospital Affiliation\"\n                  name=\"hospital\"\n                  value={hospital}\n                  onChange={(e) => setHospital(e.target.value)}\n                />\n            </div>\n            <div className='reg-row'>\n                <div className='reg-infield'>\n                    <h4 style={{ marginBottom: '-20px' }}>*Schedule: </h4>\n                    <p style={{ marginBottom: '-5px' }}>Select all that applies</p>\n                </div>\n              </div>\n            <div className='reg-row'>\n                <div className='reg-infield'>\n                <table width={500}>\n      {['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday'].map((day) => (\n        <tr key={day} name={`${day.toLowerCase()}Row`}>\n          <td width={25}>\n            <input\n              type=\"checkbox\"\n              name={`${day.toLowerCase()}Checkbox`}\n              onChange={(event) => handleDayCheckboxChange(event, day)}\n            />\n          </td>\n          <td width={200}>{day}</td>\n          {daysChecked.includes(day) && (\n            <>\n              <td width={50}>Time: </td>\n              <td>\n                <select\n                  name={`${day.toLowerCase()}StartTime`}\n                  id={`${day.toLowerCase()}StartTime`}\n                  onChange={(event) => handleTimeChange(event, day, 'start')}\n                >\n                  <option value=\"08:00:00\">8:00 AM</option>\n                  <option value=\"09:00:00\">9:00 AM</option>\n                  <option value=\"10:00:00\">10:00 AM</option>\n                  <option value=\"11:00:00\">11:00 AM</option>\n                  <option value=\"12:00:00\">12:00 PM</option>\n                  <option value=\"13:00:00\">1:00 PM</option>\n                  <option value=\"14:00:00\">2:00 PM</option>\n                  <option value=\"15:00:00\">3:00 PM</option>\n                  <option value=\"16:00:00\">4:00 PM</option>\n                  <option value=\"17:00:00\">5:00 PM</option>\n                </select>\n              </td>\n              <td width={0}>to</td>\n              <td>\n                <select\n                  name={`${day.toLowerCase()}EndTime`}\n                  id={`${day.toLowerCase()}EndTime`}\n                  onChange={(event) => handleTimeChange(event, day, 'end')}\n                >\n                  <option value=\"08:00:00\">8:00 AM</option>\n                  <option value=\"09:00:00\">9:00 AM</option>\n                  <option value=\"10:00:00\">10:00 AM</option>\n                  <option value=\"11:00:00\">11:00 AM</option>\n                  <option value=\"12:00:00\">12:00 PM</option>\n                  <option value=\"13:00:00\">1:00 PM</option>\n                  <option value=\"14:00:00\">2:00 PM</option>\n                  <option value=\"15:00:00\">3:00 PM</option>\n                  <option value=\"16:00:00\">4:00 PM</option>\n                  <option value=\"17:00:00\">5:00 PM</option>\n                </select>\n              </td>\n            </>\n          )}\n        </tr>\n      ))}\n                  </table>\n                </div>\n            </div>\n        </form>\n        <button type=\"button\" onClick={handleAddClinic}>Register</button>\n        {addClinicMessage && <p className=\"signup-message\">{addClinicMessage}</p>}\n      </div>\n    </div>\n  );\n};\n\nexport default AddClinic;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}