{"ast":null,"code":"var _jsxFileName = \"D:\\\\3rd Year 1st Sem\\\\DocClickConnect\\\\appointment\\\\src\\\\pages\\\\AppointmentPages\\\\SetAppointment.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport PatientNavBar from '../../components/PatientNavBar';\nimport PatientFooter from '../../components/PatientFooter';\nimport DoctorCalendar from '../../components/DoctorCalendar';\nimport { useParams } from 'react-router-dom';\nimport { startOfWeek, addWeeks, addDays, format } from 'date-fns';\nimport HomeFooter from '../../components/HomeFooter';\nimport HomeNavbar from '../../components/HomeNavbar';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SetAppointment = () => {\n  _s();\n  var _schedules$find, _schedules$find2, _schedules$find3;\n  const {\n    doctorId\n  } = useParams();\n  const [error, setError] = useState(null);\n  const [selectedDay, setSelectedDay] = useState('');\n  const [selectedSched, setSelectedSched] = useState('');\n  const [selectedDate, setSelectedDate] = useState('');\n  const [status] = useState(\"Scheduled by Patient\");\n  const [selectedClinicId, setSelectedClinicId] = useState('');\n  const [patientId, setPatientId] = useState('');\n  const [isPatientLoggedIn, setIsPatientLoggedIn] = useState('');\n  const [schedules, setSchedules] = useState([{\n    scheduleId: '',\n    clinicId: '',\n    avatar: '',\n    doctorName: '',\n    specialization: '',\n    contactNumber: '',\n    docEmail: '',\n    scheduleDay: '',\n    start: new Date(),\n    end: new Date(),\n    // 5:00 PM\n    slots: '',\n    clinicName: '',\n    address: '',\n    number: '',\n    email: ''\n  }]);\n  useEffect(() => {\n    const fetchDoctorSchedules = async () => {\n      try {\n        const response = await fetch(`http://localhost:8080/docsched/${doctorId}`);\n        if (response.ok) {\n          const data = await response.json();\n          const formattedSchedules = data.map(schedule => ({\n            scheduleId: schedule.scheduleId,\n            clinicId: schedule.clinicId,\n            avatar: schedule.doctor.user.avatar,\n            doctorName: `${schedule.doctor.user.firstName} ${schedule.doctor.user.lastName}`,\n            specialization: schedule.doctor.specialization,\n            contactNumber: schedule.doctor.user.contactNumber,\n            docEmail: schedule.doctor.user.email,\n            scheduleDay: schedule.scheduleDay,\n            start: schedule.startTime,\n            end: schedule.endTime,\n            slots: schedule.slots,\n            clinicName: schedule.clinic.name,\n            address: schedule.clinic.address,\n            number: schedule.clinic.officeNumber,\n            email: schedule.clinic.officeEmail\n          }));\n          setSchedules(formattedSchedules);\n        } else {\n          setError('Error fetching appointment');\n        }\n      } catch (error) {\n        setError('Error fetching appointment');\n      }\n    };\n    fetchDoctorSchedules();\n  }, [doctorId]);\n  const convertMilitaryToStandardTime = militaryTime => {\n    if (typeof militaryTime !== 'string' || militaryTime.length !== 8) {\n      return 'Invalid Time';\n    }\n    const [hours, minutes] = militaryTime.split(':');\n    const parsedHours = parseInt(hours, 10);\n    const period = parsedHours >= 12 ? 'PM' : 'AM';\n    const formattedHours = parsedHours % 12 || 12;\n    return `${formattedHours}:${minutes} ${period}`;\n  };\n  const getNearestDays = (selectedDay, numberOfOccurrences) => {\n    const today = new Date();\n    const daysInWeek = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];\n    const selectedDayIndex = daysInWeek.findIndex(day => day === selectedDay);\n    if (selectedDayIndex === -1) {\n      return []; // Invalid selected day\n    }\n\n    const nearestDays = Array.from({\n      length: numberOfOccurrences\n    }, (_, index) => {\n      const currentWeek = startOfWeek(today, {\n        weekStartsOn: 0\n      }); // Always start from Sunday\n      const startOfSelectedWeek = addWeeks(currentWeek, index);\n\n      // Find the next occurrence of the selected day in the current week\n      let nextDay = addDays(startOfSelectedWeek, selectedDayIndex);\n      if (nextDay < today) {\n        // If the selected day has already passed in the current week, move to the next week\n        nextDay = addWeeks(currentWeek, index + 1);\n      }\n      return format(nextDay, 'yyyy-MM-dd');\n    });\n    return nearestDays;\n  };\n  const uniqueClinics = [...new Set(schedules.map(schedule => schedule.clinicName))];\n  const handleChangeClinic = clinicName => {\n    const selectedClinic = schedules.find(schedule => schedule.clinicName === clinicName);\n    setSelectedClinicId((selectedClinic === null || selectedClinic === void 0 ? void 0 : selectedClinic.clinicId) || '');\n    setSelectedDay('');\n    setSelectedDate('');\n  };\n  useEffect(() => {\n    const fetchLoggedInPatientId = async () => {\n      try {\n        const response = await fetch('http://localhost:8080/checkLoggedInPatient');\n        if (response.ok) {\n          const userId = await response.json();\n          setPatientId(userId);\n          setIsPatientLoggedIn(true);\n        } else {\n          setError('Failed to fetch logged-in patient user ID.');\n          setIsPatientLoggedIn(false);\n        }\n      } catch (error) {\n        setError('Error fetching logged-in patient user ID:', error);\n        setIsPatientLoggedIn(false);\n        // Handle the error or provide feedback to the user\n      }\n    };\n\n    fetchLoggedInPatientId();\n  }, []); // The empty dependency array ensures that this effect runs once when the component mounts\n\n  // Change this line\n\n  if (!isPatientLoggedIn) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(HomeNavbar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          textAlign: 'center',\n          marginTop: '50px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"No patient is logged in.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/login\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            children: \"Login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 27\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(HomeFooter, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 5\n    }, this);\n  }\n  const handleBookAppointment = async () => {\n    try {\n      // Validate your appointment data here if needed\n\n      const url = `http://localhost:8080/appointment?patientId=${patientId}&scheduleId=${selectedSched}&scheduleDate=${selectedDate}&status=${status}`;\n      const response = await fetch(url, {\n        method: 'POST'\n      });\n      if (response.ok) {\n        console.log('Appointment added successfully!');\n        console.log('Clinic ID:', selectedClinicId);\n        console.log('Selected Day:', selectedDay);\n        console.log('Selected Timeslot:', selectedSched);\n        console.log('Selected Date:', selectedDate);\n        // You can handle any other logic after a successful appointment addition here\n      } else {\n        setError('Failed to add appointment.');\n        // Handle the error or provide feedback to the user\n      }\n    } catch (error) {\n      setError('Error adding appointment:', error);\n      // Handle the error or provide feedback to the user\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(PatientNavBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"flex\",\n        margin: \"auto\",\n        width: \"100vw\",\n        justifyContent: \"center\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(DoctorCalendar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginLeft: \"30px\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: [\"Dr. \", schedules[0].doctorName]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [\"Specialization: \", schedules[0].specialization]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [\"Contact Number: \", schedules[0].contactNumber]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [\"Email Address: \", schedules[0].docEmail]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n          children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"h2\", {\n                style: {\n                  color: \"#0094d4\"\n                },\n                children: \"Clinic: \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 212,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 211,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"select\", {\n                name: \"clinic\",\n                id: \"clinic\",\n                style: {\n                  width: \"250px\",\n                  fontSize: \"1.5rem\",\n                  fontWeight: \"bold\",\n                  color: \"#0094d4\"\n                },\n                onChange: e => handleChangeClinic(e.target.value),\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"\",\n                  children: \"Select Clinic\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 226,\n                  columnNumber: 19\n                }, this), uniqueClinics.map((clinicName, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: clinicName,\n                  children: clinicName\n                }, index, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 228,\n                  columnNumber: 21\n                }, this))]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 215,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 214,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"h5\", {\n                children: \"Address:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 236,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 236,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: (_schedules$find = schedules.find(schedule => schedule.clinicId === selectedClinicId)) === null || _schedules$find === void 0 ? void 0 : _schedules$find.address\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 237,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 235,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"h5\", {\n                children: \"Contact Number:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 240,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 240,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: (_schedules$find2 = schedules.find(schedule => schedule.clinicId === selectedClinicId)) === null || _schedules$find2 === void 0 ? void 0 : _schedules$find2.number\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 241,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 239,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"h5\", {\n                children: \"Email Address:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 244,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 244,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: (_schedules$find3 = schedules.find(schedule => schedule.clinicId === selectedClinicId)) === null || _schedules$find3 === void 0 ? void 0 : _schedules$find3.email\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 245,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 243,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              style: {\n                width: \"150px\"\n              },\n              children: \"Day: \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 248,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"select\", {\n                name: \"sched\",\n                id: `day-${selectedClinicId}`,\n                style: {\n                  width: \"250px\"\n                },\n                value: selectedDay,\n                onChange: e => {\n                  setSelectedDay(e.target.value);\n                  setSelectedSched('');\n                  setSelectedDate('');\n                  console.log(\"Selected Day changed:\", e.target.value);\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"\",\n                  children: \"Select Day\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 263,\n                  columnNumber: 19\n                }, this), [...new Set(schedules.filter(schedule => schedule.clinicId === selectedClinicId).map(schedule => schedule.scheduleDay))].map(scheduleDay => /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: scheduleDay,\n                  children: scheduleDay\n                }, `${selectedClinicId}-${scheduleDay}`, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 269,\n                  columnNumber: 23\n                }, this))]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 250,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 249,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 247,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              style: {\n                width: \"150px\"\n              },\n              children: \"Timeslot: \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 278,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"select\", {\n                name: \"timeslot\",\n                id: `timeslot-${selectedClinicId}`,\n                style: {\n                  width: \"250px\"\n                },\n                value: selectedSched,\n                onChange: e => {\n                  const selectedTimeslot = e.target.value;\n                  setSelectedDate('');\n                  setSelectedSched(selectedTimeslot);\n                  console.log('Selected Schedule ID:', selectedTimeslot);\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"\",\n                  children: \"Select Timeslot\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 293,\n                  columnNumber: 19\n                }, this), schedules.filter(schedule => schedule.clinicId === selectedClinicId && schedule.scheduleDay === selectedDay).map(schedule => /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: schedule.scheduleId,\n                  children: [convertMilitaryToStandardTime(schedule.start), \" - \", convertMilitaryToStandardTime(schedule.end)]\n                }, schedule.scheduleId, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 299,\n                  columnNumber: 23\n                }, this))]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 280,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 279,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 277,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              style: {\n                width: \"150px\"\n              },\n              children: \"Date: \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 311,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"select\", {\n                name: \"sched\",\n                id: `sched-${selectedClinicId}`,\n                style: {\n                  width: \"250px\"\n                },\n                value: selectedDate,\n                onChange: e => {\n                  const selectedDateString = e.target.value;\n                  setSelectedDate(selectedDateString);\n                  console.log('Selected Date:', selectedDateString);\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"\",\n                  children: \"Select Date\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 325,\n                  columnNumber: 19\n                }, this), getNearestDays(selectedDay, 5).map((date, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: date,\n                  children: new Date(date).toLocaleDateString('en-US', {\n                    year: 'numeric',\n                    month: 'long',\n                    day: 'numeric'\n                  })\n                }, index, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 329,\n                  columnNumber: 21\n                }, this))]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 313,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 312,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 310,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: /*#__PURE__*/_jsxDEV(\"td\", {\n              colSpan: 2,\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                style: {\n                  marginTop: \"10px\",\n                  borderRadius: 0,\n                  width: \"100%\"\n                },\n                onClick: handleBookAppointment,\n                children: \"Book an Appointment\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 343,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 343,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 343,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"h5\", {\n                children: [\" \", error]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 344,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 344,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 344,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Existing Appointments \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 347,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n          children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              rowSpan: 2,\n              width: 200,\n              style: {\n                border: \"1px solid lightgray\",\n                backgroundColor: \"lightgray\",\n                paddingLeft: \"10px\"\n              },\n              children: [\"11/06/23 MONDAY \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 350,\n                columnNumber: 152\n              }, this), \" 2:00-5:00 PM\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 350,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(Link, {\n                to: \"/patresched\",\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  style: {\n                    borderRadius: 0,\n                    width: \"200px\"\n                  },\n                  children: \"Reschedule\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 351,\n                  columnNumber: 42\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 351,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 351,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 349,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"cancel\",\n                children: \"Cancel\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 353,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 353,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 353,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 348,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(PatientFooter, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 357,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 197,\n    columnNumber: 5\n  }, this);\n};\n_s(SetAppointment, \"S1ioLEwcpQxBagtQeWbM2Lqggk8=\", false, function () {\n  return [useParams];\n});\n_c = SetAppointment;\nexport default SetAppointment;\nvar _c;\n$RefreshReg$(_c, \"SetAppointment\");","map":{"version":3,"names":["React","useState","useEffect","Link","PatientNavBar","PatientFooter","DoctorCalendar","useParams","startOfWeek","addWeeks","addDays","format","HomeFooter","HomeNavbar","jsxDEV","_jsxDEV","SetAppointment","_s","_schedules$find","_schedules$find2","_schedules$find3","doctorId","error","setError","selectedDay","setSelectedDay","selectedSched","setSelectedSched","selectedDate","setSelectedDate","status","selectedClinicId","setSelectedClinicId","patientId","setPatientId","isPatientLoggedIn","setIsPatientLoggedIn","schedules","setSchedules","scheduleId","clinicId","avatar","doctorName","specialization","contactNumber","docEmail","scheduleDay","start","Date","end","slots","clinicName","address","number","email","fetchDoctorSchedules","response","fetch","ok","data","json","formattedSchedules","map","schedule","doctor","user","firstName","lastName","startTime","endTime","clinic","name","officeNumber","officeEmail","convertMilitaryToStandardTime","militaryTime","length","hours","minutes","split","parsedHours","parseInt","period","formattedHours","getNearestDays","numberOfOccurrences","today","daysInWeek","selectedDayIndex","findIndex","day","nearestDays","Array","from","_","index","currentWeek","weekStartsOn","startOfSelectedWeek","nextDay","uniqueClinics","Set","handleChangeClinic","selectedClinic","find","fetchLoggedInPatientId","userId","children","fileName","_jsxFileName","lineNumber","columnNumber","style","textAlign","marginTop","to","handleBookAppointment","url","method","console","log","display","margin","width","justifyContent","marginLeft","color","id","fontSize","fontWeight","onChange","e","target","value","filter","selectedTimeslot","selectedDateString","date","toLocaleDateString","year","month","colSpan","borderRadius","onClick","rowSpan","border","backgroundColor","paddingLeft","className","_c","$RefreshReg$"],"sources":["D:/3rd Year 1st Sem/DocClickConnect/appointment/src/pages/AppointmentPages/SetAppointment.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport PatientNavBar from '../../components/PatientNavBar';\nimport PatientFooter from '../../components/PatientFooter';\nimport DoctorCalendar from '../../components/DoctorCalendar';\nimport { useParams } from 'react-router-dom';\nimport { startOfWeek, addWeeks, addDays, format } from 'date-fns';\nimport HomeFooter from '../../components/HomeFooter';\nimport HomeNavbar from '../../components/HomeNavbar';\nconst SetAppointment = () => {\n  const { doctorId } = useParams();\n  const [error, setError] = useState(null);\n  const [selectedDay, setSelectedDay] = useState('');\n  const [selectedSched, setSelectedSched] = useState('');\n  const [selectedDate, setSelectedDate] = useState('');\n  const [status] = useState(\"Scheduled by Patient\");\n  const [selectedClinicId, setSelectedClinicId] = useState('');\n  const [patientId, setPatientId] = useState('');\n  const [isPatientLoggedIn, setIsPatientLoggedIn] = useState('');\n  const [schedules, setSchedules] = useState([\n    {\n      scheduleId: '',\n      clinicId: '',\n      avatar: '',\n      doctorName: '',\n      specialization: '',\n      contactNumber: '',\n      docEmail: '',\n      scheduleDay: '',\n      start: new Date(),\n      end: new Date(),  // 5:00 PM\n      slots: '',\n      clinicName: '',\n      address: '',\n      number: '',\n      email: ''\n    },\n  ]);\n\n  useEffect(() => {\n    const fetchDoctorSchedules = async () => {\n      try {\n        const response = await fetch(`http://localhost:8080/docsched/${doctorId}`);\n\n        if (response.ok) {\n          const data = await response.json();\n\n          const formattedSchedules = data.map(schedule => ({\n            scheduleId: schedule.scheduleId,\n            clinicId: schedule.clinicId,\n            avatar: schedule.doctor.user.avatar,\n            doctorName: `${schedule.doctor.user.firstName} ${schedule.doctor.user.lastName}`,\n            specialization: schedule.doctor.specialization,\n            contactNumber: schedule.doctor.user.contactNumber,\n            docEmail: schedule.doctor.user.email,\n            scheduleDay: schedule.scheduleDay,\n            start: schedule.startTime,\n            end: schedule.endTime,\n            slots: schedule.slots,\n            clinicName: schedule.clinic.name,\n            address: schedule.clinic.address,\n            number: schedule.clinic.officeNumber,\n            email: schedule.clinic.officeEmail\n          }));\n\n          setSchedules(formattedSchedules);\n\n        } else {\n          setError('Error fetching appointment');\n        }\n      } catch (error) {\n        setError('Error fetching appointment');\n      }\n    };\n\n    fetchDoctorSchedules();\n  }, [doctorId]);\n\n  const convertMilitaryToStandardTime = (militaryTime) => {\n    if (typeof militaryTime !== 'string' || militaryTime.length !== 8) {\n      return 'Invalid Time';\n    }\n\n    const [hours, minutes] = militaryTime.split(':');\n    const parsedHours = parseInt(hours, 10);\n    const period = parsedHours >= 12 ? 'PM' : 'AM';\n    const formattedHours = parsedHours % 12 || 12;\n    return `${formattedHours}:${minutes} ${period}`;\n  };\n\n\n\n  const getNearestDays = (selectedDay, numberOfOccurrences) => {\n    const today = new Date();\n    const daysInWeek = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];\n    const selectedDayIndex = daysInWeek.findIndex(day => day === selectedDay);\n\n    if (selectedDayIndex === -1) {\n      return []; // Invalid selected day\n    }\n\n    const nearestDays = Array.from({ length: numberOfOccurrences }, (_, index) => {\n      const currentWeek = startOfWeek(today, { weekStartsOn: 0 }); // Always start from Sunday\n      const startOfSelectedWeek = addWeeks(currentWeek, index);\n\n      // Find the next occurrence of the selected day in the current week\n      let nextDay = addDays(startOfSelectedWeek, selectedDayIndex);\n      if (nextDay < today) {\n        // If the selected day has already passed in the current week, move to the next week\n        nextDay = addWeeks(currentWeek, index + 1);\n      }\n\n      return format(nextDay, 'yyyy-MM-dd');\n    });\n\n    return nearestDays;\n  };\n\n\n  const uniqueClinics = [...new Set(schedules.map(schedule => schedule.clinicName))];\n\n\n  const handleChangeClinic = (clinicName) => {\n    const selectedClinic = schedules.find(schedule => schedule.clinicName === clinicName);\n    setSelectedClinicId(selectedClinic?.clinicId || '');\n    setSelectedDay('');\n    setSelectedDate('');\n\n  };\n  useEffect(() => {\n    const fetchLoggedInPatientId = async () => {\n      try {\n        const response = await fetch('http://localhost:8080/checkLoggedInPatient');\n        if (response.ok) {\n          const userId = await response.json();\n          setPatientId(userId);\n          setIsPatientLoggedIn(true);\n        } else {\n          setError('Failed to fetch logged-in patient user ID.');\n          setIsPatientLoggedIn(false);\n        }\n      } catch (error) {\n        setError('Error fetching logged-in patient user ID:', error);\n        setIsPatientLoggedIn(false);\n        // Handle the error or provide feedback to the user\n      }\n    };\n\n    fetchLoggedInPatientId();\n  }, []); // The empty dependency array ensures that this effect runs once when the component mounts\n\n   // Change this line\n\n  if (!isPatientLoggedIn) {\n    return (\n    <div>\n      <HomeNavbar/>\n      <div style={{ textAlign: 'center', marginTop: '50px' }}>\n        <h1>No patient is logged in.</h1>\n        <Link to=\"/login\"><button>Login</button></Link>\n      </div>\n      <HomeFooter/>\n    </div>\n      \n    );\n  }\n  const handleBookAppointment = async () => {\n    try {\n      // Validate your appointment data here if needed\n  \n      const url = `http://localhost:8080/appointment?patientId=${patientId}&scheduleId=${selectedSched}&scheduleDate=${selectedDate}&status=${status}`;\n  \n      const response = await fetch(url, {\n        method: 'POST',\n      });\n  \n      if (response.ok) {\n        console.log('Appointment added successfully!');\n        console.log('Clinic ID:', selectedClinicId);\n        console.log('Selected Day:', selectedDay);\n        console.log('Selected Timeslot:', selectedSched);\n        console.log('Selected Date:', selectedDate);\n        // You can handle any other logic after a successful appointment addition here\n      } else {\n        setError('Failed to add appointment.');\n        // Handle the error or provide feedback to the user\n      }\n    } catch (error) {\n      setError('Error adding appointment:', error);\n      // Handle the error or provide feedback to the user\n    }\n  };\n  \n  \n\n  return (\n    <div>\n      <PatientNavBar />\n      <div style={{ display: \"flex\", margin: \"auto\", width: \"100vw\", justifyContent: \"center\" }}>\n        <DoctorCalendar />\n\n        <div style={{ marginLeft: \"30px\" }}>\n          <h1>Dr. {schedules[0].doctorName}</h1>\n          <h2>Specialization: {schedules[0].specialization}</h2>\n          <h3>Contact Number: {schedules[0].contactNumber}</h3>\n          <h3>Email Address: {schedules[0].docEmail}</h3>\n          <br />\n\n          <table>\n            <tr>\n              <td>\n                <h2 style={{ color: \"#0094d4\" }}>Clinic: </h2>\n              </td>\n              <td>\n                <select\n                  name=\"clinic\"\n                  id=\"clinic\"\n                  style={{\n                    width: \"250px\",\n                    fontSize: \"1.5rem\",\n                    fontWeight: \"bold\",\n                    color: \"#0094d4\",\n                  }}\n                  onChange={(e) => handleChangeClinic(e.target.value)}\n                >\n                  <option value=\"\">Select Clinic</option>\n                  {uniqueClinics.map((clinicName, index) => (\n                    <option key={index} value={clinicName}>\n                      {clinicName}\n                    </option>\n                  ))}\n                </select>\n              </td>\n            </tr>\n            <tr>\n              <td><h5>Address:</h5></td>\n              <td>{schedules.find(schedule => schedule.clinicId === selectedClinicId)?.address}</td>\n            </tr>\n            <tr>\n              <td><h5>Contact Number:</h5></td>\n              <td>{schedules.find(schedule => schedule.clinicId === selectedClinicId)?.number}</td>\n            </tr>\n            <tr>\n              <td><h5>Email Address:</h5></td>\n              <td>{schedules.find(schedule => schedule.clinicId === selectedClinicId)?.email}</td>\n            </tr>\n            <tr>\n              <td style={{ width: \"150px\" }}>Day: </td>\n              <td>\n                <select\n                  name=\"sched\"\n                  id={`day-${selectedClinicId}`}\n                  style={{ width: \"250px\" }}\n                  value={selectedDay}\n                  onChange={(e) => {\n                    setSelectedDay(e.target.value);\n                    setSelectedSched('');\n                    setSelectedDate('');\n                    console.log(\"Selected Day changed:\", e.target.value);\n                  }}\n                >\n                  {/* Initial blank option */}\n                  <option value=\"\">Select Day</option>\n                  {/* Options for the selected clinic's unique days */}\n                  {[...new Set(schedules\n                    .filter(schedule => schedule.clinicId === selectedClinicId)\n                    .map(schedule => schedule.scheduleDay))]\n                    .map(scheduleDay => (\n                      <option key={`${selectedClinicId}-${scheduleDay}`} value={scheduleDay}>\n                        {scheduleDay}\n                      </option>\n                    ))}\n                </select>\n\n              </td>\n            </tr>\n            <tr>\n              <td style={{ width: \"150px\" }}>Timeslot: </td>\n              <td>\n                <select\n                  name=\"timeslot\"\n                  id={`timeslot-${selectedClinicId}`}\n                  style={{ width: \"250px\" }}\n                  value={selectedSched}\n                  onChange={(e) => {\n                    const selectedTimeslot = e.target.value;\n                    setSelectedDate('');\n                    setSelectedSched(selectedTimeslot);\n                    console.log('Selected Schedule ID:', selectedTimeslot);\n                  }}\n                >\n                  {/* Initial blank option */}\n                  <option value=\"\">Select Timeslot</option>\n\n                  {/* Options for the selected clinic's timeslots */}\n                  {schedules\n                    .filter(schedule => schedule.clinicId === selectedClinicId && schedule.scheduleDay === selectedDay)\n                    .map(schedule => (\n                      <option key={schedule.scheduleId} value={schedule.scheduleId}>\n                        {convertMilitaryToStandardTime(schedule.start)} - {convertMilitaryToStandardTime(schedule.end)}\n                      </option>\n                    ))}\n                </select>\n\n\n              </td>\n            </tr>\n\n            {/* autogenerated dapat */}\n            <tr>\n              <td style={{ width: \"150px\" }}>Date: </td>\n              <td>\n                <select\n                  name=\"sched\"\n                  id={`sched-${selectedClinicId}`}\n                  style={{ width: \"250px\" }}\n                  value={selectedDate}\n                  onChange={(e) => {\n                    const selectedDateString = e.target.value;\n                    setSelectedDate(selectedDateString);\n                    console.log('Selected Date:', selectedDateString);\n                  }}\n                >\n                  {/* Initial blank option */}\n                  <option value=\"\">Select Date</option>\n\n                  {/* Options for the selected clinic's nearest days (only 5) */}\n                  {getNearestDays(selectedDay, 5).map((date, index) => (\n                    <option key={index} value={date}>\n                      {new Date(date).toLocaleDateString('en-US', {\n                        year: 'numeric',\n                        month: 'long',\n                        day: 'numeric',\n                      })}\n                    </option>\n                  ))}\n                </select>\n\n\n\n              </td>\n            </tr>\n            <tr><td colSpan={2}><button style={{ marginTop: \"10px\", borderRadius: 0, width: \"100%\" }} onClick={handleBookAppointment}>Book an Appointment</button></td></tr>\n            <tr><td><h5> {error}</h5></td></tr>\n          </table>\n\n          <h1>Existing Appointments </h1>\n          <table>\n            <tr>\n              <td rowSpan={2} width={200} style={{ border: \"1px solid lightgray\", backgroundColor: \"lightgray\", paddingLeft: \"10px\" }}>11/06/23 MONDAY <br /> 2:00-5:00 PM</td>\n              <td><Link to=\"/patresched\"><button style={{ borderRadius: 0, width: \"200px\" }}>Reschedule</button></Link></td>\n            </tr>\n            <tr><td><button className='cancel'>Cancel</button></td></tr>\n          </table>\n        </div>\n      </div>\n      <PatientFooter />\n    </div>\n  );\n};\n\nexport default SetAppointment;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}