{"ast":null,"code":"var _jsxFileName = \"D:\\\\3rd Year 1st Sem\\\\DocClickConnect\\\\appointment\\\\src\\\\pages\\\\DoctorPages\\\\DoctorSearch.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport \"../../styles/Search.css\";\nimport PatientNavBar from '../../components/PatientNavBar';\nimport PatientFooter from '../../components/PatientFooter';\nimport DoctorCard from '../../components/Doctors'; // Import the DoctorCard component\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DoctorSearch = () => {\n  _s();\n  const [searchQuery, setSearchQuery] = useState('');\n  const [doctors, setDoctors] = useState([{\n    doctorId: '',\n    firstName: '',\n    lastName: '',\n    contactNumber: '',\n    specialization: '',\n    credentials: '',\n    avatar: ''\n  }]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const fetchAllDoctors = async () => {\n      try {\n        const response = await fetch('http://localhost:8080/allusers');\n        if (response.ok) {\n          const data = await response.json();\n          const formattedDoctors = data.map(doctorData => ({\n            doctorId: doctorData.userId,\n            firstName: `Dr. ${doctorData.user.firstName}`,\n            lastName: doctorData.user.lastName,\n            contactNumber: doctorData.user.contactNumber,\n            specialization: doctorData.specialization,\n            credentials: doctorData.credentials,\n            avatar: doctorData.user.avatar\n          }));\n          setDoctors(formattedDoctors);\n        } else {\n          setError('Failed to fetch doctors');\n        }\n      } catch (error) {\n        setError('Error while fetching doctors');\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    fetchAllDoctors();\n  }, []);\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 12\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Error: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 12\n    }, this);\n  }\n  const handleSearchChange = e => {\n    setSearchQuery(e.target.value);\n  };\n  const handleSearchClick = () => {\n    // Perform the search based on the searchQuery\n    console.log('Searching for:', searchQuery);\n\n    // Filter the doctors array based on the searchQuery\n    const filteredDoctors = doctors.filter(doctor => `${doctor.firstName} ${doctor.lastName}`.toLowerCase().includes(searchQuery.toLowerCase()));\n\n    // Update the state with the filtered doctors\n    setDoctors(filteredDoctors);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"search-container\",\n    id: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(PatientNavBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"info-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"search-box\",\n        style: {\n          position: 'sticky'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"search-input\",\n          placeholder: \"Find the doctor you need..\",\n          value: searchQuery,\n          onChange: handleSearchChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"search-button\",\n          onClick: handleSearchClick,\n          children: \"Search\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: \"block\",\n          marginLeft: \"6%\",\n          marginRight: \"auto\",\n          width: \"90%\"\n        },\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"doctor-grid\",\n          children: doctors.map((doctor, index) => /*#__PURE__*/_jsxDEV(DoctorCard, {\n            doctor: doctor\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(PatientFooter, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 5\n  }, this);\n};\n_s(DoctorSearch, \"1go1Gckq0cP6zYKN06u4rZcqme4=\");\n_c = DoctorSearch;\nexport default DoctorSearch;\nvar _c;\n$RefreshReg$(_c, \"DoctorSearch\");","map":{"version":3,"names":["React","useState","useEffect","PatientNavBar","PatientFooter","DoctorCard","jsxDEV","_jsxDEV","DoctorSearch","_s","searchQuery","setSearchQuery","doctors","setDoctors","doctorId","firstName","lastName","contactNumber","specialization","credentials","avatar","isLoading","setIsLoading","error","setError","fetchAllDoctors","response","fetch","ok","data","json","formattedDoctors","map","doctorData","userId","user","children","fileName","_jsxFileName","lineNumber","columnNumber","handleSearchChange","e","target","value","handleSearchClick","console","log","filteredDoctors","filter","doctor","toLowerCase","includes","className","id","style","position","type","placeholder","onChange","onClick","display","marginLeft","marginRight","width","index","_c","$RefreshReg$"],"sources":["D:/3rd Year 1st Sem/DocClickConnect/appointment/src/pages/DoctorPages/DoctorSearch.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport \"../../styles/Search.css\";\r\nimport PatientNavBar from '../../components/PatientNavBar';\r\nimport PatientFooter from '../../components/PatientFooter';\r\nimport DoctorCard from '../../components/Doctors'; // Import the DoctorCard component\r\n\r\n\r\nconst DoctorSearch = () => {\r\n  const [searchQuery, setSearchQuery] = useState('');\r\n  const [doctors, setDoctors] = useState([\r\n    {\r\n      doctorId: '',\r\n      firstName: '',\r\n      lastName: '',\r\n      contactNumber: '',\r\n      specialization: '',\r\n      credentials: '',\r\n      avatar:''\r\n    }\r\n  ]);\r\n\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n\r\n\r\n  useEffect(() => {\r\n    const fetchAllDoctors = async () => {\r\n      try {\r\n        const response = await fetch('http://localhost:8080/allusers');\r\n\r\n        if (response.ok) {\r\n          const data = await response.json();\r\n          const formattedDoctors = data.map((doctorData) => ({\r\n            doctorId: doctorData.userId,\r\n            firstName: `Dr. ${doctorData.user.firstName}`,\r\n            lastName: doctorData.user.lastName,\r\n            contactNumber: doctorData.user.contactNumber,\r\n            specialization: doctorData.specialization,\r\n            credentials: doctorData.credentials,\r\n            avatar: doctorData.user.avatar\r\n          }));\r\n\r\n          setDoctors(formattedDoctors);\r\n        } else {\r\n          setError('Failed to fetch doctors');\r\n        }\r\n      } catch (error) {\r\n        setError('Error while fetching doctors');\r\n      } finally {\r\n        setIsLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchAllDoctors();\r\n  }, []);\r\n\r\n  \r\n\r\n  if (isLoading) {\r\n    return <p>Loading...</p>;\r\n  }\r\n\r\n  if (error) {\r\n    return <p>Error: {error}</p>;\r\n  }\r\n\r\n  const handleSearchChange = (e) => {\r\n    setSearchQuery(e.target.value);\r\n  };\r\n\r\n  const handleSearchClick = () => {\r\n    // Perform the search based on the searchQuery\r\n    console.log('Searching for:', searchQuery);\r\n  \r\n    // Filter the doctors array based on the searchQuery\r\n    const filteredDoctors = doctors.filter((doctor) =>\r\n      `${doctor.firstName} ${doctor.lastName}`.toLowerCase().includes(searchQuery.toLowerCase())\r\n    );\r\n  \r\n    // Update the state with the filtered doctors\r\n    setDoctors(filteredDoctors);\r\n  };\r\n  \r\n  return (\r\n    <div className=\"search-container\" id=\"container\">\r\n      <PatientNavBar />\r\n      <div className=\"info-container\">\r\n          <div className=\"search-box\" style={{ position: 'sticky' }}>\r\n          <input\r\n            type=\"text\"\r\n            className=\"search-input\"\r\n            placeholder=\"Find the doctor you need..\"\r\n            value={searchQuery}\r\n            onChange={handleSearchChange}\r\n          />\r\n          <button className=\"search-button\" onClick={handleSearchClick}>\r\n            Search\r\n          </button>\r\n        </div>\r\n        <br />\r\n        <div style={{ display: \"block\", marginLeft: \"6%\", marginRight: \"auto\", width: \"90%\"  }}>\r\n          <div className=\"doctor-grid\">\r\n            {doctors.map((doctor, index) => (\r\n              <DoctorCard key={index} doctor={doctor} />\r\n            ))}\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <PatientFooter />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DoctorSearch;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}