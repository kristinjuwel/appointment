{"ast":null,"code":"var _jsxFileName = \"D:\\\\3rd Year 1st Sem\\\\DocClickConnect\\\\appointment\\\\src\\\\components\\\\Doctors.jsx\",\n  _s2 = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport avatar00 from '../images/defaultIcon.png';\nimport avatar01 from '../assets/DoctorIcons/Icon01.png';\nimport avatar02 from '../assets/DoctorIcons/Icon02.png';\nimport avatar03 from '../assets/DoctorIcons/Icon03.png';\nimport avatar04 from '../assets/DoctorIcons/Icon04.png';\nimport avatar05 from '../assets/DoctorIcons/Icon05.png';\nimport avatar06 from '../assets/DoctorIcons/Icon06.png';\nimport avatar07 from '../assets/DoctorIcons/Icon07.png';\nimport avatar08 from '../assets/DoctorIcons/Icon08.png';\nimport avatar09 from '../assets/DoctorIcons/Icon09.png';\nimport avatar10 from '../assets/DoctorIcons/Icon10.png';\nimport avatar11 from '../assets/DoctorIcons/Icon11.png';\nimport avatar12 from '../assets/DoctorIcons/Icon12.png';\nimport avatar13 from '../assets/DoctorIcons/Icon13.png';\nimport avatar14 from '../assets/DoctorIcons/Icon14.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DoctorCard = ({\n  doctor,\n  schedules\n}) => {\n  _s2();\n  var _s = $RefreshSig$();\n  const [avatar] = useState(doctor.avatar || '');\n  const [selectedAvatar, setSelectedAvatar] = useState('');\n  const setDisplayedAvatars = avatar => {\n    const avatarImports = {\n      'avatar01': avatar01,\n      'avatar02': avatar02,\n      'avatar03': avatar03,\n      'avatar04': avatar04,\n      'avatar05': avatar05,\n      'avatar06': avatar06,\n      'avatar07': avatar07,\n      'avatar08': avatar08,\n      'avatar09': avatar09,\n      'avatar10': avatar10,\n      'avatar11': avatar11,\n      'avatar12': avatar12,\n      'avatar13': avatar13,\n      'avatar14': avatar14\n    };\n\n    // Set selectedAvatar using the corresponding import\n    setSelectedAvatar(avatarImports[avatar] || avatar00);\n  };\n  useEffect(() => {\n    // Set displayed avatars based on the doctor's avatar value\n    setDisplayedAvatars(avatar);\n  }, [avatar]);\n  const getUniqueClinicIds = () => {\n    _s();\n    // State to hold the result\n    const [uniqueClinicIds, setUniqueClinicIds] = useState([]);\n    useEffect(() => {\n      // Function to compare doctorId and doctorUserId\n      const compareDoctorsAndSchedules = () => {\n        const uniqueIds = [];\n        doctorsData.forEach(doctor => {\n          const matchingSchedules = schedules.filter(schedule => schedule.doctorUserId === doctor.doctorId);\n\n          // matchingSchedules.forEach((schedule) => {\n          //   if (!uniqueIds.includes(schedule.clinicId)) {\n          //     uniqueIds.push(schedule.clinicId);\n          //   }\n          // });\n          matchingSchedules.forEach(schedule => {\n            console.log('Unique Clinic ID:', schedule.clinicId);\n          });\n        });\n        setUniqueClinicIds(uniqueIds);\n      };\n\n      // Call the comparison function\n      compareDoctorsAndSchedules();\n    }, []);\n    return uniqueClinicIds;\n  };\n  _s(getUniqueClinicIds, \"55R9jUXmM99N/Or1hxQwKDUj4LA=\");\n  const handleGoToAppointment = async () => {\n    window.location.href = `/setappointment/${doctor.doctorId}`;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"doctor-card\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"doctor-info\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          alignItems: 'center',\n          height: '110px'\n        },\n        children: [selectedAvatar && /*#__PURE__*/_jsxDEV(\"img\", {\n          src: selectedAvatar,\n          alt: \"Selected Avatar\",\n          style: {\n            width: '90px',\n            height: 'auto',\n            borderRadius: '50%',\n            marginRight: '10px'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            style: {\n              lineHeight: 1,\n              marginBottom: '5px',\n              marginTop: '5px'\n            },\n            children: doctor.firstName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            style: {\n              lineHeight: 1\n            },\n            children: doctor.lastName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          margin: 0\n        },\n        children: [\"Contact Number: \", doctor.contactNumber]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          margin: 0\n        },\n        children: [\"Specialization: \", doctor.specialization]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          margin: 0\n        },\n        children: [\"Credentials: \", doctor.credentials]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          justifyContent: 'center',\n          marginTop: '10px'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          style: {\n            padding: 5,\n            borderRadius: 0,\n            width: '250px',\n            alignItems: 'center'\n          },\n          onClick: handleGoToAppointment,\n          children: \"Set Appointment\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 5\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 5\n  }, this);\n};\n_s2(DoctorCard, \"1ygKtUFdhhLIZoL7LAlmBuvnGkc=\");\n_c = DoctorCard;\nexport default DoctorCard;\nvar _c;\n$RefreshReg$(_c, \"DoctorCard\");","map":{"version":3,"names":["React","useState","useEffect","Link","avatar00","avatar01","avatar02","avatar03","avatar04","avatar05","avatar06","avatar07","avatar08","avatar09","avatar10","avatar11","avatar12","avatar13","avatar14","jsxDEV","_jsxDEV","DoctorCard","doctor","schedules","_s2","_s","$RefreshSig$","avatar","selectedAvatar","setSelectedAvatar","setDisplayedAvatars","avatarImports","getUniqueClinicIds","uniqueClinicIds","setUniqueClinicIds","compareDoctorsAndSchedules","uniqueIds","doctorsData","forEach","matchingSchedules","filter","schedule","doctorUserId","doctorId","console","log","clinicId","handleGoToAppointment","window","location","href","className","children","style","display","alignItems","height","src","alt","width","borderRadius","marginRight","fileName","_jsxFileName","lineNumber","columnNumber","lineHeight","marginBottom","marginTop","firstName","lastName","margin","contactNumber","specialization","credentials","justifyContent","padding","onClick","_c","$RefreshReg$"],"sources":["D:/3rd Year 1st Sem/DocClickConnect/appointment/src/components/Doctors.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport avatar00 from '../images/defaultIcon.png';\r\nimport avatar01 from '../assets/DoctorIcons/Icon01.png';\r\nimport avatar02 from '../assets/DoctorIcons/Icon02.png';\r\nimport avatar03 from '../assets/DoctorIcons/Icon03.png';\r\nimport avatar04 from '../assets/DoctorIcons/Icon04.png';\r\nimport avatar05 from '../assets/DoctorIcons/Icon05.png';\r\nimport avatar06 from '../assets/DoctorIcons/Icon06.png';\r\nimport avatar07 from '../assets/DoctorIcons/Icon07.png';\r\nimport avatar08 from '../assets/DoctorIcons/Icon08.png';\r\nimport avatar09 from '../assets/DoctorIcons/Icon09.png';\r\nimport avatar10 from '../assets/DoctorIcons/Icon10.png';\r\nimport avatar11 from '../assets/DoctorIcons/Icon11.png';\r\nimport avatar12 from '../assets/DoctorIcons/Icon12.png';\r\nimport avatar13 from '../assets/DoctorIcons/Icon13.png';\r\nimport avatar14 from '../assets/DoctorIcons/Icon14.png';\r\n\r\nconst DoctorCard = ({ doctor, schedules }) => {\r\n  const [avatar] = useState(doctor.avatar || '');\r\n  const [selectedAvatar, setSelectedAvatar] = useState('');\r\n  const setDisplayedAvatars = (avatar) => {\r\n  \r\n    const avatarImports = {\r\n    'avatar01': avatar01,\r\n    'avatar02': avatar02,\r\n    'avatar03': avatar03,\r\n    'avatar04': avatar04,\r\n    'avatar05': avatar05,\r\n    'avatar06': avatar06,\r\n    'avatar07': avatar07,\r\n    'avatar08': avatar08,\r\n    'avatar09': avatar09,\r\n    'avatar10': avatar10,\r\n    'avatar11': avatar11,\r\n    'avatar12': avatar12,\r\n    'avatar13': avatar13,\r\n    'avatar14': avatar14,\r\n  };\r\n\r\n    // Set selectedAvatar using the corresponding import\r\n    setSelectedAvatar(avatarImports[avatar] || avatar00);\r\n  };\r\n\r\n\r\n  useEffect(() => {\r\n    // Set displayed avatars based on the doctor's avatar value\r\n    setDisplayedAvatars(avatar);\r\n  }, [avatar]);\r\n\r\n\r\n\r\n  const getUniqueClinicIds = () => {\r\n    // State to hold the result\r\n    const [uniqueClinicIds, setUniqueClinicIds] = useState([]);\r\n  \r\n    useEffect(() => {\r\n      // Function to compare doctorId and doctorUserId\r\n      const compareDoctorsAndSchedules = () => {\r\n        const uniqueIds = [];\r\n  \r\n        doctorsData.forEach((doctor) => {\r\n          const matchingSchedules = schedules.filter((schedule) => schedule.doctorUserId === doctor.doctorId);\r\n  \r\n          // matchingSchedules.forEach((schedule) => {\r\n          //   if (!uniqueIds.includes(schedule.clinicId)) {\r\n          //     uniqueIds.push(schedule.clinicId);\r\n          //   }\r\n          // });\r\n          matchingSchedules.forEach((schedule) => {\r\n            console.log('Unique Clinic ID:', schedule.clinicId);\r\n          });\r\n        });\r\n  \r\n        setUniqueClinicIds(uniqueIds);\r\n      };\r\n  \r\n      // Call the comparison function\r\n      compareDoctorsAndSchedules();\r\n    }, []);\r\n  \r\n    return uniqueClinicIds;\r\n  };\r\n\r\n  const handleGoToAppointment = async () => {\r\n    window.location.href = `/setappointment/${doctor.doctorId}`;\r\n  };\r\n  return (\r\n    <div className=\"doctor-card\">\r\n      <div className=\"doctor-info\">\r\n        <div style={{ display: 'flex', alignItems: 'center', height: '110px' }}>\r\n          {selectedAvatar && (\r\n            <img\r\n              src={selectedAvatar}\r\n              alt=\"Selected Avatar\"\r\n              style={{ width: '90px', height: 'auto', borderRadius: '50%', marginRight: '10px' }}\r\n            />\r\n          )}\r\n          <div>\r\n            <h2 style={{ lineHeight: 1, marginBottom: '5px', marginTop: '5px'}}>{doctor.firstName}</h2>\r\n            <h2 style={{ lineHeight: 1}}>{doctor.lastName}</h2>\r\n          </div>\r\n        </div>\r\n          <p style={{ margin: 0 }}>Contact Number: {doctor.contactNumber}</p>\r\n          <p style={{ margin: 0 }}>Specialization: {doctor.specialization}</p>\r\n          <p style={{ margin: 0 }}>Credentials: {doctor.credentials}</p>\r\n          <div style={{ display: 'flex', justifyContent: 'center', marginTop: '10px' }}>\r\n    <button\r\n      style={{ padding: 5, borderRadius: 0, width: '250px', alignItems: 'center' }}\r\n      onClick={handleGoToAppointment}\r\n    >\r\n      Set Appointment\r\n    </button>\r\n  </div>\r\n      </div>\r\n  \r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DoctorCard;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}