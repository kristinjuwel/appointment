{"ast":null,"code":"var _jsxFileName = \"D:\\\\3rd Year 1st Sem\\\\DocClickConnect\\\\appointment\\\\src\\\\pages\\\\DoctorPages\\\\DoctorSearch.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport \"../../styles/Search.css\";\nimport PatientNavBar from '../../components/PatientNavBar';\nimport PatientFooter from '../../components/PatientFooter';\nimport DoctorCard from '../../components/Doctors'; // Import the DoctorCard component\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DoctorSearch = () => {\n  _s();\n  // Sample doctor data (you can replace it with your own data)\n  const [doctors, setDoctors] = useState([{\n    firstName: '',\n    lastName: '',\n    contactNumber: '',\n    specialization: '',\n    credentials: ''\n  }]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const fetchAllDoctors = async () => {\n      try {\n        const response = await fetch('http://localhost:8080/allusers');\n        if (response.ok) {\n          const data = await response.json();\n          const formattedDoctors = data.map(doctorData => ({\n            firstName: `Dr. ${doctorData.user.firstName}`,\n            lastName: doctorData.user.lastName,\n            contactNumber: doctorData.user.contactNumber,\n            specialization: doctorData.specialization,\n            credentials: doctorData.credentials\n          }));\n          setDoctors(formattedDoctors);\n        } else {\n          setError('Failed to fetch doctors');\n        }\n      } catch (error) {\n        setError('Error while fetching doctors');\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    fetchAllDoctors();\n  }, []);\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 12\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Error: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"search-container\",\n    id: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(PatientNavBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"info-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"search-box\",\n        style: {\n          position: \"sticky\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          class: \"search-input\",\n          placeholder: \"Find the doctor you need..\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          class: \"search-button\",\n          children: \"Search\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: \"block\",\n          marginLeft: \"6%\",\n          marginRight: \"auto\",\n          width: \"90%\"\n        },\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"doctor-grid\",\n          children: doctors.map((doctor, index) => /*#__PURE__*/_jsxDEV(DoctorCard, {\n            doctor: doctor\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(PatientFooter, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n};\n_s(DoctorSearch, \"qdaF9Dtb8GM77eKLEXE7ca8TkNg=\");\n_c = DoctorSearch;\nexport default DoctorSearch;\nvar _c;\n$RefreshReg$(_c, \"DoctorSearch\");","map":{"version":3,"names":["React","useState","useEffect","PatientNavBar","PatientFooter","DoctorCard","jsxDEV","_jsxDEV","DoctorSearch","_s","doctors","setDoctors","firstName","lastName","contactNumber","specialization","credentials","isLoading","setIsLoading","error","setError","fetchAllDoctors","response","fetch","ok","data","json","formattedDoctors","map","doctorData","user","children","fileName","_jsxFileName","lineNumber","columnNumber","className","id","class","style","position","type","placeholder","display","marginLeft","marginRight","width","doctor","index","_c","$RefreshReg$"],"sources":["D:/3rd Year 1st Sem/DocClickConnect/appointment/src/pages/DoctorPages/DoctorSearch.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport \"../../styles/Search.css\";\r\nimport PatientNavBar from '../../components/PatientNavBar';\r\nimport PatientFooter from '../../components/PatientFooter';\r\nimport DoctorCard from '../../components/Doctors'; // Import the DoctorCard component\r\n\r\n\r\nconst DoctorSearch = () => {\r\n  // Sample doctor data (you can replace it with your own data)\r\n  const [doctors, setDoctors] = useState([\r\n    {\r\n      firstName: '',\r\n      lastName: '',\r\n      contactNumber: '',\r\n      specialization: '',\r\n      credentials: ''\r\n    }\r\n  ]);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const fetchAllDoctors = async () => {\r\n      try {\r\n        const response = await fetch('http://localhost:8080/allusers');\r\n\r\n        if (response.ok) {\r\n          const data = await response.json();\r\n          const formattedDoctors = data.map((doctorData) => ({\r\n            firstName: `Dr. ${doctorData.user.firstName}`,\r\n            lastName: doctorData.user.lastName,\r\n            contactNumber: doctorData.user.contactNumber,\r\n            specialization: doctorData.specialization,\r\n            credentials: doctorData.credentials\r\n          }));\r\n\r\n          setDoctors(formattedDoctors);\r\n        } else {\r\n          setError('Failed to fetch doctors');\r\n        }\r\n      } catch (error) {\r\n        setError('Error while fetching doctors');\r\n      } finally {\r\n        setIsLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchAllDoctors();\r\n  }, []);\r\n\r\n  if (isLoading) {\r\n    return <p>Loading...</p>;\r\n  }\r\n\r\n  if (error) {\r\n    return <p>Error: {error}</p>;\r\n  }\r\n\r\n\r\n  return (\r\n    <div className=\"search-container\" id=\"container\">\r\n      <PatientNavBar />\r\n      <div className=\"info-container\">\r\n        <div class=\"search-box\" style={{position: \"sticky\"}}>\r\n          <input type=\"text\" class=\"search-input\" placeholder=\"Find the doctor you need..\"/>\r\n          <button class=\"search-button\">Search</button>\r\n        </div>\r\n        <br />\r\n        <div style={{ display: \"block\", marginLeft: \"6%\", marginRight: \"auto\", width: \"90%\" }}>\r\n          <div className=\"doctor-grid\">\r\n            {doctors.map((doctor, index) => (\r\n              <DoctorCard key={index} doctor={doctor} />\r\n            ))}\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <PatientFooter />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DoctorSearch;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}