{"ast":null,"code":"var _jsxFileName = \"D:\\\\3rd Year 1st Sem\\\\DocClickConnect\\\\appointment\\\\src\\\\pages\\\\DoctorPages\\\\DoctorClinics.jsx\",\n  _s = $RefreshSig$();\nimport \"../../styles/Search.css\";\nimport DoctorNavbar from '../../components/DoctorNavbar';\nimport DoctorFooter from '../../components/DoctorFooter';\nimport React, { useState, useEffect } from 'react';\nimport ClinicCard from \"../../components/Clinics\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DoctorClinics = () => {\n  _s();\n  const [schedules, setSchedules] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [clinicsResponse, setClinicsResponse] = useState('');\n  const [doctorUserId, setDoctorUserId] = useState(''); // To store the patient's user ID\n  const [isError, setIsError] = useState(false);\n  const [clinics, setClinics] = useState([{\n    name: '',\n    address: '',\n    doctor: ''\n  }]);\n  useEffect(() => {\n    // Replace 'http://localhost:8080' with your actual API URL\n    fetch('http://localhost:8080/checkLoggedInDoctor').then(response => {\n      if (response.ok) {\n        return response.json();\n      }\n      throw new Error('Network response was not ok');\n    }).then(data => {\n      console.log({\n        data\n      });\n      setDoctorUserId(data);\n      // Once you have the patientUserId, make another request to get appointments\n      fetch(`http://localhost:8080/docsched/${data}`).then(clinicsResponse => {\n        if (clinicsResponse.ok) {\n          return clinicsResponse.json();\n        }\n        throw new Error('Network response was not ok');\n      }).then(clinicData => {\n        const formattedClinics = clinicData.map(clinics => {\n          return {\n            name: '' + clinics.clinics.name,\n            address: '' + clinics.clinics.address,\n            doctor: '' + clinics.doctor.user.firstName\n          };\n        });\n        setClinics(formattedClinics);\n      }).catch(error => {\n        // Handle errors\n        console.error(error);\n      });\n    }).catch(error => {\n      setIsError(true);\n      console.error('Error:', error);\n    });\n  }, []);\n\n  // if (loading) {\n  //   return <p>Loading...</p>;\n  // }\n\n  const handleEdit = () => {\n    console.log('Edit clicked for clinic:');\n  };\n  const handleDelete = () => {\n    console.log('Delete clicked for clinic:');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"info-container\",\n    id: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(DoctorNavbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"info-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"doctor-grid\",\n        children: clinics.map((clinic, index) => /*#__PURE__*/_jsxDEV(ClinicCard, {\n          clinic: clinic,\n          onEdit: handleEdit,\n          onDelete: handleDelete\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DoctorFooter, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 5\n  }, this);\n};\n_s(DoctorClinics, \"HMV00YCdoTGtUFkTYrySu7nA2g4=\");\n_c = DoctorClinics;\nexport default DoctorClinics;\nvar _c;\n$RefreshReg$(_c, \"DoctorClinics\");","map":{"version":3,"names":["DoctorNavbar","DoctorFooter","React","useState","useEffect","ClinicCard","jsxDEV","_jsxDEV","DoctorClinics","_s","schedules","setSchedules","loading","setLoading","clinicsResponse","setClinicsResponse","doctorUserId","setDoctorUserId","isError","setIsError","clinics","setClinics","name","address","doctor","fetch","then","response","ok","json","Error","data","console","log","clinicData","formattedClinics","map","user","firstName","catch","error","handleEdit","handleDelete","className","id","children","fileName","_jsxFileName","lineNumber","columnNumber","clinic","index","onEdit","onDelete","_c","$RefreshReg$"],"sources":["D:/3rd Year 1st Sem/DocClickConnect/appointment/src/pages/DoctorPages/DoctorClinics.jsx"],"sourcesContent":["import \"../../styles/Search.css\";\r\nimport DoctorNavbar from '../../components/DoctorNavbar';\r\nimport DoctorFooter from '../../components/DoctorFooter';\r\nimport React, { useState, useEffect } from 'react';\r\nimport ClinicCard from \"../../components/Clinics\";\r\n\r\nconst DoctorClinics= () => {\r\n  const [schedules, setSchedules] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [clinicsResponse, setClinicsResponse] = useState('');\r\n  const [doctorUserId, setDoctorUserId] = useState(''); // To store the patient's user ID\r\n  const [isError, setIsError] = useState(false);\r\n  const [clinics, setClinics] = useState([\r\n    {\r\n      name: '',\r\n      address: '',\r\n      doctor: ''\r\n    },\r\n  ]);\r\n\r\n  useEffect(() => {\r\n      // Replace 'http://localhost:8080' with your actual API URL\r\n      fetch('http://localhost:8080/checkLoggedInDoctor')\r\n        .then((response) => {\r\n          if (response.ok) {\r\n            return response.json();\r\n           \r\n          }\r\n          throw new Error('Network response was not ok');\r\n        })\r\n        .then((data) => {\r\n          \r\n          console.log({data});\r\n          setDoctorUserId(data);\r\n          // Once you have the patientUserId, make another request to get appointments\r\n          fetch(`http://localhost:8080/docsched/${data}`)\r\n            .then((clinicsResponse) => {\r\n              if (clinicsResponse.ok) {\r\n                return clinicsResponse.json();\r\n              }\r\n              throw new Error('Network response was not ok');\r\n            })\r\n            .then((clinicData) => {\r\n              const formattedClinics = clinicData.map((clinics) => {\r\n                return {\r\n                  name: '' + clinics.clinics.name,\r\n                  address: '' + clinics.clinics.address,\r\n                  doctor: ''+ clinics.doctor.user.firstName \r\n                };\r\n              });\r\n  \r\n              setClinics(formattedClinics);\r\n            })\r\n            .catch((error) => {\r\n              // Handle errors\r\n              console.error(error);\r\n            });\r\n  \r\n        })\r\n        .catch((error) => {\r\n          setIsError(true);\r\n          console.error('Error:', error);\r\n        });\r\n    }, []);\r\n\r\n\r\n  // if (loading) {\r\n  //   return <p>Loading...</p>;\r\n  // }\r\n\r\n  const handleEdit = () => {\r\n    console.log('Edit clicked for clinic:', );\r\n  };\r\n\r\n  const handleDelete = () => {\r\n\r\n    console.log('Delete clicked for clinic:', );\r\n  };\r\n\r\n  return (\r\n    <div className=\"info-container\" id=\"container\">\r\n      <DoctorNavbar />\r\n      <div className=\"info-container\">\r\n        <div className=\"doctor-grid\">\r\n        {clinics.map((clinic, index) => (\r\n            <ClinicCard\r\n              key={index}\r\n              clinic={clinic}\r\n              onEdit={handleEdit}\r\n              onDelete={handleDelete}\r\n            />\r\n          ))}\r\n        </div>\r\n      </div>\r\n      <DoctorFooter />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DoctorClinics;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}