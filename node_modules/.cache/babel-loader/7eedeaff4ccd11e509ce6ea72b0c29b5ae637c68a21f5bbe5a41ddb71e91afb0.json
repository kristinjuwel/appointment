{"ast":null,"code":"import _regeneratorRuntime from\"D:/3rd Year 1st Sem/DocClickConnect/appointment/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _asyncToGenerator from\"D:/3rd Year 1st Sem/DocClickConnect/appointment/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _slicedToArray from\"D:/3rd Year 1st Sem/DocClickConnect/appointment/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useState,useEffect}from'react';import DoctorNavbar from'../../components/DoctorNavbar';import DoctorFooter from'../../components/DoctorFooter';import{Calendar,dateFnsLocalizer}from'react-big-calendar';import format from'date-fns/format';import parse from'date-fns/parse';import startOfWeek from'date-fns/startOfWeek';import getDay from'date-fns/getDay';import\"react-big-calendar/lib/css/react-big-calendar.css\";import\"../../styles/Calendar.css\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var DoctorAppointment=function DoctorAppointment(){var _useState=useState(false),_useState2=_slicedToArray(_useState,2),isError=_useState2[0],setIsError=_useState2[1];var _useState3=useState(''),_useState4=_slicedToArray(_useState3,2),doctorUserId=_useState4[0],setDoctorUserId=_useState4[1];var _useState5=useState([{title:'',clinic:'',address:'',patientUserId:'',start:new Date(),end:new Date(),// 5:00 PM\nappointmentId:'',appointmentStatus:'',slots:''}]),_useState6=_slicedToArray(_useState5,2),appointments=_useState6[0],setAppointments=_useState6[1];useEffect(function(){// Replace 'http://localhost:8080' with your actual API URL\nfetch('http://localhost:8080/checkLoggedInDoctor').then(function(response){if(response.ok){return response.json();}throw new Error('Network response was not ok');}).then(function(data){setDoctorUserId(data);// Once you have the patientUserId, make another request to get appointments\nfetch(\"http://localhost:8080/docappointments?doctorUserId=\".concat(data)).then(function(appointmentsResponse){if(appointmentsResponse.ok){return appointmentsResponse.json();}throw new Error('Network response was not ok');}).then(function(appointmentsData){var formattedAppointments=appointmentsData.map(function(appointment){// Extract date and time components\nvar _appointment$schedule=appointment.scheduleDate.split('-').map(Number),_appointment$schedule2=_slicedToArray(_appointment$schedule,3),year=_appointment$schedule2[0],month=_appointment$schedule2[1],day=_appointment$schedule2[2];var _appointment$startTim=appointment.startTime.split(':').map(Number),_appointment$startTim2=_slicedToArray(_appointment$startTim,2),hours=_appointment$startTim2[0],minutes=_appointment$startTim2[1];var _appointment$endTime$=appointment.endTime.split(':').map(Number),_appointment$endTime$2=_slicedToArray(_appointment$endTime$,2),hours2=_appointment$endTime$2[0],minutes2=_appointment$endTime$2[1];// Create Date objects for start and end times\nvar startDate=new Date(year,month-1,day,hours,minutes);var endDate=new Date(year,month-1,day,hours2,minutes2);// Create an appointment object\nreturn{title:appointment.patientName,clinic:appointment.clinicName,address:appointment.address,patientUserId:appointment.patientUserId,start:startDate,end:endDate,appointmentId:appointment.transactionNo,appointmentStatus:appointment.status,slots:appointment.slots};});setAppointments(formattedAppointments);console.log(appointments);}).catch(function(error){// Handle errors\nconsole.error(error);});}).catch(function(error){setIsError(true);console.error('Error:',error);});},[appointments]);var locales={\"en-US\":require(\"date-fns/locale/en-US\")};var localizer=dateFnsLocalizer({format:format,parse:parse,startOfWeek:startOfWeek,getDay:getDay,locales:locales});var getBorderColor=function getBorderColor(status){switch(status){case'Cancelled':return'#FCA694';case'Rescheduled':return'#FFB97F';case'Scheduled by Patient':return'#FFFFDC';case'Approved by Doctor':return'#BAFFC4';default:return'lightgray';}};var CustomEvent=function CustomEvent(_ref){var event=_ref.event;return/*#__PURE__*/_jsxs(\"div\",{style:{margin:'5px 0',whiteSpace:'nowrap',overflowY:'auto',maxHeight:\"55px\",textOverflow:'ellipsis'},children:[/*#__PURE__*/_jsx(\"strong\",{style:{margin:'0px 0',overflow:'hidden',textOverflow:'ellipsis',whiteSpace:'normal'},children:event.clinic}),/*#__PURE__*/_jsx(\"p\",{style:{margin:'0px 0',overflow:'hidden',textOverflow:'ellipsis',whiteSpace:'normal'},children:event.title}),/*#__PURE__*/_jsx(\"p\",{style:{margin:'0px 0',overflow:'hidden',textOverflow:'ellipsis',whiteSpace:'normal',backgroundColor:getBorderColor(event.appointmentStatus)},children:event.appointmentStatus}),/*#__PURE__*/_jsx(\"p\",{style:{margin:'0px 0',overflow:'hidden',textOverflow:'ellipsis',whiteSpace:'normal'},children:event.slots})]});};var filterAndAggregateAppointments=function filterAndAggregateAppointments(appointments){// Create an object to store unique appointments based on title\nvar uniqueAppointments={};// Iterate through each appointment\nappointments.forEach(function(appointment){var title=appointment.title,patientUserId=appointment.patientUserId,clinic=appointment.clinic;// Check if the title already exists in uniqueAppointments\nif(!uniqueAppointments[title]){// If not, create an entry with an array containing the current appointment\nuniqueAppointments[title]={title:title,patientUserId:patientUserId,clinics:[clinic]};}else{// If yes, append the clinic to the existing array\nuniqueAppointments[title].clinics.push(clinic);}});// Convert the values of uniqueAppointments object into an array\nvar resultAppointments=Object.values(uniqueAppointments);return resultAppointments;};// Usage example\nvar resultAppointments=filterAndAggregateAppointments(appointments);var handleManage=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(patientUserId){return _regeneratorRuntime().wrap(function _callee$(_context){while(1)switch(_context.prev=_context.next){case 0:window.location.href=\"/manageappointments/\".concat(patientUserId);case 1:case\"end\":return _context.stop();}},_callee);}));return function handleManage(_x){return _ref2.apply(this,arguments);};}();return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(DoctorNavbar,{}),/*#__PURE__*/_jsxs(\"div\",{style:{display:\"flex\",margin:\"auto\",width:\"100vw\",justifyContent:\"center\"},children:[/*#__PURE__*/_jsx(Calendar,{localizer:localizer,events:appointments,startAccessor:\"start\",endAccessor:\"end\",style:{height:700,width:'70%'},components:{event:CustomEvent// Use the custom Event component\n}}),appointments.filter(function(appointment){return appointment;}).length>0?/*#__PURE__*/_jsxs(\"div\",{style:{marginLeft:\"30px\"},children:[/*#__PURE__*/_jsx(\"h1\",{children:\"My Clinic\"}),resultAppointments.map(function(appointment,index){return/*#__PURE__*/_jsxs(\"table\",{style:{borderBottom:\"1px solid lightgrey\"},children:[/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{width:250,children:appointment.title}),/*#__PURE__*/_jsx(\"td\",{children:/*#__PURE__*/_jsx(\"button\",{style:{borderRadius:0,width:\"260px\",height:\"40px\"},onClick:function onClick(){return handleManage(appointment.patientUserId);},children:\"Manage Appointments\"})})]}),/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{width:250,children:Array.from(new Set(appointment.clinics)).map(function(clinic,clinicIndex){return/*#__PURE__*/_jsxs(\"span\",{children:[clinic,clinicIndex!==appointment.clinics.length-1?/*#__PURE__*/_jsx(\"br\",{}):'']},clinicIndex);})}),/*#__PURE__*/_jsx(\"td\",{children:/*#__PURE__*/_jsx(\"button\",{className:\"cancel\",style:{width:\"100%\",height:\"40px\"},children:\"Cancel Appointments\"})})]})]},index);})]}):/*#__PURE__*/ // Display a message if there are no appointments with appointmentStatus === \"Approved by Doctor\"\n_jsx(\"div\",{style:{marginLeft:\"1%\"},children:/*#__PURE__*/_jsx(\"p\",{children:\"You have no appointments yet.\"})})]}),/*#__PURE__*/_jsx(DoctorFooter,{})]});};export default DoctorAppointment;","map":{"version":3,"names":["React","useState","useEffect","DoctorNavbar","DoctorFooter","Calendar","dateFnsLocalizer","format","parse","startOfWeek","getDay","jsx","_jsx","jsxs","_jsxs","DoctorAppointment","_useState","_useState2","_slicedToArray","isError","setIsError","_useState3","_useState4","doctorUserId","setDoctorUserId","_useState5","title","clinic","address","patientUserId","start","Date","end","appointmentId","appointmentStatus","slots","_useState6","appointments","setAppointments","fetch","then","response","ok","json","Error","data","concat","appointmentsResponse","appointmentsData","formattedAppointments","map","appointment","_appointment$schedule","scheduleDate","split","Number","_appointment$schedule2","year","month","day","_appointment$startTim","startTime","_appointment$startTim2","hours","minutes","_appointment$endTime$","endTime","_appointment$endTime$2","hours2","minutes2","startDate","endDate","patientName","clinicName","transactionNo","status","console","log","catch","error","locales","require","localizer","getBorderColor","CustomEvent","_ref","event","style","margin","whiteSpace","overflowY","maxHeight","textOverflow","children","overflow","backgroundColor","filterAndAggregateAppointments","uniqueAppointments","forEach","clinics","push","resultAppointments","Object","values","handleManage","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_callee$","_context","prev","next","window","location","href","stop","_x","apply","arguments","display","width","justifyContent","events","startAccessor","endAccessor","height","components","filter","length","marginLeft","index","borderBottom","borderRadius","onClick","Array","from","Set","clinicIndex","className"],"sources":["D:/3rd Year 1st Sem/DocClickConnect/appointment/src/pages/DoctorPages/DoctorAppointment.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport DoctorNavbar from '../../components/DoctorNavbar';\nimport DoctorFooter from '../../components/DoctorFooter';\nimport { Calendar, dateFnsLocalizer } from 'react-big-calendar';\nimport format from 'date-fns/format';\nimport parse from 'date-fns/parse';\nimport startOfWeek from 'date-fns/startOfWeek';\nimport getDay from 'date-fns/getDay';\nimport \"react-big-calendar/lib/css/react-big-calendar.css\";\nimport \"../../styles/Calendar.css\";\n\nconst DoctorAppointment = () => {\n  const [isError, setIsError] = useState(false);\n  const [doctorUserId, setDoctorUserId] = useState('');\n  const [appointments, setAppointments] = useState([\n    {\n      title: '',\n      clinic: '',\n      address: '',\n      patientUserId: '',\n      start: new Date(),\n      end: new Date(),  // 5:00 PM\n      appointmentId: '',\n      appointmentStatus: '',\n      slots: ''\n    },\n  ]);\n\n\n  useEffect(() => {\n    // Replace 'http://localhost:8080' with your actual API URL\n    fetch('http://localhost:8080/checkLoggedInDoctor')\n      .then((response) => {\n        if (response.ok) {\n          return response.json();\n        }\n        throw new Error('Network response was not ok');\n      })\n      .then((data) => {\n        setDoctorUserId(data);\n        // Once you have the patientUserId, make another request to get appointments\n        fetch(`http://localhost:8080/docappointments?doctorUserId=${data}`)\n          .then((appointmentsResponse) => {\n            if (appointmentsResponse.ok) {\n              return appointmentsResponse.json();\n            }\n            throw new Error('Network response was not ok');\n          })\n          .then((appointmentsData) => {\n            const formattedAppointments = appointmentsData.map((appointment) => {\n              // Extract date and time components\n              const [year, month, day] = appointment.scheduleDate.split('-').map(Number);\n              const [hours, minutes] = appointment.startTime.split(':').map(Number);\n              const [hours2, minutes2] = appointment.endTime.split(':').map(Number);\n\n              // Create Date objects for start and end times\n              const startDate = new Date(year, month - 1, day, hours, minutes);\n              const endDate = new Date(year, month - 1, day, hours2, minutes2);\n\n              // Create an appointment object\n              return {\n                title: appointment.patientName,\n                clinic: appointment.clinicName,\n                address: appointment.address,\n                patientUserId: appointment.patientUserId,\n                start: startDate,\n                end: endDate,\n                appointmentId: appointment.transactionNo,\n                appointmentStatus: appointment.status,\n                slots: appointment.slots\n              };\n            });\n\n            setAppointments(formattedAppointments);\n            console.log(appointments);\n          })\n          .catch((error) => {\n            // Handle errors\n            console.error(error);\n          });\n\n      })\n      .catch((error) => {\n        setIsError(true);\n        console.error('Error:', error);\n      });\n  }, [appointments]);\n\n  const locales = {\n    \"en-US\": require(\"date-fns/locale/en-US\")\n  }\n\n  const localizer = dateFnsLocalizer({\n    format,\n    parse,\n    startOfWeek,\n    getDay,\n    locales\n  })\n  const getBorderColor = (status) => {\n    switch (status) {\n      case 'Cancelled':\n        return '#FCA694';\n      case 'Rescheduled':\n        return '#FFB97F';\n      case 'Scheduled by Patient':\n        return '#FFFFDC';\n      case 'Approved by Doctor':\n        return '#BAFFC4';\n      default:\n        return 'lightgray';\n    }\n  };\n  const CustomEvent = ({ event }) => (\n    <div style={{ margin: '5px 0', whiteSpace: 'nowrap', overflowY: 'auto', maxHeight: \"55px\", textOverflow: 'ellipsis' }}>\n      <strong style={{ margin: '0px 0', overflow: 'hidden', textOverflow: 'ellipsis', whiteSpace: 'normal' }}>\n        {event.clinic}\n      </strong>\n      <p style={{ margin: '0px 0', overflow: 'hidden', textOverflow: 'ellipsis', whiteSpace: 'normal' }}>\n        {event.title}\n      </p>\n      <p style={{ margin: '0px 0', overflow: 'hidden', textOverflow: 'ellipsis', whiteSpace: 'normal', backgroundColor: getBorderColor(event.appointmentStatus)  }}>\n        {event.appointmentStatus}\n      </p>\n      <p style={{ margin: '0px 0', overflow: 'hidden', textOverflow: 'ellipsis', whiteSpace: 'normal' }}>\n        {event.slots}\n      </p>\n    </div>\n   \n  );\n  const filterAndAggregateAppointments = (appointments) => {\n    // Create an object to store unique appointments based on title\n    const uniqueAppointments = {};\n\n    // Iterate through each appointment\n    appointments.forEach(appointment => {\n      const { title, patientUserId, clinic } = appointment;\n\n      // Check if the title already exists in uniqueAppointments\n      if (!uniqueAppointments[title]) {\n        // If not, create an entry with an array containing the current appointment\n        uniqueAppointments[title] = {\n          title,\n          patientUserId,\n          clinics: [clinic],\n        };\n      } else {\n        // If yes, append the clinic to the existing array\n        uniqueAppointments[title].clinics.push(clinic);\n      }\n    });\n\n    // Convert the values of uniqueAppointments object into an array\n    const resultAppointments = Object.values(uniqueAppointments);\n\n    return resultAppointments;\n  };\n\n  // Usage example\n  const resultAppointments = filterAndAggregateAppointments(appointments);\n\n\n    \n\n  const handleManage = async (patientUserId) => {\n    window.location.href = `/manageappointments/${patientUserId}`;\n  };\n\n  return (\n    <div>\n      <DoctorNavbar />\n      <div style={{ display: \"flex\", margin: \"auto\", width: \"100vw\", justifyContent: \"center\" }}>\n      <Calendar\n          localizer={localizer}\n          events={appointments}\n          startAccessor=\"start\"\n          endAccessor=\"end\"\n          style={{ height: 700, width: '70%' }}\n          components={{\n            event: CustomEvent, // Use the custom Event component\n          }}\n        />\n        {appointments.filter(appointment => appointment).length > 0 ? (\n          <div style={{ marginLeft: \"30px\" }}>\n            <h1>My Clinic</h1>\n            {resultAppointments.map((appointment, index) => (\n              <table key={index} style={{borderBottom: \"1px solid lightgrey\"}}>\n                <tr>\n                  <td width={250}>{appointment.title}</td>\n                  <td ><button style={{ borderRadius: 0, width: \"260px\", height: \"40px\"}} onClick={() => handleManage(appointment.patientUserId)}>Manage Appointments</button></td>\n                </tr>\n                <tr >\n                  <td width={250}>\n                    {/* Display unique clinics for the current unique appointment */}\n                    {Array.from(new Set(appointment.clinics)).map((clinic, clinicIndex) => (\n                      <span key={clinicIndex}>{clinic}{clinicIndex !== appointment.clinics.length - 1 ? <br /> : ''}</span>\n                    ))}\n                  </td>\n                  <td><button className='cancel' style={{ width: \"100%\", height: \"40px\" }}>Cancel Appointments</button></td>\n                </tr>\n              </table>\n\n            ))}\n          </div>\n        ) : (\n          // Display a message if there are no appointments with appointmentStatus === \"Approved by Doctor\"\n          <div style={{ marginLeft: \"1%\" }}>\n            <p>You have no appointments yet.</p>\n          </div>\n        )}\n      </div>\n      <DoctorFooter />\n    </div>\n  );\n};\n\nexport default DoctorAppointment;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}