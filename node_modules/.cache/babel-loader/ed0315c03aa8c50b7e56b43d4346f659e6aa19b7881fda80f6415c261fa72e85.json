{"ast":null,"code":"var _jsxFileName = \"D:\\\\3rd Year 1st Sem\\\\DocClickConnect\\\\appointment\\\\src\\\\pages\\\\DoctorPages\\\\DoctorSearch.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport \"../../styles/Search.css\";\nimport PatientNavBar from '../../components/PatientNavBar';\nimport PatientFooter from '../../components/PatientFooter';\nimport DoctorCard from '../../components/Doctors'; // Import the DoctorCard component\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DoctorSearch = () => {\n  _s();\n  // Sample doctor data (you can replace it with your own data)\n  const [doctors, setDoctors] = useState([{\n    doctorId: '',\n    firstName: '',\n    lastName: '',\n    contactNumber: '',\n    specialization: '',\n    credentials: '',\n    avatar: '',\n    clinics: [{\n      clinicId: '',\n      clinicName: '',\n      address: '',\n      phoneNumber: '',\n      schedule: ''\n    }]\n  }]);\n  const [schedules, setSchedules] = useState([{\n    doctorUserId: '',\n    clinicId: '',\n    clinicName: '',\n    clinicAddress: '',\n    clinicNumber: '',\n    scheduleDay: '',\n    slots: ''\n  }]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const fetchAllDoctors = async () => {\n      try {\n        const response = await fetch('http://localhost:8080/allusers');\n        if (response.ok) {\n          const data = await response.json();\n          const formattedDoctors = data.map(doctorData => ({\n            doctorId: doctorData.userId,\n            firstName: `Dr. ${doctorData.user.firstName}`,\n            lastName: doctorData.user.lastName,\n            contactNumber: doctorData.user.contactNumber,\n            specialization: doctorData.specialization,\n            credentials: doctorData.credentials,\n            avatar: doctorData.user.avatar\n          }));\n          setDoctors(formattedDoctors);\n        } else {\n          setError('Failed to fetch doctors');\n        }\n      } catch (error) {\n        setError('Error while fetching doctors');\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    fetchAllDoctors();\n  }, []);\n  useEffect(() => {\n    const fetchSchedules = async () => {\n      try {\n        const response = await fetch('http://localhost:8080/schedules');\n        if (!response.ok) {\n          throw new Error('Failed to fetch schedules');\n        }\n        const schedulesData = await response.json();\n        const formattedSchedules = schedulesData.map(schedulesData => ({\n          doctorUserId: schedulesData.doctorUserId,\n          clinicId: schedulesData.clinicId,\n          clinicName: schedulesData.clinic.name,\n          clinicAddress: schedulesData.clinic.address,\n          clinicNumber: schedulesData.clinic.officeNumber,\n          scheduleDay: schedulesData.scheduleDay,\n          slots: schedulesData.slots\n        }));\n        setSchedules(formattedSchedules);\n        console.log(\"nakuha q sched hehe\");\n      } catch (error) {\n        console.error('Error fetching schedules:', error.message);\n      }\n    };\n    fetchSchedules();\n  }, []);\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 12\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Error: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 12\n    }, this);\n  }\n\n  //get all schedules\n\n  //set variables\n  //clinicId\n  //clinic.name\n  //clinic.address\n  //clinic.number\n  //scheduleDay\n  //slots\n  //doctorUserId\n\n  //same scheduledays are counted as one\n  //same clinicId counted as one\n  //filter through doctorUserId\n  //display clinicname, address number & doctoravatar\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"search-container\",\n    id: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(PatientNavBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"info-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"search-box\",\n        style: {\n          position: \"sticky\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"search-input\",\n          placeholder: \"Find the doctor you need..\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"search-button\",\n          children: \"Search\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: \"block\",\n          alignItems: \"center\",\n          width: \"90%\"\n        },\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"doctor-grid\",\n          children: doctors.map((doctor, index) => /*#__PURE__*/_jsxDEV(DoctorCard, {\n            doctor: doctor\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(PatientFooter, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 132,\n    columnNumber: 5\n  }, this);\n};\n_s(DoctorSearch, \"6s2rXWf6AwdSqczBmrvaPr1cmNg=\");\n_c = DoctorSearch;\nexport default DoctorSearch;\nvar _c;\n$RefreshReg$(_c, \"DoctorSearch\");","map":{"version":3,"names":["React","useState","useEffect","PatientNavBar","PatientFooter","DoctorCard","jsxDEV","_jsxDEV","DoctorSearch","_s","doctors","setDoctors","doctorId","firstName","lastName","contactNumber","specialization","credentials","avatar","clinics","clinicId","clinicName","address","phoneNumber","schedule","schedules","setSchedules","doctorUserId","clinicAddress","clinicNumber","scheduleDay","slots","isLoading","setIsLoading","error","setError","fetchAllDoctors","response","fetch","ok","data","json","formattedDoctors","map","doctorData","userId","user","fetchSchedules","Error","schedulesData","formattedSchedules","clinic","name","officeNumber","console","log","message","children","fileName","_jsxFileName","lineNumber","columnNumber","className","id","style","position","type","placeholder","display","alignItems","width","doctor","index","_c","$RefreshReg$"],"sources":["D:/3rd Year 1st Sem/DocClickConnect/appointment/src/pages/DoctorPages/DoctorSearch.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport \"../../styles/Search.css\";\r\nimport PatientNavBar from '../../components/PatientNavBar';\r\nimport PatientFooter from '../../components/PatientFooter';\r\nimport DoctorCard from '../../components/Doctors'; // Import the DoctorCard component\r\n\r\n\r\nconst DoctorSearch = () => {\r\n  // Sample doctor data (you can replace it with your own data)\r\n  const [doctors, setDoctors] = useState([\r\n    {\r\n      doctorId: '',\r\n      firstName: '',\r\n      lastName: '',\r\n      contactNumber: '',\r\n      specialization: '',\r\n      credentials: '',\r\n      avatar:'',\r\n      clinics: [\r\n        {\r\n          clinicId: '',\r\n          clinicName: '',\r\n          address: '',\r\n          phoneNumber: '',\r\n          schedule: '',\r\n        },\r\n      ]\r\n    }\r\n  ]);\r\n  const [schedules, setSchedules] = useState([\r\n    {\r\n      doctorUserId: '',\r\n      clinicId: '',\r\n      clinicName: '',\r\n      clinicAddress: '',\r\n      clinicNumber: '',\r\n      scheduleDay: '',\r\n      slots: '',\r\n    }\r\n  ]);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n\r\n\r\n  useEffect(() => {\r\n    const fetchAllDoctors = async () => {\r\n      try {\r\n        const response = await fetch('http://localhost:8080/allusers');\r\n\r\n        if (response.ok) {\r\n          const data = await response.json();\r\n          const formattedDoctors = data.map((doctorData) => ({\r\n            doctorId: doctorData.userId,\r\n            firstName: `Dr. ${doctorData.user.firstName}`,\r\n            lastName: doctorData.user.lastName,\r\n            contactNumber: doctorData.user.contactNumber,\r\n            specialization: doctorData.specialization,\r\n            credentials: doctorData.credentials,\r\n            avatar: doctorData.user.avatar\r\n          }));\r\n\r\n          setDoctors(formattedDoctors);\r\n        } else {\r\n          setError('Failed to fetch doctors');\r\n        }\r\n      } catch (error) {\r\n        setError('Error while fetching doctors');\r\n      } finally {\r\n        setIsLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchAllDoctors();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const fetchSchedules = async () => {\r\n      try {\r\n        const response = await fetch('http://localhost:8080/schedules');\r\n        \r\n        if (!response.ok) {\r\n          throw new Error('Failed to fetch schedules');\r\n        }\r\n\r\n        const schedulesData = await response.json();\r\n        const formattedSchedules = schedulesData.map((schedulesData) => ({\r\n          doctorUserId: schedulesData.doctorUserId,\r\n          clinicId: schedulesData.clinicId,\r\n          clinicName: schedulesData.clinic.name ,\r\n          clinicAddress: schedulesData.clinic.address,\r\n          clinicNumber: schedulesData.clinic.officeNumber,\r\n          scheduleDay: schedulesData.scheduleDay,\r\n          slots: schedulesData.slots,\r\n        }));\r\n\r\n        setSchedules(formattedSchedules);\r\n        console.log(\"nakuha q sched hehe\");\r\n\r\n      } catch (error) {\r\n        console.error('Error fetching schedules:', error.message);\r\n      }\r\n    };\r\n\r\n    fetchSchedules();\r\n  }, []);\r\n\r\n  if (isLoading) {\r\n    return <p>Loading...</p>;\r\n  }\r\n\r\n  if (error) {\r\n    return <p>Error: {error}</p>;\r\n  }\r\n\r\n  //get all schedules\r\n\r\n  //set variables\r\n  //clinicId\r\n  //clinic.name\r\n  //clinic.address\r\n  //clinic.number\r\n  //scheduleDay\r\n  //slots\r\n  //doctorUserId\r\n\r\n  //same scheduledays are counted as one\r\n  //same clinicId counted as one\r\n  //filter through doctorUserId\r\n  //display clinicname, address number & doctoravatar\r\n\r\n  return (\r\n    <div className=\"search-container\" id=\"container\">\r\n      <PatientNavBar />\r\n      <div className=\"info-container\">\r\n        <div className=\"search-box\" style={{position: \"sticky\"}}>\r\n          <input type=\"text\" className=\"search-input\" placeholder=\"Find the doctor you need..\"/>\r\n          <button className=\"search-button\">Search</button>\r\n        </div>\r\n        <br />\r\n        <div style={{ display: \"block\", alignItems: \"center\", width: \"90%\" }}>\r\n          <div className=\"doctor-grid\">\r\n            {doctors.map((doctor, index) => (\r\n              <DoctorCard key={index} doctor={doctor} />\r\n            ))}\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <PatientFooter />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DoctorSearch;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}