{"ast":null,"code":"import _regeneratorRuntime from\"D:/3rd Year 1st Sem/DocClickConnect/appointment/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _asyncToGenerator from\"D:/3rd Year 1st Sem/DocClickConnect/appointment/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _slicedToArray from\"D:/3rd Year 1st Sem/DocClickConnect/appointment/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useState,useEffect}from'react';import PatientNavBar from'../../components/PatientNavBar';import PatientFooter from'../../components/PatientFooter';import{Calendar,dateFnsLocalizer}from'react-big-calendar';import{parse,format}from'date-fns';import startOfWeek from'date-fns/startOfWeek';import getDay from'date-fns/getDay';import addWeeks from'date-fns/addWeeks';import\"react-big-calendar/lib/css/react-big-calendar.css\";import{useParams}from'react-router-dom';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var PatientResched=function PatientResched(){var _useParams=useParams(),appointmentId=_useParams.appointmentId;var _useState=useState(''),_useState2=_slicedToArray(_useState,2),rescheduleChoice=_useState2[0],setRescheduleChoice=_useState2[1];var _useState3=useState(''),_useState4=_slicedToArray(_useState3,2),error=_useState4[0],setError=_useState4[1];var _useState5=useState(''),_useState6=_slicedToArray(_useState5,2),rescheduleStatus=_useState6[0],setRescheduleStatus=_useState6[1];var _useState7=useState([{title:'',clinic:'',address:'',number:'',start:new Date(),end:new Date(),// 5:00 PM\ntransactionNo:'',appointmentStatus:''}]),_useState8=_slicedToArray(_useState7,2),latestAppointment=_useState8[0],setLatestAppointment=_useState8[1];var _useState9=useState([{title:'',clinic:'',address:'',number:'',start:new Date(),end:new Date(),// 5:00 PM\ntransactionNo:'',appointmentStatus:''}]),_useState10=_slicedToArray(_useState9,2),appointments=_useState10[0],setAppointments=_useState10[1];useEffect(function(){fetch('http://localhost:8080/checkLoggedInPatient').then(function(response){if(response.ok){return response.json();}throw new Error('Network response was not ok');}).then(function(data){// Once you have the patientUserId, make another request to get appointments\nfetch(\"http://localhost:8080/appointments?patientUserId=\".concat(data)).then(function(appointmentsResponse){if(appointmentsResponse.ok){return appointmentsResponse.json();}throw new Error('Network response was not ok');}).then(function(appointmentsData){var formattedAppointments=appointmentsData.map(function(appointment){// Extract date and time components\nvar _appointment$schedule=appointment.scheduleDate.split('-').map(Number),_appointment$schedule2=_slicedToArray(_appointment$schedule,3),year=_appointment$schedule2[0],month=_appointment$schedule2[1],day=_appointment$schedule2[2];var _appointment$startTim=appointment.startTime.split(':').map(Number),_appointment$startTim2=_slicedToArray(_appointment$startTim,2),hours=_appointment$startTim2[0],minutes=_appointment$startTim2[1];var _appointment$endTime$=appointment.endTime.split(':').map(Number),_appointment$endTime$2=_slicedToArray(_appointment$endTime$,2),hours2=_appointment$endTime$2[0],minutes2=_appointment$endTime$2[1];// Create Date objects for start and end times\nvar startDate=new Date(year,month-1,day,hours,minutes);var endDate=new Date(year,month-1,day,hours2,minutes2);// Create an appointment object\nreturn{title:'Dr. '+appointment.doctorName,clinic:appointment.clinicName,address:appointment.address,number:appointment.clinic.officeNumber,start:startDate,end:endDate,appointmentId:appointment.transactionNo,appointmentStatus:appointment.status};});setAppointments(formattedAppointments);}).catch(function(error){// Handle errors\nconsole.error(error);});}).catch(function(error){console.error('Error:',error);});},[]);useEffect(function(){var fetchAppointment=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(){var response,data,_data$scheduleDate$sp,_data$scheduleDate$sp2,year,month,day,_data$startTime$split,_data$startTime$split2,hours,minutes,_data$endTime$split$m,_data$endTime$split$m2,hours2,minutes2,startDate,endDate,formattedAppointment;return _regeneratorRuntime().wrap(function _callee$(_context){while(1)switch(_context.prev=_context.next){case 0:_context.prev=0;_context.next=3;return fetch(\"http://localhost:8080/appointment/\".concat(appointmentId));case 3:response=_context.sent;if(!response.ok){_context.next=11;break;}_context.next=7;return response.json();case 7:data=_context.sent;// Check if necessary properties are present in the data object\nif(data&&data.scheduleDate&&data.startTime&&data.endTime&&data.doctorName&&data.transactionNo&&data.status){_data$scheduleDate$sp=data.scheduleDate.split('-').map(Number),_data$scheduleDate$sp2=_slicedToArray(_data$scheduleDate$sp,3),year=_data$scheduleDate$sp2[0],month=_data$scheduleDate$sp2[1],day=_data$scheduleDate$sp2[2];_data$startTime$split=data.startTime.split(':').map(Number),_data$startTime$split2=_slicedToArray(_data$startTime$split,2),hours=_data$startTime$split2[0],minutes=_data$startTime$split2[1];_data$endTime$split$m=data.endTime.split(':').map(Number),_data$endTime$split$m2=_slicedToArray(_data$endTime$split$m,2),hours2=_data$endTime$split$m2[0],minutes2=_data$endTime$split$m2[1];// Check if the extracted components are valid numbers\nif(!isNaN(year)&&!isNaN(month)&&!isNaN(day)&&!isNaN(hours)&&!isNaN(minutes)&&!isNaN(hours2)&&!isNaN(minutes2)){// Create Date objects for start and end times\nstartDate=new Date(year,month-1,day,hours,minutes);endDate=new Date(year,month-1,day,hours2,minutes2);// Check if the created Date objects are valid\nif(!isNaN(startDate.getTime())&&!isNaN(endDate.getTime())){formattedAppointment={title:\"Dr. \".concat(data.doctorName),clinic:data.clinicName,address:data.address,number:data.clinic.officeNumber,start:startDate,end:endDate,appointmentId:data.transactionNo,appointmentStatus:data.status};setLatestAppointment([formattedAppointment]);}else{console.error('Invalid date created. Check the date and time components.');}}else{console.error('Invalid date/time components in the response data.');}}else{console.error('Incomplete or missing data in the response.');}_context.next=12;break;case 11:setError('Error fetching appointment');case 12:_context.next=17;break;case 14:_context.prev=14;_context.t0=_context[\"catch\"](0);setError('Error fetching appointment');case 17:case\"end\":return _context.stop();}},_callee,null,[[0,14]]);}));return function fetchAppointment(){return _ref.apply(this,arguments);};}();fetchAppointment();},[appointmentId]);var handleRescheduleChange=function handleRescheduleChange(event){var match=event.target.value.match(/(\\d{2})\\/(\\d{2})\\/(\\d{4})/);if(!match){return/*#__PURE__*/_jsx(\"div\",{children:\"Error: Invalid date format\"});}var _match=_slicedToArray(match,4),month=_match[1],day=_match[2],year=_match[3];var sourceDate=new Date(\"\".concat(year,\"-\").concat(month,\"-\").concat(day));setRescheduleChoice(\"\".concat(sourceDate.getFullYear(),\"-\").concat((sourceDate.getMonth()+1).toString().padStart(2,'0'),\"-\").concat(sourceDate.getDate().toString().padStart(2,'0')));};var handleReschedule=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee2(){var response;return _regeneratorRuntime().wrap(function _callee2$(_context2){while(1)switch(_context2.prev=_context2.next){case 0:_context2.prev=0;_context2.next=3;return fetch(\"http://localhost:8080/appointment/\".concat(appointmentId,\"?scheduleDate=\").concat(rescheduleChoice),{method:'PUT'// No need for headers when not sending a JSON payload\n});case 3:response=_context2.sent;if(response.ok){setRescheduleStatus('Appointment Rescheduled Successfully!');window.location.href=\"/patresched/\".concat(appointmentId);}if(response.ok){_context2.next=8;break;}setRescheduleStatus(\"Failed to update appointment: \".concat(response.statusText));throw new Error(\"Failed to update appointment: \".concat(response.statusText));case 8:_context2.next=14;break;case 10:_context2.prev=10;_context2.t0=_context2[\"catch\"](0);console.error('Error updating appointment:',_context2.t0.message);setError('Error updating appointment:',_context2.t0.message);case 14:case\"end\":return _context2.stop();}},_callee2,null,[[0,10]]);}));return function handleReschedule(){return _ref2.apply(this,arguments);};}();var generateDateOptions=function generateDateOptions(_ref3){var scheduleDate=_ref3.scheduleDate;if(!scheduleDate){console.error('Error: scheduleDate is undefined.');return[];}// Convert the Date object to a string\nvar scheduleDateString=scheduleDate.toString();// Convert the string back to a Date object\nvar startDate=new Date(scheduleDateString);var dateOptions=[];for(var i=0;i<4;i++){var optionDate=addWeeks(startDate,i);// Format the date using date-fns\nvar formattedDate=format(optionDate,\"MM/dd/yyyy EEEE\");dateOptions.push(/*#__PURE__*/_jsx(\"option\",{value:formattedDate,children:formattedDate},i));}return dateOptions;};var locales={\"en-US\":require(\"date-fns/locale/en-US\")};var localizer=dateFnsLocalizer({format:format,parse:parse,startOfWeek:startOfWeek,getDay:getDay,locales:locales});var CustomEvent=function CustomEvent(_ref4){var event=_ref4.event;return/*#__PURE__*/_jsxs(\"div\",{style:{margin:'5px 0',whiteSpace:'nowrap',overflowY:'auto',maxHeight:\"55px\",textOverflow:'ellipsis'},children:[/*#__PURE__*/_jsx(\"strong\",{style:{margin:'0px 0',overflow:'hidden',textOverflow:'ellipsis',whiteSpace:'normal'},children:event.title}),/*#__PURE__*/_jsxs(\"p\",{style:{margin:'0px 0',overflow:'hidden',textOverflow:'ellipsis',whiteSpace:'normal'},children:[\"Clinic: \",event.clinic]}),/*#__PURE__*/_jsxs(\"p\",{style:{margin:'0px 0',overflow:'hidden',textOverflow:'ellipsis',whiteSpace:'normal'},children:[\"Status: \",event.appointmentStatus]})]});};var getBackgroundColor=function getBackgroundColor(status){switch(status){case'Cancelled':return'#FCA694';case'Rescheduled':return'#FFB97F';case'Scheduled by Patient':return'#FFFFDC';case'Approved by Doctor':return'#BAFFC4';default:return'lightgray';}};var getBorderColor=function getBorderColor(status){switch(status){case'Cancelled':return'#A41D00';case'Rescheduled':return'#FF7400';case'Scheduled by Patient':return'#F8F547';case'Approved by Doctor':return'#48DE66';default:return'lightgray';}};return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(PatientNavBar,{}),/*#__PURE__*/_jsxs(\"div\",{style:{display:\"flex\",margin:\"auto\",width:\"100vw\",justifyContent:\"center\"},children:[/*#__PURE__*/_jsx(Calendar,{localizer:localizer,events:appointments,startAccessor:\"start\",endAccessor:\"end\",style:{height:700,width:'70%'},components:{event:CustomEvent// Use the custom Event component\n}}),/*#__PURE__*/_jsxs(\"div\",{style:{marginLeft:\"30px\"},children:[/*#__PURE__*/_jsx(\"h1\",{children:\"My Appointments\"}),latestAppointment.map(function(latestAppointment,index){return/*#__PURE__*/_jsx(\"table\",{children:/*#__PURE__*/_jsxs(\"tbody\",{children:[/*#__PURE__*/_jsx(\"tr\",{children:/*#__PURE__*/_jsxs(\"td\",{rowSpan:2,width:200,style:{border:'3px dashed',borderRadius:'10px',borderColor:getBorderColor(latestAppointment.appointmentStatus),backgroundColor:getBackgroundColor(latestAppointment.appointmentStatus),paddingLeft:'10px',width:'300px'},children:[latestAppointment.title,\" \",/*#__PURE__*/_jsx(\"br\",{}),latestAppointment.clinic,\" \",/*#__PURE__*/_jsx(\"br\",{}),latestAppointment.address,\" \",/*#__PURE__*/_jsx(\"br\",{}),latestAppointment.number,\" \",/*#__PURE__*/_jsx(\"br\",{}),format(latestAppointment.start,'MM/dd/yyyy EEEE'),\" \",/*#__PURE__*/_jsx(\"br\",{}),format(latestAppointment.start,'h:mm a'),\" - \",format(latestAppointment.end,'h:mm a'),\" \",/*#__PURE__*/_jsx(\"br\",{}),latestAppointment.appointmentStatus,\" \",/*#__PURE__*/_jsx(\"br\",{})]})}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"tr\",{children:/*#__PURE__*/_jsxs(\"td\",{children:[\"Date:\",/*#__PURE__*/_jsx(\"select\",{name:\"sched\",id:\"sched\",onChange:handleRescheduleChange,children:generateDateOptions({scheduleDate:latestAppointment.start})})]})}),/*#__PURE__*/_jsx(\"tr\",{children:/*#__PURE__*/_jsxs(\"td\",{children:[/*#__PURE__*/_jsx(\"button\",{style:{marginTop:\"10px\",borderRadius:0,width:\"100%\"},onClick:handleReschedule,children:\"Submit\"}),/*#__PURE__*/_jsx(\"p\",{children:rescheduleStatus}),/*#__PURE__*/_jsx(\"p\",{children:error})]})},2)]})},index);})]})]}),/*#__PURE__*/_jsx(PatientFooter,{})]});};export default PatientResched;","map":{"version":3,"names":["React","useState","useEffect","PatientNavBar","PatientFooter","Calendar","dateFnsLocalizer","parse","format","startOfWeek","getDay","addWeeks","useParams","jsx","_jsx","jsxs","_jsxs","PatientResched","_useParams","appointmentId","_useState","_useState2","_slicedToArray","rescheduleChoice","setRescheduleChoice","_useState3","_useState4","error","setError","_useState5","_useState6","rescheduleStatus","setRescheduleStatus","_useState7","title","clinic","address","number","start","Date","end","transactionNo","appointmentStatus","_useState8","latestAppointment","setLatestAppointment","_useState9","_useState10","appointments","setAppointments","fetch","then","response","ok","json","Error","data","concat","appointmentsResponse","appointmentsData","formattedAppointments","map","appointment","_appointment$schedule","scheduleDate","split","Number","_appointment$schedule2","year","month","day","_appointment$startTim","startTime","_appointment$startTim2","hours","minutes","_appointment$endTime$","endTime","_appointment$endTime$2","hours2","minutes2","startDate","endDate","doctorName","clinicName","officeNumber","status","catch","console","fetchAppointment","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_data$scheduleDate$sp","_data$scheduleDate$sp2","_data$startTime$split","_data$startTime$split2","_data$endTime$split$m","_data$endTime$split$m2","formattedAppointment","wrap","_callee$","_context","prev","next","sent","isNaN","getTime","t0","stop","apply","arguments","handleRescheduleChange","event","match","target","value","children","_match","sourceDate","getFullYear","getMonth","toString","padStart","getDate","handleReschedule","_ref2","_callee2","_callee2$","_context2","method","window","location","href","statusText","message","generateDateOptions","_ref3","scheduleDateString","dateOptions","i","optionDate","formattedDate","push","locales","require","localizer","CustomEvent","_ref4","style","margin","whiteSpace","overflowY","maxHeight","textOverflow","overflow","getBackgroundColor","getBorderColor","display","width","justifyContent","events","startAccessor","endAccessor","height","components","marginLeft","index","rowSpan","border","borderRadius","borderColor","backgroundColor","paddingLeft","name","id","onChange","marginTop","onClick"],"sources":["D:/3rd Year 1st Sem/DocClickConnect/appointment/src/pages/AppointmentPages/PatientResched.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport PatientNavBar from '../../components/PatientNavBar';\nimport PatientFooter from '../../components/PatientFooter';\nimport { Calendar, dateFnsLocalizer } from 'react-big-calendar';\nimport { parse, format } from 'date-fns';\n\nimport startOfWeek from 'date-fns/startOfWeek';\nimport getDay from 'date-fns/getDay';\nimport addWeeks from 'date-fns/addWeeks';\nimport \"react-big-calendar/lib/css/react-big-calendar.css\";\nimport { useParams } from 'react-router-dom';\n\nconst PatientResched = () => {\n  const { appointmentId } = useParams();\n  const [rescheduleChoice, setRescheduleChoice] = useState('');\n  const [error, setError] = useState('');\n  const [rescheduleStatus, setRescheduleStatus] =  useState('');\n  const [latestAppointment, setLatestAppointment] = useState([\n    {\n      title: '',\n      clinic: '',\n      address: '',\n      number: '',\n      start: new Date(),\n      end: new Date(),  // 5:00 PM\n      transactionNo: '',\n      appointmentStatus: ''\n    },\n  ]);\n  const [appointments, setAppointments] = useState([\n    {\n      title: '',\n      clinic: '',\n      address: '',\n      number: '',\n      start: new Date(),\n      end: new Date(),  // 5:00 PM\n      transactionNo: '',\n      appointmentStatus: ''\n    },\n  ]);\n\n\n\n  useEffect(() => {\n    fetch('http://localhost:8080/checkLoggedInPatient')\n      .then((response) => {\n        if (response.ok) {\n          return response.json();\n        }\n        throw new Error('Network response was not ok');\n      })\n      .then((data) => {\n        // Once you have the patientUserId, make another request to get appointments\n        fetch(`http://localhost:8080/appointments?patientUserId=${data}`)\n          .then((appointmentsResponse) => {\n            if (appointmentsResponse.ok) {\n              return appointmentsResponse.json();\n            }\n            throw new Error('Network response was not ok');\n          })\n          .then((appointmentsData) => {\n            const formattedAppointments = appointmentsData.map((appointment) => {\n              // Extract date and time components\n              const [year, month, day] = appointment.scheduleDate.split('-').map(Number);\n              const [hours, minutes] = appointment.startTime.split(':').map(Number);\n              const [hours2, minutes2] = appointment.endTime.split(':').map(Number);\n\n              // Create Date objects for start and end times\n              const startDate = new Date(year, month - 1, day, hours, minutes);\n              const endDate = new Date(year, month - 1, day, hours2, minutes2);\n\n              // Create an appointment object\n              return {\n                title: 'Dr. ' + appointment.doctorName,\n                clinic: appointment.clinicName,\n                address: appointment.address,\n                number: appointment.clinic.officeNumber,\n                start: startDate,\n                end: endDate,\n                appointmentId: appointment.transactionNo,\n                appointmentStatus: appointment.status\n              };\n            });\n\n            setAppointments(formattedAppointments);\n          })\n          .catch((error) => {\n            // Handle errors\n            console.error(error);\n          });\n\n      })\n      .catch((error) => {\n        console.error('Error:', error);\n      });\n  }, []);\n\n  useEffect(() => {\n    const fetchAppointment = async () => {\n      try {\n        const response = await fetch(`http://localhost:8080/appointment/${appointmentId}`);\n\n        if (response.ok) {\n          const data = await response.json();\n\n          // Check if necessary properties are present in the data object\n          if (data && data.scheduleDate && data.startTime && data.endTime && data.doctorName && data.transactionNo && data.status) {\n            const [year, month, day] = data.scheduleDate.split('-').map(Number);\n            const [hours, minutes] = data.startTime.split(':').map(Number);\n            const [hours2, minutes2] = data.endTime.split(':').map(Number);\n\n            // Check if the extracted components are valid numbers\n            if (!isNaN(year) && !isNaN(month) && !isNaN(day) && !isNaN(hours) && !isNaN(minutes) && !isNaN(hours2) && !isNaN(minutes2)) {\n              // Create Date objects for start and end times\n              const startDate = new Date(year, month - 1, day, hours, minutes);\n              const endDate = new Date(year, month - 1, day, hours2, minutes2);\n\n              // Check if the created Date objects are valid\n              if (!isNaN(startDate.getTime()) && !isNaN(endDate.getTime())) {\n                const formattedAppointment = {\n                  title: `Dr. ${data.doctorName}`,\n                  clinic: data.clinicName,\n                  address: data.address,\n                  number: data.clinic.officeNumber,\n                  start: startDate,\n                  end: endDate,\n                  appointmentId: data.transactionNo,\n                  appointmentStatus: data.status\n                };\n\n                setLatestAppointment([formattedAppointment]);\n              } else {\n                console.error('Invalid date created. Check the date and time components.');\n              }\n            } else {\n              console.error('Invalid date/time components in the response data.');\n            }\n          } else {\n            console.error('Incomplete or missing data in the response.');\n          }\n        } else {\n          setError('Error fetching appointment');\n        }\n      } catch (error) {\n        setError('Error fetching appointment');\n      }\n    };\n\n    fetchAppointment();\n  }, [appointmentId]);\n\n  const handleRescheduleChange = (event) => {\n    const match = event.target.value.match(/(\\d{2})\\/(\\d{2})\\/(\\d{4})/);\n\n    if (!match) {\n      return <div>Error: Invalid date format</div>;\n    }\n\n    const [, month, day, year] = match;\n    const sourceDate = new Date(`${year}-${month}-${day}`);\n    setRescheduleChoice(`${sourceDate.getFullYear()}-${(sourceDate.getMonth() + 1).toString().padStart(2, '0')}-${sourceDate.getDate().toString().padStart(2, '0')}`);\n\n  };\n\n  const handleReschedule = async () => {\n    try {\n      const response = await fetch(`http://localhost:8080/appointment/${appointmentId}?scheduleDate=${rescheduleChoice}`, {\n        method: 'PUT',\n        // No need for headers when not sending a JSON payload\n      });\n      if (response.ok) {\n        setRescheduleStatus('Appointment Rescheduled Successfully!');\n        window.location.href = `/patresched/${appointmentId}`;\n      }\n      if (!response.ok) {\n        setRescheduleStatus(`Failed to update appointment: ${response.statusText}`);\n        throw new Error(`Failed to update appointment: ${response.statusText}`);\n        \n      }\n\n    } catch (error) {\n      console.error('Error updating appointment:', error.message);\n      setError('Error updating appointment:', error.message);\n    }\n  };\n\n  const generateDateOptions = ({ scheduleDate }) => {\n    if (!scheduleDate) {\n      console.error('Error: scheduleDate is undefined.');\n      return [];\n    }\n  \n    // Convert the Date object to a string\n    const scheduleDateString = scheduleDate.toString();\n    \n    // Convert the string back to a Date object\n    const startDate = new Date(scheduleDateString);\n    \n    const dateOptions = [];\n  \n    for (let i = 0; i < 4; i++) {\n      const optionDate = addWeeks(startDate, i);\n      \n      // Format the date using date-fns\n      const formattedDate = format(optionDate, \"MM/dd/yyyy EEEE\");\n  \n      dateOptions.push(\n        <option key={i} value={formattedDate}>\n          {formattedDate}\n        </option>\n      );\n    }\n  \n    return dateOptions;\n  };\n\n  const locales = {\n    \"en-US\": require(\"date-fns/locale/en-US\")\n  }\n\n  const localizer = dateFnsLocalizer({\n    format,\n    parse,\n    startOfWeek,\n    getDay,\n    locales\n  })\n\n  \n  const CustomEvent = ({ event }) => (\n    <div style={{ margin: '5px 0', whiteSpace: 'nowrap', overflowY: 'auto', maxHeight: \"55px\", textOverflow: 'ellipsis' }}>\n      <strong style={{ margin: '0px 0', overflow: 'hidden', textOverflow: 'ellipsis', whiteSpace: 'normal' }}>{event.title}</strong>\n      <p style={{ margin: '0px 0', overflow: 'hidden', textOverflow: 'ellipsis', whiteSpace: 'normal' }}>\n        Clinic: {event.clinic}\n      </p>\n      <p style={{ margin: '0px 0', overflow: 'hidden', textOverflow: 'ellipsis', whiteSpace: 'normal' }}>\n        Status: {event.appointmentStatus}\n      </p>\n    </div>\n  );\n\n  const getBackgroundColor = (status) => {\n    switch (status) {\n      case 'Cancelled':\n        return '#FCA694';\n      case 'Rescheduled':\n        return '#FFB97F';\n      case 'Scheduled by Patient':\n        return '#FFFFDC';\n      case 'Approved by Doctor':\n        return '#BAFFC4';\n      default:\n        return 'lightgray';\n    }\n  };\n\n  const getBorderColor = (status) => {\n    switch (status) {\n      case 'Cancelled':\n        return '#A41D00';\n      case 'Rescheduled':\n        return '#FF7400';\n      case 'Scheduled by Patient':\n        return '#F8F547';\n      case 'Approved by Doctor':\n        return '#48DE66';\n      default:\n        return 'lightgray';\n    }\n  };\n  \n  return (\n    <div>\n      <PatientNavBar />\n      <div style={{ display: \"flex\", margin: \"auto\", width: \"100vw\", justifyContent: \"center\" }}>\n      <Calendar\n          localizer={localizer}\n          events={appointments}\n          startAccessor=\"start\"\n          endAccessor=\"end\"\n          style={{ height: 700, width: '70%' }}\n          components={{\n            event: CustomEvent, // Use the custom Event component\n          }}\n        />\n\n        <div style={{ marginLeft: \"30px\" }}>\n          <h1>My Appointments</h1>\n          {latestAppointment.map((latestAppointment, index) => (\n            <table key={index}>\n              <tbody>\n                <tr >\n                  \n                  <td\n                      rowSpan={2}\n                      width={200}\n                      style={{\n                        border: '3px dashed',\n                        borderRadius: '10px', \n                        borderColor: getBorderColor(latestAppointment.appointmentStatus),\n                        backgroundColor: getBackgroundColor(latestAppointment.appointmentStatus),\n                        paddingLeft: '10px',\n                        width: '300px'            \n                      }}\n                    >\n                      {latestAppointment.title} <br />\n                      {latestAppointment.clinic} <br />\n                      {latestAppointment.address} <br />\n                      {latestAppointment.number} <br />\n                      {format(latestAppointment.start, 'MM/dd/yyyy EEEE')} <br />\n                      {format(latestAppointment.start, 'h:mm a')} - {format(latestAppointment.end, 'h:mm a')} <br />\n                      {latestAppointment.appointmentStatus} <br />\n                    </td>\n                </tr>\n                <br />\n                <tr >\n                <td>\n        Date:\n        <select name=\"sched\" id=\"sched\"  onChange={handleRescheduleChange}>\n          {generateDateOptions({ scheduleDate: latestAppointment.start })}\n        </select>\n\n      </td>\n                </tr>\n                <tr key={2}>\n                  <td>\n                    <button style={{ marginTop: \"10px\", borderRadius: 0, width: \"100%\" }} onClick={handleReschedule}>Submit</button>\n                    <p>{rescheduleStatus}</p>\n                    <p>{error}</p>\n                  </td>\n                </tr>\n              </tbody>\n            </table>\n          ))}\n\n        </div>\n      </div>\n      <PatientFooter />\n    </div>\n  );\n};\n\nexport default PatientResched\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}