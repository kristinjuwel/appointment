{"ast":null,"code":"import _toConsumableArray from\"D:/3rd Year 1st Sem/DocClickConnect/appointment/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";import _regeneratorRuntime from\"D:/3rd Year 1st Sem/DocClickConnect/appointment/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _asyncToGenerator from\"D:/3rd Year 1st Sem/DocClickConnect/appointment/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _slicedToArray from\"D:/3rd Year 1st Sem/DocClickConnect/appointment/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useState,useEffect}from'react';import{Link}from'react-router-dom';import PatientNavBar from'../../components/PatientNavBar';import PatientFooter from'../../components/PatientFooter';import{useParams}from'react-router-dom';import{startOfWeek,addWeeks,addDays,format}from'date-fns';import HomeFooter from'../../components/HomeFooter';import HomeNavbar from'../../components/HomeNavbar';import{Calendar,dateFnsLocalizer}from'react-big-calendar';import parse from'date-fns/parse';import getDay from'date-fns/getDay';import\"react-big-calendar/lib/css/react-big-calendar.css\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var SetAppointment=function SetAppointment(){var _schedules$find,_schedules$find2,_schedules$find3;var _useParams=useParams(),doctorId=_useParams.doctorId;var _useState=useState(null),_useState2=_slicedToArray(_useState,2),error=_useState2[0],setError=_useState2[1];var _useState3=useState(''),_useState4=_slicedToArray(_useState3,2),selectedDay=_useState4[0],setSelectedDay=_useState4[1];var _useState5=useState(''),_useState6=_slicedToArray(_useState5,2),selectedSched=_useState6[0],setSelectedSched=_useState6[1];var _useState7=useState(''),_useState8=_slicedToArray(_useState7,2),selectedDate=_useState8[0],setSelectedDate=_useState8[1];var _useState9=useState(\"Scheduled by Patient\"),_useState10=_slicedToArray(_useState9,1),status=_useState10[0];var _useState11=useState(''),_useState12=_slicedToArray(_useState11,2),selectedClinicId=_useState12[0],setSelectedClinicId=_useState12[1];var _useState13=useState(''),_useState14=_slicedToArray(_useState13,2),patientUserId=_useState14[0],setPatientUserId=_useState14[1];var _useState15=useState(''),_useState16=_slicedToArray(_useState15,2),isPatientLoggedIn=_useState16[0],setIsPatientLoggedIn=_useState16[1];var _useState17=useState([{scheduleId:'',clinicId:'',avatar:'',doctorName:'',specialization:'',contactNumber:'',docEmail:'',scheduleDay:'',start:new Date(),end:new Date(),// 5:00 PM\nslots:'',clinicName:'',address:'',number:'',email:''}]),_useState18=_slicedToArray(_useState17,2),schedules=_useState18[0],setSchedules=_useState18[1];var _useState19=useState([{title:'',clinic:'',address:'',number:'',start:new Date(),end:new Date(),// 5:00 PM\nappointmentId:'',appointmentStatus:''}]),_useState20=_slicedToArray(_useState19,2),appointments=_useState20[0],setAppointments=_useState20[1];useEffect(function(){// Replace 'http://localhost:8080' with your actual API URL\nfetch('http://localhost:8080/checkLoggedInPatient').then(function(response){if(response.ok){return response.json();}throw new Error('Network response was not ok');}).then(function(data){setPatientUserId(data);// Once you have the patientUserId, make another request to get appointments\nfetch(\"http://localhost:8080/appointments?patientUserId=\".concat(data)).then(function(appointmentsResponse){if(appointmentsResponse.ok){return appointmentsResponse.json();}throw new Error('Network response was not ok');}).then(function(appointmentsData){var formattedAppointments=appointmentsData.map(function(appointment){// Extract date and time components\nvar _appointment$schedule=appointment.scheduleDate.split('-').map(Number),_appointment$schedule2=_slicedToArray(_appointment$schedule,3),year=_appointment$schedule2[0],month=_appointment$schedule2[1],day=_appointment$schedule2[2];var _appointment$startTim=appointment.startTime.split(':').map(Number),_appointment$startTim2=_slicedToArray(_appointment$startTim,2),hours=_appointment$startTim2[0],minutes=_appointment$startTim2[1];var _appointment$endTime$=appointment.endTime.split(':').map(Number),_appointment$endTime$2=_slicedToArray(_appointment$endTime$,2),hours2=_appointment$endTime$2[0],minutes2=_appointment$endTime$2[1];// Create Date objects for start and end times\nvar startDate=new Date(year,month-1,day,hours,minutes);var endDate=new Date(year,month-1,day,hours2,minutes2);// Create an appointment object\nreturn{title:'Dr. '+appointment.doctorName,clinic:appointment.clinicName,address:appointment.address,number:appointment.clinic.officeNumber,start:startDate,end:endDate,appointmentId:appointment.transactionNo,appointmentStatus:appointment.status};});setAppointments(formattedAppointments);}).catch(function(error){// Handle errors\nconsole.error(error);});}).catch(function(error){console.error('Error:',error);});},[]);var locales={\"en-US\":require(\"date-fns/locale/en-US\")};var localizer=dateFnsLocalizer({format:format,parse:parse,startOfWeek:startOfWeek,getDay:getDay,locales:locales});var handleCancel=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(appointmentId){var appointmentToCancel,response;return _regeneratorRuntime().wrap(function _callee$(_context){while(1)switch(_context.prev=_context.next){case 0:_context.prev=0;// Find the appointment with the provided appointmentId\nappointmentToCancel=appointments.find(function(appointment){return appointment.appointmentId===appointmentId;});if(appointmentToCancel){_context.next=5;break;}// Handle the case where the appointment with the given ID is not found\nconsole.error('Appointment not found');return _context.abrupt(\"return\");case 5:if(!(appointmentToCancel.appointmentStatus==='Cancelled')){_context.next=8;break;}// Display error message as a pop-up\nwindow.alert('Appointment is already cancelled');return _context.abrupt(\"return\");case 8:_context.next=10;return fetch(\"http://localhost:8080/appointmentChange/\".concat(appointmentId,\"?newStatus=Cancelled\"),{method:'PUT'});case 10:response=_context.sent;if(response.ok){console.log('Appointment cancelled successfully');window.location.reload();}else{console.error('Error cancelling appointment');}_context.next=17;break;case 14:_context.prev=14;_context.t0=_context[\"catch\"](0);console.error('Error cancelling appointment:',_context.t0);case 17:case\"end\":return _context.stop();}},_callee,null,[[0,14]]);}));return function handleCancel(_x){return _ref.apply(this,arguments);};}();var handleReschedule=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee2(appointmentId){var appointmentToCancel;return _regeneratorRuntime().wrap(function _callee2$(_context2){while(1)switch(_context2.prev=_context2.next){case 0:appointmentToCancel=appointments.find(function(appointment){return appointment.appointmentId===appointmentId;});if(appointmentToCancel){_context2.next=4;break;}// Handle the case where the appointment with the given ID is not found\nconsole.error('Appointment not found');return _context2.abrupt(\"return\");case 4:if(!(appointmentToCancel.appointmentStatus==='Cancelled')){_context2.next=7;break;}// Display error message as a pop-up\nwindow.alert('Appointment is already cancelled. It cannot be rescheduled.');return _context2.abrupt(\"return\");case 7:window.location.href=\"/patresched/\".concat(appointmentId);case 8:case\"end\":return _context2.stop();}},_callee2);}));return function handleReschedule(_x2){return _ref2.apply(this,arguments);};}();useEffect(function(){var fetchDoctorSchedules=/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee3(){var response,data,formattedSchedules;return _regeneratorRuntime().wrap(function _callee3$(_context3){while(1)switch(_context3.prev=_context3.next){case 0:_context3.prev=0;_context3.next=3;return fetch(\"http://localhost:8080/docsched/\".concat(doctorId));case 3:response=_context3.sent;if(!response.ok){_context3.next=12;break;}_context3.next=7;return response.json();case 7:data=_context3.sent;formattedSchedules=data.map(function(schedule){return{scheduleId:schedule.scheduleId,clinicId:schedule.clinicId,avatar:schedule.doctor.user.avatar,doctorName:\"Dr. \".concat(schedule.doctor.user.firstName,\" \").concat(schedule.doctor.user.middleName,\" \").concat(schedule.doctor.user.lastName),specialization:schedule.doctor.specialization,contactNumber:schedule.doctor.user.contactNumber,docEmail:schedule.doctor.user.email,scheduleDay:schedule.scheduleDay,start:schedule.startTime,end:schedule.endTime,slots:schedule.slots,clinicName:schedule.clinic.name,address:schedule.clinic.address,number:schedule.clinic.officeNumber,email:schedule.clinic.officeEmail};});setSchedules(formattedSchedules);_context3.next=13;break;case 12:setError('Error fetching appointment');case 13:_context3.next=18;break;case 15:_context3.prev=15;_context3.t0=_context3[\"catch\"](0);setError('Error fetching appointment');case 18:case\"end\":return _context3.stop();}},_callee3,null,[[0,15]]);}));return function fetchDoctorSchedules(){return _ref3.apply(this,arguments);};}();fetchDoctorSchedules();},[doctorId]);var convertMilitaryToStandardTime=function convertMilitaryToStandardTime(militaryTime){if(typeof militaryTime!=='string'||militaryTime.length!==8){return'Invalid Time';}var _militaryTime$split=militaryTime.split(':'),_militaryTime$split2=_slicedToArray(_militaryTime$split,2),hours=_militaryTime$split2[0],minutes=_militaryTime$split2[1];var parsedHours=parseInt(hours,10);var period=parsedHours>=12?'PM':'AM';var formattedHours=parsedHours%12||12;return\"\".concat(formattedHours,\":\").concat(minutes,\" \").concat(period);};var getNearestDays=function getNearestDays(selectedDay,numberOfOccurrences){var today=new Date();var daysInWeek=['Sunday','Monday','Tuesday','Wednesday','Thursday','Friday','Saturday'];var selectedDayIndex=daysInWeek.findIndex(function(day){return day===selectedDay;});if(selectedDayIndex===-1){return[];// Invalid selected day\n}var nearestDays=Array.from({length:numberOfOccurrences},function(_,index){var currentWeek=startOfWeek(today,{weekStartsOn:0});// Always start from Sunday\nvar startOfSelectedWeek=addWeeks(currentWeek,index);// Find the next occurrence of the selected day in the current week\nvar nextDay=addDays(startOfSelectedWeek,selectedDayIndex-currentWeek.getDay());if(nextDay<today){// If the selected day has already passed in the current week, move to the next week\nnextDay=addDays(startOfSelectedWeek,selectedDayIndex-currentWeek.getDay()+7);}return format(nextDay,'yyyy-MM-dd');});return nearestDays;};var getBackgroundColor=function getBackgroundColor(status){switch(status){case'Cancelled':return'#FCA694';case'Rescheduled':return'#FFB97F';case'Scheduled by Patient':return'#FFFFDC';case'Approved by Doctor':return'#BAFFC4';default:return'lightgray';}};var getBorderColor=function getBorderColor(status){switch(status){case'Cancelled':return'#A41D00';case'Rescheduled':return'#FF7400';case'Scheduled by Patient':return'#F8F547';case'Approved by Doctor':return'#48DE66';default:return'lightgray';}};var uniqueClinics=_toConsumableArray(new Set(schedules.map(function(schedule){return schedule.clinicName;})));var handleChangeClinic=function handleChangeClinic(clinicName){var selectedClinic=schedules.find(function(schedule){return schedule.clinicName===clinicName;});setSelectedClinicId((selectedClinic===null||selectedClinic===void 0?void 0:selectedClinic.clinicId)||'');setSelectedDay('');setSelectedDate('');};useEffect(function(){var fetchLoggedInPatientId=/*#__PURE__*/function(){var _ref4=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee4(){var response,userId;return _regeneratorRuntime().wrap(function _callee4$(_context4){while(1)switch(_context4.prev=_context4.next){case 0:_context4.prev=0;_context4.next=3;return fetch('http://localhost:8080/checkLoggedInPatient');case 3:response=_context4.sent;if(!response.ok){_context4.next=12;break;}_context4.next=7;return response.json();case 7:userId=_context4.sent;setPatientUserId(userId);setIsPatientLoggedIn(true);_context4.next=14;break;case 12:setError('Failed to fetch logged-in patient user ID.');setIsPatientLoggedIn(false);case 14:_context4.next=20;break;case 16:_context4.prev=16;_context4.t0=_context4[\"catch\"](0);setError('Error fetching logged-in patient user ID:',_context4.t0);setIsPatientLoggedIn(false);// Handle the error or provide feedback to the user\ncase 20:case\"end\":return _context4.stop();}},_callee4,null,[[0,16]]);}));return function fetchLoggedInPatientId(){return _ref4.apply(this,arguments);};}();fetchLoggedInPatientId();},[]);// The empty dependency array ensures that this effect runs once when the component mounts\n// Change this line\nif(!isPatientLoggedIn){return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(HomeNavbar,{}),/*#__PURE__*/_jsxs(\"div\",{style:{textAlign:'center',marginTop:'50px'},children:[/*#__PURE__*/_jsx(\"h1\",{children:\"No patient is logged in.\"}),/*#__PURE__*/_jsx(Link,{to:\"/login\",children:/*#__PURE__*/_jsx(\"button\",{children:\"Login\"})})]}),/*#__PURE__*/_jsx(HomeFooter,{})]});}var handleBookAppointment=/*#__PURE__*/function(){var _ref5=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee5(){var url,response;return _regeneratorRuntime().wrap(function _callee5$(_context5){while(1)switch(_context5.prev=_context5.next){case 0:_context5.prev=0;// Validate your appointment data here if needed\nurl=\"http://localhost:8080/appointment?patientId=\".concat(patientUserId,\"&scheduleId=\").concat(selectedSched,\"&scheduleDate=\").concat(selectedDate,\"&status=\").concat(status);_context5.next=4;return fetch(url,{method:'POST'});case 4:response=_context5.sent;if(response.ok){setError('Appointment added successfully!');console.log('Clinic ID:',selectedClinicId);console.log('Selected Day:',selectedDay);console.log('Selected Timeslot:',selectedSched);console.log('Selected Date:',selectedDate);window.location.href=\"/setappointment/\".concat(doctorId);// You can handle any other logic after a successful appointment addition here\n}else{setError('Failed to add appointment.');// Handle the error or provide feedback to the user\n}_context5.next=11;break;case 8:_context5.prev=8;_context5.t0=_context5[\"catch\"](0);setError('Error adding appointment:',_context5.t0);// Handle the error or provide feedback to the user\ncase 11:case\"end\":return _context5.stop();}},_callee5,null,[[0,8]]);}));return function handleBookAppointment(){return _ref5.apply(this,arguments);};}();var CustomEvent=function CustomEvent(_ref6){var event=_ref6.event;return/*#__PURE__*/_jsxs(\"div\",{style:{margin:'5px 0',whiteSpace:'nowrap',overflowY:'auto',maxHeight:\"55px\",textOverflow:'ellipsis'},children:[/*#__PURE__*/_jsx(\"strong\",{style:{margin:'0px 0',overflow:'hidden',textOverflow:'ellipsis',whiteSpace:'normal'},children:event.title}),/*#__PURE__*/_jsxs(\"p\",{style:{margin:'0px 0',overflow:'hidden',textOverflow:'ellipsis',whiteSpace:'normal'},children:[\"Clinic: \",event.clinic]}),/*#__PURE__*/_jsxs(\"p\",{style:{margin:'0px 0',overflow:'hidden',textOverflow:'ellipsis',whiteSpace:'normal'},children:[\"Status: \",event.appointmentStatus]})]});};return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(PatientNavBar,{}),/*#__PURE__*/_jsxs(\"div\",{style:{display:\"flex\",margin:\"auto\",width:\"90vw\",justifyContent:\"center\",marginTop:\"2%\"},children:[/*#__PURE__*/_jsx(Calendar,{localizer:localizer,events:appointments.filter(function(appointment){return appointment.title===schedules[0].doctorName;}),startAccessor:\"start\",endAccessor:\"end\",style:{height:700,width:\"70%\"},components:{event:CustomEvent// Use the custom Event component\n}}),/*#__PURE__*/_jsxs(\"div\",{style:{marginLeft:\"30px\"},children:[/*#__PURE__*/_jsx(\"h1\",{children:schedules[0].doctorName}),/*#__PURE__*/_jsxs(\"h2\",{children:[\"Specialization: \",schedules[0].specialization]}),/*#__PURE__*/_jsxs(\"h3\",{children:[\"Contact Number: \",schedules[0].contactNumber]}),/*#__PURE__*/_jsxs(\"h3\",{children:[\"Email Address: \",schedules[0].docEmail]}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsxs(\"table\",{children:[/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{children:/*#__PURE__*/_jsx(\"h2\",{style:{color:\"#0094d4\"},children:\"Clinic: \"})}),/*#__PURE__*/_jsx(\"td\",{children:/*#__PURE__*/_jsxs(\"select\",{name:\"clinic\",id:\"clinic\",style:{width:\"250px\",fontSize:\"1.5rem\",fontWeight:\"bold\",color:\"#0094d4\"},onChange:function onChange(e){return handleChangeClinic(e.target.value);},children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:\"Select Clinic\"}),uniqueClinics.map(function(clinicName,index){return/*#__PURE__*/_jsx(\"option\",{value:clinicName,children:clinicName},index);})]})})]}),/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{children:/*#__PURE__*/_jsx(\"h5\",{children:\"Address:\"})}),/*#__PURE__*/_jsx(\"td\",{children:/*#__PURE__*/_jsx(\"h5\",{children:(_schedules$find=schedules.find(function(schedule){return schedule.clinicId===selectedClinicId;}))===null||_schedules$find===void 0?void 0:_schedules$find.address})})]}),/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{children:/*#__PURE__*/_jsx(\"h5\",{children:\"Contact Number:\"})}),/*#__PURE__*/_jsx(\"td\",{children:/*#__PURE__*/_jsx(\"h5\",{children:(_schedules$find2=schedules.find(function(schedule){return schedule.clinicId===selectedClinicId;}))===null||_schedules$find2===void 0?void 0:_schedules$find2.number})})]}),/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{children:/*#__PURE__*/_jsx(\"h5\",{children:\"Email Address:\"})}),/*#__PURE__*/_jsx(\"td\",{children:/*#__PURE__*/_jsx(\"h5\",{children:(_schedules$find3=schedules.find(function(schedule){return schedule.clinicId===selectedClinicId;}))===null||_schedules$find3===void 0?void 0:_schedules$find3.email})})]}),/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{style:{width:\"150px\"},children:\"Day: \"}),/*#__PURE__*/_jsx(\"td\",{children:/*#__PURE__*/_jsxs(\"select\",{name:\"sched\",id:\"day-\".concat(selectedClinicId),style:{width:\"250px\"},value:selectedDay,onChange:function onChange(e){setSelectedDay(e.target.value);setSelectedSched('');setSelectedDate('');console.log(\"Selected Day changed:\",e.target.value);},children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:\"Select Day\"}),_toConsumableArray(new Set(schedules.filter(function(schedule){return schedule.clinicId===selectedClinicId;}).map(function(schedule){return schedule.scheduleDay;}))).map(function(scheduleDay){return/*#__PURE__*/_jsx(\"option\",{value:scheduleDay,children:scheduleDay},\"\".concat(selectedClinicId,\"-\").concat(scheduleDay));})]})})]}),/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{style:{width:\"150px\"},children:\"Timeslot: \"}),/*#__PURE__*/_jsx(\"td\",{children:/*#__PURE__*/_jsxs(\"select\",{name:\"timeslot\",id:\"timeslot-\".concat(selectedClinicId),style:{width:\"250px\"},value:selectedSched,onChange:function onChange(e){var selectedTimeslot=e.target.value;setSelectedDate('');setSelectedSched(selectedTimeslot);console.log('Selected Schedule ID:',selectedTimeslot);},children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:\"Select Timeslot\"}),schedules.filter(function(schedule){return schedule.clinicId===selectedClinicId&&schedule.scheduleDay===selectedDay;}).map(function(schedule){return/*#__PURE__*/_jsxs(\"option\",{value:schedule.scheduleId,children:[convertMilitaryToStandardTime(schedule.start),\" - \",convertMilitaryToStandardTime(schedule.end)]},schedule.scheduleId);})]})})]}),/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{style:{width:\"150px\"},children:\"Date: \"}),/*#__PURE__*/_jsx(\"td\",{children:/*#__PURE__*/_jsxs(\"select\",{name:\"sched\",id:\"sched-\".concat(selectedClinicId),style:{width:\"250px\"},value:selectedDate,onChange:function onChange(e){var selectedDateString=e.target.value;setSelectedDate(selectedDateString);console.log('Selected Date:',selectedDateString);},children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:\"Select Date\"}),getNearestDays(selectedDay,5).map(function(date,index){return/*#__PURE__*/_jsx(\"option\",{value:date,children:new Date(date).toLocaleDateString('en-US',{year:'numeric',month:'long',day:'numeric'})},index);})]})})]}),/*#__PURE__*/_jsx(\"tr\",{children:/*#__PURE__*/_jsx(\"td\",{colSpan:2,children:/*#__PURE__*/_jsx(\"button\",{style:{marginTop:\"10px\",borderRadius:0,width:\"100%\"},onClick:handleBookAppointment,children:\"Book an Appointment\"})})}),/*#__PURE__*/_jsx(\"tr\",{children:/*#__PURE__*/_jsx(\"td\",{colSpan:2,children:/*#__PURE__*/_jsx(\"h3\",{children:/*#__PURE__*/_jsx(\"i\",{children:error})})})})]}),/*#__PURE__*/_jsx(\"h1\",{children:\"Existing Appointments \"}),/*#__PURE__*/_jsx(\"div\",{style:{overflowY:'auto',maxHeight:'100px'},children:appointments.filter(function(appointment){return appointment.title===schedules[0].doctorName;}).length>0?// Display appointments\nappointments.map(function(appointment,index){return appointment.title===schedules[0].doctorName&&/*#__PURE__*/_jsxs(\"table\",{children:[/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsxs(\"td\",{rowSpan:2,width:200,style:{border:'2px dashed',borderRadius:'10px',borderColor:getBorderColor(appointment.appointmentStatus),backgroundColor:getBackgroundColor(appointment.appointmentStatus),paddingLeft:'10px'},children:[appointment.title,\" \",/*#__PURE__*/_jsx(\"br\",{}),format(appointment.start,\"MM/dd/yyyy EEEE\"),\" \",/*#__PURE__*/_jsx(\"br\",{}),format(appointment.start,\"h:mm a\"),\" - \",format(appointment.end,\"h:mm a\"),\"  \",/*#__PURE__*/_jsx(\"br\",{}),appointment.appointmentStatus,\" \",/*#__PURE__*/_jsx(\"br\",{})]}),/*#__PURE__*/_jsx(\"td\",{children:/*#__PURE__*/_jsx(\"button\",{style:{borderRadius:0,width:\"100%\",height:\"100%\"},onClick:function onClick(){return handleReschedule(appointment.appointmentId);},children:\"Reschedule\"})})]}),/*#__PURE__*/_jsx(\"tr\",{children:/*#__PURE__*/_jsx(\"td\",{children:/*#__PURE__*/_jsx(\"button\",{className:\"cancel\",onClick:function onClick(){return handleCancel(appointment.appointmentId);},type:\"submit\",children:\"Cancel\"})})})]},index);}):/*#__PURE__*/ // Display a message if there are no appointments with appointmentStatus === \"Approved by Doctor\"\n_jsx(\"div\",{children:/*#__PURE__*/_jsx(\"p\",{children:\"You have no existing appointments yet.\"})})})]})]}),/*#__PURE__*/_jsx(PatientFooter,{})]});};export default SetAppointment;","map":{"version":3,"names":["React","useState","useEffect","Link","PatientNavBar","PatientFooter","useParams","startOfWeek","addWeeks","addDays","format","HomeFooter","HomeNavbar","Calendar","dateFnsLocalizer","parse","getDay","jsx","_jsx","jsxs","_jsxs","SetAppointment","_schedules$find","_schedules$find2","_schedules$find3","_useParams","doctorId","_useState","_useState2","_slicedToArray","error","setError","_useState3","_useState4","selectedDay","setSelectedDay","_useState5","_useState6","selectedSched","setSelectedSched","_useState7","_useState8","selectedDate","setSelectedDate","_useState9","_useState10","status","_useState11","_useState12","selectedClinicId","setSelectedClinicId","_useState13","_useState14","patientUserId","setPatientUserId","_useState15","_useState16","isPatientLoggedIn","setIsPatientLoggedIn","_useState17","scheduleId","clinicId","avatar","doctorName","specialization","contactNumber","docEmail","scheduleDay","start","Date","end","slots","clinicName","address","number","email","_useState18","schedules","setSchedules","_useState19","title","clinic","appointmentId","appointmentStatus","_useState20","appointments","setAppointments","fetch","then","response","ok","json","Error","data","concat","appointmentsResponse","appointmentsData","formattedAppointments","map","appointment","_appointment$schedule","scheduleDate","split","Number","_appointment$schedule2","year","month","day","_appointment$startTim","startTime","_appointment$startTim2","hours","minutes","_appointment$endTime$","endTime","_appointment$endTime$2","hours2","minutes2","startDate","endDate","officeNumber","transactionNo","catch","console","locales","require","localizer","handleCancel","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","appointmentToCancel","wrap","_callee$","_context","prev","next","find","abrupt","window","alert","method","sent","log","location","reload","t0","stop","_x","apply","arguments","handleReschedule","_ref2","_callee2","_callee2$","_context2","href","_x2","fetchDoctorSchedules","_ref3","_callee3","formattedSchedules","_callee3$","_context3","schedule","doctor","user","firstName","middleName","lastName","name","officeEmail","convertMilitaryToStandardTime","militaryTime","length","_militaryTime$split","_militaryTime$split2","parsedHours","parseInt","period","formattedHours","getNearestDays","numberOfOccurrences","today","daysInWeek","selectedDayIndex","findIndex","nearestDays","Array","from","_","index","currentWeek","weekStartsOn","startOfSelectedWeek","nextDay","getBackgroundColor","getBorderColor","uniqueClinics","_toConsumableArray","Set","handleChangeClinic","selectedClinic","fetchLoggedInPatientId","_ref4","_callee4","userId","_callee4$","_context4","children","style","textAlign","marginTop","to","handleBookAppointment","_ref5","_callee5","url","_callee5$","_context5","CustomEvent","_ref6","event","margin","whiteSpace","overflowY","maxHeight","textOverflow","overflow","display","width","justifyContent","events","filter","startAccessor","endAccessor","height","components","marginLeft","color","id","fontSize","fontWeight","onChange","e","target","value","selectedTimeslot","selectedDateString","date","toLocaleDateString","colSpan","borderRadius","onClick","rowSpan","border","borderColor","backgroundColor","paddingLeft","className","type"],"sources":["D:/3rd Year 1st Sem/DocClickConnect/appointment/src/pages/AppointmentPages/SetAppointment.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport PatientNavBar from '../../components/PatientNavBar';\nimport PatientFooter from '../../components/PatientFooter';\nimport { useParams } from 'react-router-dom';\nimport { startOfWeek, addWeeks, addDays, format } from 'date-fns';\nimport HomeFooter from '../../components/HomeFooter';\nimport HomeNavbar from '../../components/HomeNavbar';\nimport { Calendar, dateFnsLocalizer } from 'react-big-calendar';\nimport parse from 'date-fns/parse';\nimport getDay from 'date-fns/getDay';\nimport \"react-big-calendar/lib/css/react-big-calendar.css\";\nconst SetAppointment = () => {\n  const { doctorId } = useParams();\n  const [error, setError] = useState(null);\n  const [selectedDay, setSelectedDay] = useState('');\n  const [selectedSched, setSelectedSched] = useState('');\n  const [selectedDate, setSelectedDate] = useState('');\n  const [status] = useState(\"Scheduled by Patient\");\n  const [selectedClinicId, setSelectedClinicId] = useState('');\n  const [patientUserId, setPatientUserId] = useState('');\n  const [isPatientLoggedIn, setIsPatientLoggedIn] = useState('');\n  const [schedules, setSchedules] = useState([\n    {\n      scheduleId: '',\n      clinicId: '',\n      avatar: '',\n      doctorName: '',\n      specialization: '',\n      contactNumber: '',\n      docEmail: '',\n      scheduleDay: '',\n      start: new Date(),\n      end: new Date(),  // 5:00 PM\n      slots: '',\n      clinicName: '',\n      address: '',\n      number: '',\n      email: ''\n    },\n  ]);\n  const [appointments, setAppointments] = useState([\n    {\n      title: '',\n      clinic: '',\n      address: '',\n      number: '',\n      start: new Date(),\n      end: new Date(),  // 5:00 PM\n      appointmentId: '',\n      appointmentStatus: ''\n    },\n  ]);\n  useEffect(() => {\n    // Replace 'http://localhost:8080' with your actual API URL\n    fetch('http://localhost:8080/checkLoggedInPatient')\n      .then((response) => {\n        if (response.ok) {\n          return response.json();\n        }\n        throw new Error('Network response was not ok');\n      })\n      .then((data) => {\n        setPatientUserId(data);\n        // Once you have the patientUserId, make another request to get appointments\n        fetch(`http://localhost:8080/appointments?patientUserId=${data}`)\n          .then((appointmentsResponse) => {\n            if (appointmentsResponse.ok) {\n              return appointmentsResponse.json();\n            }\n            throw new Error('Network response was not ok');\n          })\n          .then((appointmentsData) => {\n            const formattedAppointments = appointmentsData.map((appointment) => {\n              // Extract date and time components\n              const [year, month, day] = appointment.scheduleDate.split('-').map(Number);\n              const [hours, minutes] = appointment.startTime.split(':').map(Number);\n              const [hours2, minutes2] = appointment.endTime.split(':').map(Number);\n\n              // Create Date objects for start and end times\n              const startDate = new Date(year, month - 1, day, hours, minutes);\n              const endDate = new Date(year, month - 1, day, hours2, minutes2);\n\n              // Create an appointment object\n              return {\n                title: 'Dr. ' + appointment.doctorName,\n                clinic: appointment.clinicName,\n                address: appointment.address,\n                number: appointment.clinic.officeNumber,\n                start: startDate,\n                end: endDate,\n                appointmentId: appointment.transactionNo,\n                appointmentStatus: appointment.status\n              };\n            });\n\n            setAppointments(formattedAppointments);\n          })\n          .catch((error) => {\n            // Handle errors\n            console.error(error);\n          });\n\n      })\n      .catch((error) => {\n        console.error('Error:', error);\n      });\n  }, []);\n\n  const locales = {\n    \"en-US\": require(\"date-fns/locale/en-US\")\n  }\n\n  const localizer = dateFnsLocalizer({\n    format,\n    parse,\n    startOfWeek,\n    getDay,\n    locales\n  })\n\n  const handleCancel = async (appointmentId) => {\n    try {\n      // Find the appointment with the provided appointmentId\n      const appointmentToCancel = appointments.find(appointment => appointment.appointmentId === appointmentId);\n  \n      if (!appointmentToCancel) {\n        // Handle the case where the appointment with the given ID is not found\n        console.error('Appointment not found');\n        return;\n      }\n  \n      // Check if the appointment is already cancelled\n      if (appointmentToCancel.appointmentStatus === 'Cancelled') {\n        // Display error message as a pop-up\n        window.alert('Appointment is already cancelled');\n        return;\n      }\n  \n      // Proceed with the request to cancel the appointment\n      const response = await fetch(`http://localhost:8080/appointmentChange/${appointmentId}?newStatus=Cancelled`, {\n        method: 'PUT',\n      });\n  \n      if (response.ok) {\n        console.log('Appointment cancelled successfully');\n        window.location.reload();\n      } else {\n        console.error('Error cancelling appointment');\n      }\n    } catch (error) {\n      console.error('Error cancelling appointment:', error);\n    }\n  };\n  \n  \n\n  const handleReschedule = async (appointmentId) => {\n    const appointmentToCancel = appointments.find(appointment => appointment.appointmentId === appointmentId);\n  \n    if (!appointmentToCancel) {\n      // Handle the case where the appointment with the given ID is not found\n      console.error('Appointment not found');\n      return;\n    }\n\n    // Check if the appointment is already cancelled\n    if (appointmentToCancel.appointmentStatus === 'Cancelled') {\n      // Display error message as a pop-up\n      window.alert('Appointment is already cancelled. It cannot be rescheduled.');\n      return;\n    }\n    window.location.href = `/patresched/${appointmentId}`;\n  };\n\n\n  useEffect(() => {\n    const fetchDoctorSchedules = async () => {\n      try {\n        const response = await fetch(`http://localhost:8080/docsched/${doctorId}`);\n\n        if (response.ok) {\n          const data = await response.json();\n\n          const formattedSchedules = data.map(schedule => ({\n            scheduleId: schedule.scheduleId,\n            clinicId: schedule.clinicId,\n            avatar: schedule.doctor.user.avatar,\n            doctorName: `Dr. ${schedule.doctor.user.firstName} ${schedule.doctor.user.middleName} ${schedule.doctor.user.lastName}`,\n            specialization: schedule.doctor.specialization,\n            contactNumber: schedule.doctor.user.contactNumber,\n            docEmail: schedule.doctor.user.email,\n            scheduleDay: schedule.scheduleDay,\n            start: schedule.startTime,\n            end: schedule.endTime,\n            slots: schedule.slots,\n            clinicName: schedule.clinic.name,\n            address: schedule.clinic.address,\n            number: schedule.clinic.officeNumber,\n            email: schedule.clinic.officeEmail\n          }));\n\n          setSchedules(formattedSchedules);\n\n        } else {\n          setError('Error fetching appointment');\n        }\n      } catch (error) {\n        setError('Error fetching appointment');\n      }\n    };\n\n    fetchDoctorSchedules();\n  }, [doctorId]);\n\n  const convertMilitaryToStandardTime = (militaryTime) => {\n    if (typeof militaryTime !== 'string' || militaryTime.length !== 8) {\n      return 'Invalid Time';\n    }\n\n    const [hours, minutes] = militaryTime.split(':');\n    const parsedHours = parseInt(hours, 10);\n    const period = parsedHours >= 12 ? 'PM' : 'AM';\n    const formattedHours = parsedHours % 12 || 12;\n    return `${formattedHours}:${minutes} ${period}`;\n  };\n\n\n\n  const getNearestDays = (selectedDay, numberOfOccurrences) => {\n    const today = new Date();\n    const daysInWeek = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];\n    const selectedDayIndex = daysInWeek.findIndex(day => day === selectedDay);\n\n    if (selectedDayIndex === -1) {\n      return []; // Invalid selected day\n    }\n\n    const nearestDays = Array.from({ length: numberOfOccurrences }, (_, index) => {\n      const currentWeek = startOfWeek(today, { weekStartsOn: 0 }); // Always start from Sunday\n      const startOfSelectedWeek = addWeeks(currentWeek, index);\n\n      // Find the next occurrence of the selected day in the current week\n      let nextDay = addDays(startOfSelectedWeek, selectedDayIndex - currentWeek.getDay());\n\n      if (nextDay < today) {\n        // If the selected day has already passed in the current week, move to the next week\n        nextDay = addDays(startOfSelectedWeek, selectedDayIndex - currentWeek.getDay() + 7);\n      }\n\n      return format(nextDay, 'yyyy-MM-dd');\n    });\n\n    return nearestDays;\n  };\n\n\n  const getBackgroundColor = (status) => {\n    switch (status) {\n      case 'Cancelled':\n        return '#FCA694';\n      case 'Rescheduled':\n        return '#FFB97F';\n      case 'Scheduled by Patient':\n        return '#FFFFDC';\n      case 'Approved by Doctor':\n        return '#BAFFC4';\n      default:\n        return 'lightgray';\n    }\n  };\n\n  const getBorderColor = (status) => {\n    switch (status) {\n      case 'Cancelled':\n        return '#A41D00';\n      case 'Rescheduled':\n        return '#FF7400';\n      case 'Scheduled by Patient':\n        return '#F8F547';\n      case 'Approved by Doctor':\n        return '#48DE66';\n      default:\n        return 'lightgray';\n    }\n  };\n\n\n  const uniqueClinics = [...new Set(schedules.map(schedule => schedule.clinicName))];\n\n\n  const handleChangeClinic = (clinicName) => {\n    const selectedClinic = schedules.find(schedule => schedule.clinicName === clinicName);\n    setSelectedClinicId(selectedClinic?.clinicId || '');\n    setSelectedDay('');\n    setSelectedDate('');\n\n  };\n  useEffect(() => {\n    const fetchLoggedInPatientId = async () => {\n      try {\n        const response = await fetch('http://localhost:8080/checkLoggedInPatient');\n        if (response.ok) {\n          const userId = await response.json();\n          setPatientUserId(userId);\n          setIsPatientLoggedIn(true);\n        } else {\n          setError('Failed to fetch logged-in patient user ID.');\n          setIsPatientLoggedIn(false);\n        }\n      } catch (error) {\n        setError('Error fetching logged-in patient user ID:', error);\n        setIsPatientLoggedIn(false);\n        // Handle the error or provide feedback to the user\n      }\n    };\n\n    fetchLoggedInPatientId();\n  }, []); // The empty dependency array ensures that this effect runs once when the component mounts\n\n  // Change this line\n\n  if (!isPatientLoggedIn) {\n    return (\n      <div>\n        <HomeNavbar />\n        <div style={{ textAlign: 'center', marginTop: '50px' }}>\n          <h1>No patient is logged in.</h1>\n          <Link to=\"/login\"><button>Login</button></Link>\n        </div>\n        <HomeFooter />\n      </div>\n\n    );\n  }\n  const handleBookAppointment = async () => {\n    try {\n      // Validate your appointment data here if needed\n\n      const url = `http://localhost:8080/appointment?patientId=${patientUserId}&scheduleId=${selectedSched}&scheduleDate=${selectedDate}&status=${status}`;\n\n      const response = await fetch(url, {\n        method: 'POST',\n      });\n\n      if (response.ok) {\n        setError('Appointment added successfully!');\n        console.log('Clinic ID:', selectedClinicId);\n        console.log('Selected Day:', selectedDay);\n        console.log('Selected Timeslot:', selectedSched);\n        console.log('Selected Date:', selectedDate);\n        window.location.href = `/setappointment/${doctorId}`;\n\n        // You can handle any other logic after a successful appointment addition here\n      } else {\n        setError('Failed to add appointment.');\n        // Handle the error or provide feedback to the user\n      }\n    } catch (error) {\n      setError('Error adding appointment:', error);\n      // Handle the error or provide feedback to the user\n    }\n  };\n\n  const CustomEvent = ({ event }) => (\n    <div style={{ margin: '5px 0', whiteSpace: 'nowrap', overflowY: 'auto', maxHeight: \"55px\", textOverflow: 'ellipsis' }}>\n      <strong style={{ margin: '0px 0', overflow: 'hidden', textOverflow: 'ellipsis', whiteSpace: 'normal' }}>{event.title}</strong>\n      <p style={{ margin: '0px 0', overflow: 'hidden', textOverflow: 'ellipsis', whiteSpace: 'normal' }}>\n        Clinic: {event.clinic}\n      </p>\n      <p style={{ margin: '0px 0', overflow: 'hidden', textOverflow: 'ellipsis', whiteSpace: 'normal' }}>\n        Status: {event.appointmentStatus}\n      </p>\n    </div>\n  );\n\n\n  return (\n    <div>\n      <PatientNavBar />\n      <div style={{ display: \"flex\", margin: \"auto\", width: \"90vw\", justifyContent: \"center\",  marginTop: \"2%\" }}>\n        <Calendar\n          localizer={localizer}\n          events={appointments.filter(appointment => appointment.title === schedules[0].doctorName)}\n          startAccessor=\"start\"\n          endAccessor=\"end\"\n          style={{ height: 700, width: \"70%\" }}\n          components={{\n            event: CustomEvent, // Use the custom Event component\n          }}\n        />\n\n        <div style={{ marginLeft: \"30px\" }}>\n          <h1>{schedules[0].doctorName}</h1>\n          <h2>Specialization: {schedules[0].specialization}</h2>\n          <h3>Contact Number: {schedules[0].contactNumber}</h3>\n          <h3>Email Address: {schedules[0].docEmail}</h3>\n          <br />\n\n          <table>\n            <tr>\n              <td>\n                <h2 style={{ color: \"#0094d4\" }}>Clinic: </h2>\n              </td>\n              <td>\n                <select\n                  name=\"clinic\"\n                  id=\"clinic\"\n                  style={{\n                    width: \"250px\",\n                    fontSize: \"1.5rem\",\n                    fontWeight: \"bold\",\n                    color: \"#0094d4\",\n                  }}\n                  onChange={(e) => handleChangeClinic(e.target.value)}\n                >\n                  <option value=\"\">Select Clinic</option>\n                  {uniqueClinics.map((clinicName, index) => (\n                    <option key={index} value={clinicName}>\n                      {clinicName}\n                    </option>\n                  ))}\n                </select>\n              </td>\n            </tr>\n            <tr>\n              <td><h5>Address:</h5></td>\n              <td><h5>{schedules.find(schedule => schedule.clinicId === selectedClinicId)?.address}</h5></td>\n            </tr>\n            <tr>\n              <td><h5>Contact Number:</h5></td>\n              <td><h5>{schedules.find(schedule => schedule.clinicId === selectedClinicId)?.number}</h5></td>\n            </tr>\n            <tr>\n              <td><h5>Email Address:</h5></td>\n              <td><h5>{schedules.find(schedule => schedule.clinicId === selectedClinicId)?.email}</h5></td>\n            </tr>\n            <tr>\n              <td style={{ width: \"150px\" }}>Day: </td>\n              <td>\n                <select\n                  name=\"sched\"\n                  id={`day-${selectedClinicId}`}\n                  style={{ width: \"250px\" }}\n                  value={selectedDay}\n                  onChange={(e) => {\n                    setSelectedDay(e.target.value);\n                    setSelectedSched('');\n                    setSelectedDate('');\n                    console.log(\"Selected Day changed:\", e.target.value);\n                  }}\n                >\n                  {/* Initial blank option */}\n                  <option value=\"\">Select Day</option>\n                  {/* Options for the selected clinic's unique days */}\n                  {[...new Set(schedules\n                    .filter(schedule => schedule.clinicId === selectedClinicId)\n                    .map(schedule => schedule.scheduleDay))]\n                    .map(scheduleDay => (\n                      <option key={`${selectedClinicId}-${scheduleDay}`} value={scheduleDay}>\n                        {scheduleDay}\n                      </option>\n                    ))}\n                </select>\n\n              </td>\n            </tr>\n            <tr>\n              <td style={{ width: \"150px\" }}>Timeslot: </td>\n              <td>\n                <select\n                  name=\"timeslot\"\n                  id={`timeslot-${selectedClinicId}`}\n                  style={{ width: \"250px\" }}\n                  value={selectedSched}\n                  onChange={(e) => {\n                    const selectedTimeslot = e.target.value;\n                    setSelectedDate('');\n                    setSelectedSched(selectedTimeslot);\n                    console.log('Selected Schedule ID:', selectedTimeslot);\n                  }}\n                >\n                  {/* Initial blank option */}\n                  <option value=\"\">Select Timeslot</option>\n\n                  {/* Options for the selected clinic's timeslots */}\n                  {schedules\n                    .filter(schedule => schedule.clinicId === selectedClinicId && schedule.scheduleDay === selectedDay)\n                    .map(schedule => (\n                      <option key={schedule.scheduleId} value={schedule.scheduleId}>\n                        {convertMilitaryToStandardTime(schedule.start)} - {convertMilitaryToStandardTime(schedule.end)}\n                      </option>\n                    ))}\n                </select>\n\n\n              </td>\n            </tr>\n\n            {/* autogenerated dapat */}\n            <tr>\n              <td style={{ width: \"150px\" }}>Date: </td>\n              <td>\n                <select\n                  name=\"sched\"\n                  id={`sched-${selectedClinicId}`}\n                  style={{ width: \"250px\" }}\n                  value={selectedDate}\n                  onChange={(e) => {\n                    const selectedDateString = e.target.value;\n                    setSelectedDate(selectedDateString);\n                    console.log('Selected Date:', selectedDateString);\n                  }}\n                >\n                  {/* Initial blank option */}\n                  <option value=\"\">Select Date</option>\n\n                  {/* Options for the selected clinic's nearest days (only 5) */}\n                  {getNearestDays(selectedDay, 5).map((date, index) => (\n                    <option key={index} value={date}>\n                      {new Date(date).toLocaleDateString('en-US', {\n                        year: 'numeric',\n                        month: 'long',\n                        day: 'numeric',\n                      })}\n                    </option>\n                  ))}\n                </select>\n\n\n\n              </td>\n            </tr>\n            <tr><td colSpan={2}><button style={{ marginTop: \"10px\", borderRadius: 0, width: \"100%\" }} onClick={handleBookAppointment}>Book an Appointment</button></td></tr>\n            <tr><td colSpan={2}><h3><i>{error}</i></h3></td></tr>\n          </table>\n\n          <h1>Existing Appointments </h1>\n          <div style={{ overflowY: 'auto', maxHeight: '100px' }}>\n            {appointments.filter(appointment => appointment.title === schedules[0].doctorName).length > 0 ? (\n              // Display appointments\n              appointments.map((appointment, index) => (appointment.title === schedules[0].doctorName &&\n                (\n                  <table key={index}>\n                    <tr>\n                      <td rowSpan={2} width={200} style={{ border: '2px dashed', borderRadius: '10px',           borderColor: getBorderColor(appointment.appointmentStatus),\n                        backgroundColor: getBackgroundColor(appointment.appointmentStatus),\n                        paddingLeft: '10px',      }}>\n                        {appointment.title} <br />\n                        {format(appointment.start, \"MM/dd/yyyy EEEE\")} <br />\n                        {format(appointment.start, \"h:mm a\")} - {format(appointment.end, \"h:mm a\")}  <br />\n                        {appointment.appointmentStatus} <br />\n                      </td>\n                      <td><button style={{ borderRadius: 0, width: \"100%\", height: \"100%\" }} onClick={() => handleReschedule(appointment.appointmentId)}>Reschedule</button></td>\n                    </tr>\n                    <tr>\n                      <td><button className='cancel' onClick={() => handleCancel(appointment.appointmentId)} type=\"submit\">Cancel</button></td>\n                    </tr>\n                  </table>\n                )\n              ))\n            ) : (\n              // Display a message if there are no appointments with appointmentStatus === \"Approved by Doctor\"\n              <div>\n                <p>You have no existing appointments yet.</p>\n              </div>\n            )}\n          </div>\n        </div>\n      </div>\n      <PatientFooter />\n    </div>\n  );\n};\n\nexport default SetAppointment;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}