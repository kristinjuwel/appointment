{"ast":null,"code":"var _jsxFileName = \"D:\\\\3rd Year 1st Sem\\\\DocClickConnect\\\\appointment\\\\src\\\\pages\\\\DoctorPages\\\\DoctorClinics.jsx\",\n  _s = $RefreshSig$();\nimport \"../../styles/Search.css\";\nimport DoctorNavbar from '../../components/DoctorNavbar';\nimport DoctorFooter from '../../components/DoctorFooter';\nimport React, { useState, useEffect } from 'react';\nimport ClinicCard from \"../../components/Clinics\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DoctorClinics = () => {\n  _s();\n  const [loading, setLoading] = useState(true);\n  const [isError, setIsError] = useState(false);\n  const [schedules, setSchedules] = useState([]);\n  const [doctorUserId, setDoctorUserId] = useState('');\n  const doctorUserIdRef = useRef(doctorUserId);\n  useEffect(() => {\n    doctorUserIdRef.current = doctorUserId;\n  }, [doctorUserId]);\n  useEffect(() => {\n    // Replace 'http://localhost:8080' with your actual API URL\n    fetch('http://localhost:8080/checkLoggedInDoctor').then(response => {\n      if (response.ok) {\n        return response.json();\n      }\n      throw new Error('Network response was not ok');\n    }).then(data => {\n      console.log({\n        data\n      });\n      setDoctorUserId(data);\n    }).catch(error => {\n      setIsError(true);\n      console.error('Error:', error);\n    });\n  }, []);\n  useEffect(() => {\n    fetch(`http://localhost:8080/docsched/${doctorUserIdRef.current}`).then(clinicsResponse => {\n      if (clinicsResponse.ok) {\n        return clinicsResponse.json();\n      }\n      throw new Error('Network response was not ok');\n    }).then(scheduleData => {\n      console.log('scheduleData:', scheduleData);\n      const formattedClinics = [];\n      const clinicIdsAdded = [];\n      scheduleData.forEach(schedule => {\n        const clinicId = schedule.clinic.clinicId;\n        if (!clinicIdsAdded.includes(clinicId)) {\n          formattedClinics.push({\n            name: '' + schedule.clinic.name,\n            address: '' + schedule.clinic.address,\n            doctor: '' + schedule.doctor.user.firstName\n          });\n          clinicIdsAdded.push(clinicId);\n        }\n      });\n      setSchedules(formattedClinics);\n      setLoading(false);\n    }).catch(error => {\n      setIsError(true);\n      console.error(error);\n    });\n  }, [doctorUserIdRef.current]); // Include the doctorUserIdRef.current in the dependency array\n\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 12\n    }, this);\n  }\n  if (isError) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Error occurred while fetching data.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 12\n    }, this);\n  }\n  const handleEdit = () => {\n    console.log('Edit clicked for clinic:');\n  };\n  const handleDelete = () => {\n    console.log('Delete clicked for clinic:');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"info-container\",\n    id: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(DoctorNavbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"info-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"doctor-grid\",\n        children: schedules.map((schedule, index) => /*#__PURE__*/_jsxDEV(ClinicCard, {\n          clinic: schedule,\n          onEdit: handleEdit,\n          onDelete: handleDelete\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DoctorFooter, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 5\n  }, this);\n};\n_s(DoctorClinics, \"8XNDiH9WwRQDRQh3+FEmsucHDuw=\");\n_c = DoctorClinics;\nexport default DoctorClinics;\nvar _c;\n$RefreshReg$(_c, \"DoctorClinics\");","map":{"version":3,"names":["DoctorNavbar","DoctorFooter","React","useState","useEffect","ClinicCard","jsxDEV","_jsxDEV","DoctorClinics","_s","loading","setLoading","isError","setIsError","schedules","setSchedules","doctorUserId","setDoctorUserId","doctorUserIdRef","useRef","current","fetch","then","response","ok","json","Error","data","console","log","catch","error","clinicsResponse","scheduleData","formattedClinics","clinicIdsAdded","forEach","schedule","clinicId","clinic","includes","push","name","address","doctor","user","firstName","children","fileName","_jsxFileName","lineNumber","columnNumber","handleEdit","handleDelete","className","id","map","index","onEdit","onDelete","_c","$RefreshReg$"],"sources":["D:/3rd Year 1st Sem/DocClickConnect/appointment/src/pages/DoctorPages/DoctorClinics.jsx"],"sourcesContent":["import \"../../styles/Search.css\";\r\nimport DoctorNavbar from '../../components/DoctorNavbar';\r\nimport DoctorFooter from '../../components/DoctorFooter';\r\nimport React, { useState, useEffect } from 'react';\r\nimport ClinicCard from \"../../components/Clinics\";\r\n\r\nconst DoctorClinics= () => {\r\n  const [loading, setLoading] = useState(true);\r\n  const [isError, setIsError] = useState(false);\r\n  const [schedules, setSchedules] = useState([]);\r\n  const [doctorUserId, setDoctorUserId] = useState('');\r\n\r\n  const doctorUserIdRef = useRef(doctorUserId);\r\n\r\n  useEffect(() => {\r\n    doctorUserIdRef.current = doctorUserId;\r\n  }, [doctorUserId]);\r\n\r\n  useEffect(() => {\r\n    // Replace 'http://localhost:8080' with your actual API URL\r\n    fetch('http://localhost:8080/checkLoggedInDoctor')\r\n      .then((response) => {\r\n        if (response.ok) {\r\n          return response.json();\r\n        }\r\n        throw new Error('Network response was not ok');\r\n      })\r\n      .then((data) => {\r\n        console.log({ data });\r\n        setDoctorUserId(data);\r\n      })\r\n      .catch((error) => {\r\n        setIsError(true);\r\n        console.error('Error:', error);\r\n      });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    fetch(`http://localhost:8080/docsched/${doctorUserIdRef.current}`)\r\n      .then((clinicsResponse) => {\r\n        if (clinicsResponse.ok) {\r\n          return clinicsResponse.json();\r\n        }\r\n        throw new Error('Network response was not ok');\r\n      })\r\n      .then((scheduleData) => {\r\n        console.log('scheduleData:', scheduleData);\r\n\r\n        const formattedClinics = [];\r\n        const clinicIdsAdded = [];\r\n\r\n        scheduleData.forEach((schedule) => {\r\n          const clinicId = schedule.clinic.clinicId;\r\n\r\n          if (!clinicIdsAdded.includes(clinicId)) {\r\n            formattedClinics.push({\r\n              name: '' + schedule.clinic.name,\r\n              address: '' + schedule.clinic.address,\r\n              doctor: '' + schedule.doctor.user.firstName,\r\n            });\r\n\r\n            clinicIdsAdded.push(clinicId);\r\n          }\r\n        });\r\n\r\n        setSchedules(formattedClinics);\r\n        setLoading(false);\r\n      })\r\n      .catch((error) => {\r\n        setIsError(true);\r\n        console.error(error);\r\n      });\r\n  }, [doctorUserIdRef.current]); // Include the doctorUserIdRef.current in the dependency array\r\n\r\n  if (loading) {\r\n    return <p>Loading...</p>;\r\n  }\r\n\r\n  if (isError) {\r\n    return <p>Error occurred while fetching data.</p>;\r\n  }\r\n\r\n\r\n  const handleEdit = () => {\r\n    console.log('Edit clicked for clinic:', );\r\n  };\r\n\r\n  const handleDelete = () => {\r\n\r\n    console.log('Delete clicked for clinic:', );\r\n  };\r\n\r\n  return (\r\n    <div className=\"info-container\" id=\"container\">\r\n      <DoctorNavbar />\r\n      <div className=\"info-container\">\r\n        <div className=\"doctor-grid\">\r\n        {schedules.map((schedule, index) => (\r\n            <ClinicCard\r\n              key={index}\r\n              clinic={schedule}\r\n              onEdit={handleEdit}\r\n              onDelete={handleDelete}\r\n            />\r\n          ))}\r\n        </div>\r\n      </div>\r\n      <DoctorFooter />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DoctorClinics;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}