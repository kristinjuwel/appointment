{"ast":null,"code":"var _jsxFileName = \"D:\\\\3rd Year 1st Sem\\\\DocClickConnect\\\\appointment\\\\src\\\\pages\\\\AppointmentPages\\\\SetAppointment.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport PatientNavBar from '../../components/PatientNavBar';\nimport PatientFooter from '../../components/PatientFooter';\nimport DoctorCalendar from '../../components/DoctorCalendar';\nimport { useParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SetAppointment = () => {\n  _s();\n  var _schedules$find, _schedules$find2, _schedules$find3;\n  const {\n    doctorId\n  } = useParams();\n  const [error, setError] = useState(null);\n  const [selectedDay, setSelectedDay] = useState('');\n  const [selectedSched, setSelectedSched] = useState('');\n  const [selectedDate, setSelectedDate] = useState('');\n  const [schedules, setSchedules] = useState([{\n    scheduleId: '',\n    clinicId: '',\n    avatar: '',\n    doctorName: '',\n    specialization: '',\n    contactNumber: '',\n    docEmail: '',\n    scheduleDay: '',\n    start: new Date(),\n    end: new Date(),\n    // 5:00 PM\n    slots: '',\n    clinicName: '',\n    address: '',\n    number: '',\n    email: ''\n  }]);\n  useEffect(() => {\n    const fetchDoctorSchedules = async () => {\n      try {\n        const response = await fetch(`http://localhost:8080/docsched/${doctorId}`);\n        if (response.ok) {\n          const data = await response.json();\n          const formattedSchedules = data.map(schedule => ({\n            scheduleId: schedule.scheduleId,\n            clinicId: schedule.clinicId,\n            avatar: schedule.doctor.user.avatar,\n            doctorName: `${schedule.doctor.user.firstName} ${schedule.doctor.user.lastName}`,\n            specialization: schedule.doctor.specialization,\n            contactNumber: schedule.doctor.user.contactNumber,\n            docEmail: schedule.doctor.user.email,\n            scheduleDay: schedule.scheduleDay,\n            start: schedule.startTime,\n            end: schedule.endTime,\n            slots: schedule.slots,\n            clinicName: schedule.clinic.name,\n            address: schedule.clinic.address,\n            number: schedule.clinic.officeNumber,\n            email: schedule.clinic.officeEmail\n          }));\n          setSchedules(formattedSchedules);\n        } else {\n          setError('Error fetching appointment');\n        }\n      } catch (error) {\n        setError('Error fetching appointment');\n      }\n    };\n    fetchDoctorSchedules();\n  }, [doctorId]);\n  const convertMilitaryToStandardTime = militaryTime => {\n    if (typeof militaryTime !== 'string' || militaryTime.length !== 8) {\n      return 'Invalid Time';\n    }\n    const [hours, minutes] = militaryTime.split(':');\n    const parsedHours = parseInt(hours, 10);\n    const period = parsedHours >= 12 ? 'PM' : 'AM';\n    const formattedHours = parsedHours % 12 || 12;\n    return `${formattedHours}:${minutes} ${period}`;\n  };\n  const getNearestDays = (selectedDay, numberOfOccurrences) => {\n    const today = new Date();\n    const daysInWeek = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];\n    const selectedDayIndex = daysInWeek.findIndex(day => day.toLowerCase() === selectedDay.toLowerCase());\n    if (selectedDayIndex === -1) {\n      return []; // Invalid selected day\n    }\n\n    const nearestDays = [];\n    let currentDate = new Date(today);\n    while (nearestDays.length < numberOfOccurrences) {\n      if (currentDate.getDay() === selectedDayIndex) {\n        nearestDays.push(new Date(currentDate));\n      }\n      currentDate.setDate(currentDate.getDate() + 1);\n    }\n    return nearestDays;\n  };\n  const nearestDays = getNearestDays(selectedDay, 5);\n  const uniqueClinics = [...new Set(schedules.map(schedule => schedule.clinicName))];\n  const [selectedClinicId, setSelectedClinicId] = useState('');\n  const handleChangeClinic = clinicName => {\n    const selectedClinic = schedules.find(schedule => schedule.clinicName === clinicName);\n    setSelectedClinicId((selectedClinic === null || selectedClinic === void 0 ? void 0 : selectedClinic.clinicId) || '');\n    setSelectedDay('');\n    setSelectedDate('');\n  };\n  const handleBookAppointment = () => {\n    // Implement the logic to book an appointment using the selected values\n    console.log('Clinic ID:', selectedClinicId);\n    console.log('Selected Day:', selectedDay);\n    console.log('Selected Timeslot:', selectedSched);\n    console.log('Selected Date:', selectedDate);\n  };\n  useEffect(() => {\n    console.log('Clinic ID:', selectedClinicId);\n    console.log('Selected Day:', selectedDay);\n    console.log('Selected Timeslot:', selectedSched);\n    console.log('Selected Date:', selectedDate);\n  }, [selectedClinicId, selectedDay, selectedSched, selectedDate]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(PatientNavBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"flex\",\n        margin: \"auto\",\n        width: \"100vw\",\n        justifyContent: \"center\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(DoctorCalendar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginLeft: \"30px\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: [\"Dr. \", schedules[0].doctorName]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [\"Specialization: \", schedules[0].specialization]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [\"Contact Number: \", schedules[0].contactNumber]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [\"Email Address: \", schedules[0].docEmail]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n          children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"h2\", {\n                style: {\n                  color: \"#0094d4\"\n                },\n                children: \"Clinic: \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 155,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 154,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"select\", {\n                name: \"clinic\",\n                id: \"clinic\",\n                style: {\n                  width: \"250px\",\n                  fontSize: \"1.5rem\",\n                  fontWeight: \"bold\",\n                  color: \"#0094d4\"\n                },\n                onChange: e => handleChangeClinic(e.target.value),\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"\",\n                  children: \"Select Clinic\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 169,\n                  columnNumber: 19\n                }, this), uniqueClinics.map((clinicName, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: clinicName,\n                  children: clinicName\n                }, index, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 171,\n                  columnNumber: 21\n                }, this))]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 158,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 157,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"h5\", {\n                children: \"Address:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 179,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 179,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: (_schedules$find = schedules.find(schedule => schedule.clinicId === selectedClinicId)) === null || _schedules$find === void 0 ? void 0 : _schedules$find.address\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 180,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"h5\", {\n                children: \"Contact Number:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 183,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 183,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: (_schedules$find2 = schedules.find(schedule => schedule.clinicId === selectedClinicId)) === null || _schedules$find2 === void 0 ? void 0 : _schedules$find2.number\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 184,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"h5\", {\n                children: \"Email Address:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 187,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 187,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: (_schedules$find3 = schedules.find(schedule => schedule.clinicId === selectedClinicId)) === null || _schedules$find3 === void 0 ? void 0 : _schedules$find3.email\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 188,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              style: {\n                width: \"150px\"\n              },\n              children: \"Day: \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 191,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"select\", {\n                name: \"sched\",\n                id: `day-${selectedClinicId}`,\n                style: {\n                  width: \"250px\"\n                },\n                value: selectedDay,\n                onChange: e => {\n                  setSelectedDay(e.target.value);\n                  setSelectedSched('');\n                  setSelectedDate('');\n                  console.log(\"Selected Day changed:\", e.target.value);\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"\",\n                  children: \"Select Day\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 206,\n                  columnNumber: 19\n                }, this), [...new Set(schedules.filter(schedule => schedule.clinicId === selectedClinicId).map(schedule => schedule.scheduleDay))].map(scheduleDay => /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: scheduleDay,\n                  children: scheduleDay\n                }, `${selectedClinicId}-${scheduleDay}`, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 212,\n                  columnNumber: 23\n                }, this))]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 193,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 192,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              style: {\n                width: \"150px\"\n              },\n              children: \"Timeslot: \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 221,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"select\", {\n                name: \"timeslot\",\n                id: `timeslot-${selectedClinicId}`,\n                style: {\n                  width: \"250px\"\n                },\n                value: selectedSched,\n                onChange: e => {\n                  const selectedTimeslot = e.target.value;\n                  setSelectedSched(selectedTimeslot);\n                  console.log('Selected Schedule ID:', selectedTimeslot);\n                },\n                children: schedules.filter(schedule => schedule.clinicId === selectedClinicId && schedule.scheduleDay === selectedDay).map(schedule => /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: schedule.scheduleId,\n                  children: [convertMilitaryToStandardTime(schedule.start), \" - \", convertMilitaryToStandardTime(schedule.end)]\n                }, schedule.scheduleId, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 237,\n                  columnNumber: 23\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 223,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 222,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 220,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              style: {\n                width: \"150px\"\n              },\n              children: \"Date: \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 248,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"select\", {\n                name: \"sched\",\n                id: `sched-${selectedClinicId}`,\n                style: {\n                  width: \"250px\"\n                },\n                value: selectedDate,\n                onChange: e => {\n                  const selectedDateString = e.target.value;\n                  // Save the date in 'yyyy-mm-dd' format to selectedDate\n                  setSelectedDate(selectedDateString);\n                  console.log('Selected Date:', selectedDateString);\n                },\n                children: schedules.filter(schedule => schedule.clinicId === selectedClinicId).flatMap(schedule => nearestDays.map(date => /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: date.toISOString().split('T')[0],\n                  children: date.toLocaleDateString('en-US', {\n                    year: 'numeric',\n                    month: 'long',\n                    day: 'numeric'\n                  })\n                }, `${selectedClinicId}-${schedule.scheduleId}-${date.toISOString()}`, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 266,\n                  columnNumber: 31\n                }, this)))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 250,\n                columnNumber: 15\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 249,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 247,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: /*#__PURE__*/_jsxDEV(\"td\", {\n              colSpan: 2,\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                style: {\n                  marginTop: \"10px\",\n                  borderRadius: 0,\n                  width: \"100%\"\n                },\n                children: \"Book an Appointment\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 282,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 282,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 282,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Existing Appointments \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 285,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n          children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              rowSpan: 2,\n              width: 200,\n              style: {\n                border: \"1px solid lightgray\",\n                backgroundColor: \"lightgray\",\n                paddingLeft: \"10px\"\n              },\n              children: [\"11/06/23 MONDAY \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 288,\n                columnNumber: 152\n              }, this), \" 2:00-5:00 PM\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 288,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(Link, {\n                to: \"/patresched\",\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  style: {\n                    borderRadius: 0,\n                    width: \"200px\"\n                  },\n                  children: \"Reschedule\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 289,\n                  columnNumber: 42\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 289,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 289,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 287,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"cancel\",\n                children: \"Cancel\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 291,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 291,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 291,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 286,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(PatientFooter, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 295,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 140,\n    columnNumber: 5\n  }, this);\n};\n_s(SetAppointment, \"CmyoXRJTqKvTDTN9+5rdBxRlI/k=\", false, function () {\n  return [useParams];\n});\n_c = SetAppointment;\nexport default SetAppointment;\nvar _c;\n$RefreshReg$(_c, \"SetAppointment\");","map":{"version":3,"names":["React","useState","useEffect","Link","PatientNavBar","PatientFooter","DoctorCalendar","useParams","jsxDEV","_jsxDEV","SetAppointment","_s","_schedules$find","_schedules$find2","_schedules$find3","doctorId","error","setError","selectedDay","setSelectedDay","selectedSched","setSelectedSched","selectedDate","setSelectedDate","schedules","setSchedules","scheduleId","clinicId","avatar","doctorName","specialization","contactNumber","docEmail","scheduleDay","start","Date","end","slots","clinicName","address","number","email","fetchDoctorSchedules","response","fetch","ok","data","json","formattedSchedules","map","schedule","doctor","user","firstName","lastName","startTime","endTime","clinic","name","officeNumber","officeEmail","convertMilitaryToStandardTime","militaryTime","length","hours","minutes","split","parsedHours","parseInt","period","formattedHours","getNearestDays","numberOfOccurrences","today","daysInWeek","selectedDayIndex","findIndex","day","toLowerCase","nearestDays","currentDate","getDay","push","setDate","getDate","uniqueClinics","Set","selectedClinicId","setSelectedClinicId","handleChangeClinic","selectedClinic","find","handleBookAppointment","console","log","children","fileName","_jsxFileName","lineNumber","columnNumber","style","display","margin","width","justifyContent","marginLeft","color","id","fontSize","fontWeight","onChange","e","target","value","index","filter","selectedTimeslot","selectedDateString","flatMap","date","toISOString","toLocaleDateString","year","month","colSpan","marginTop","borderRadius","rowSpan","border","backgroundColor","paddingLeft","to","className","_c","$RefreshReg$"],"sources":["D:/3rd Year 1st Sem/DocClickConnect/appointment/src/pages/AppointmentPages/SetAppointment.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport PatientNavBar from '../../components/PatientNavBar';\nimport PatientFooter from '../../components/PatientFooter';\nimport DoctorCalendar from '../../components/DoctorCalendar';\nimport { useParams } from 'react-router-dom';\n\nconst SetAppointment = () => {\n  const { doctorId } = useParams();\n  const [error, setError] = useState(null);\n  const [selectedDay, setSelectedDay] = useState('');\n  const [selectedSched, setSelectedSched] = useState('');\n  const [selectedDate, setSelectedDate] = useState('');\n  const [schedules, setSchedules] = useState([\n    {\n      scheduleId: '',\n      clinicId: '',\n      avatar: '',\n      doctorName: '',\n      specialization: '',\n      contactNumber: '',\n      docEmail: '',\n      scheduleDay: '',\n      start: new Date(),\n      end: new Date(),  // 5:00 PM\n      slots: '',\n      clinicName: '',\n      address: '',\n      number: '',\n      email: ''\n    },\n  ]);\n\n  useEffect(() => {\n    const fetchDoctorSchedules = async () => {\n      try {\n        const response = await fetch(`http://localhost:8080/docsched/${doctorId}`);\n\n        if (response.ok) {\n          const data = await response.json();\n\n          const formattedSchedules = data.map(schedule => ({\n            scheduleId: schedule.scheduleId,\n            clinicId: schedule.clinicId,\n            avatar: schedule.doctor.user.avatar,\n            doctorName: `${schedule.doctor.user.firstName} ${schedule.doctor.user.lastName}`,\n            specialization: schedule.doctor.specialization,\n            contactNumber: schedule.doctor.user.contactNumber,\n            docEmail: schedule.doctor.user.email,\n            scheduleDay: schedule.scheduleDay,\n            start: schedule.startTime,\n            end: schedule.endTime,\n            slots: schedule.slots,\n            clinicName: schedule.clinic.name,\n            address: schedule.clinic.address,\n            number: schedule.clinic.officeNumber,\n            email: schedule.clinic.officeEmail\n          }));\n\n          setSchedules(formattedSchedules);\n\n        } else {\n          setError('Error fetching appointment');\n        }\n      } catch (error) {\n        setError('Error fetching appointment');\n      }\n    };\n\n    fetchDoctorSchedules();\n  }, [doctorId]);\n\n  const convertMilitaryToStandardTime = (militaryTime) => {\n    if (typeof militaryTime !== 'string' || militaryTime.length !== 8) {\n      return 'Invalid Time';\n    }\n\n    const [hours, minutes] = militaryTime.split(':');\n    const parsedHours = parseInt(hours, 10);\n    const period = parsedHours >= 12 ? 'PM' : 'AM';\n    const formattedHours = parsedHours % 12 || 12;\n    return `${formattedHours}:${minutes} ${period}`;\n  };\n\n\n\n\n\n\n  const getNearestDays = (selectedDay, numberOfOccurrences) => {\n    const today = new Date();\n    const daysInWeek = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];\n    const selectedDayIndex = daysInWeek.findIndex(day => day.toLowerCase() === selectedDay.toLowerCase());\n\n    if (selectedDayIndex === -1) {\n      return []; // Invalid selected day\n    }\n\n    const nearestDays = [];\n    let currentDate = new Date(today);\n\n    while (nearestDays.length < numberOfOccurrences) {\n      if (currentDate.getDay() === selectedDayIndex) {\n        nearestDays.push(new Date(currentDate));\n      }\n      currentDate.setDate(currentDate.getDate() + 1);\n    }\n\n    return nearestDays;\n  };\n\n  const nearestDays = getNearestDays(selectedDay, 5);\n  const uniqueClinics = [...new Set(schedules.map(schedule => schedule.clinicName))];\n  const [selectedClinicId, setSelectedClinicId] = useState('');\n\n\n  const handleChangeClinic = (clinicName) => {\n    const selectedClinic = schedules.find(schedule => schedule.clinicName === clinicName);\n    setSelectedClinicId(selectedClinic?.clinicId || '');\n    setSelectedDay('');\n    setSelectedDate('');\n\n  };\n\n  const handleBookAppointment = () => {\n    // Implement the logic to book an appointment using the selected values\n    console.log('Clinic ID:', selectedClinicId);\n    console.log('Selected Day:', selectedDay);\n    console.log('Selected Timeslot:', selectedSched);\n    console.log('Selected Date:', selectedDate);\n  };\n  useEffect(() => {\n    console.log('Clinic ID:', selectedClinicId);\n    console.log('Selected Day:', selectedDay);\n    console.log('Selected Timeslot:', selectedSched);\n    console.log('Selected Date:', selectedDate);\n  }, [selectedClinicId, selectedDay, selectedSched, selectedDate]);\n  \n  return (\n    <div>\n      <PatientNavBar />\n      <div style={{ display: \"flex\", margin: \"auto\", width: \"100vw\", justifyContent: \"center\" }}>\n        <DoctorCalendar />\n\n        <div style={{ marginLeft: \"30px\" }}>\n          <h1>Dr. {schedules[0].doctorName}</h1>\n          <h2>Specialization: {schedules[0].specialization}</h2>\n          <h3>Contact Number: {schedules[0].contactNumber}</h3>\n          <h3>Email Address: {schedules[0].docEmail}</h3>\n          <br />\n\n          <table>\n            <tr>\n              <td>\n                <h2 style={{ color: \"#0094d4\" }}>Clinic: </h2>\n              </td>\n              <td>\n                <select\n                  name=\"clinic\"\n                  id=\"clinic\"\n                  style={{\n                    width: \"250px\",\n                    fontSize: \"1.5rem\",\n                    fontWeight: \"bold\",\n                    color: \"#0094d4\",\n                  }}\n                  onChange={(e) => handleChangeClinic(e.target.value)}\n                >\n                  <option value=\"\">Select Clinic</option>\n                  {uniqueClinics.map((clinicName, index) => (\n                    <option key={index} value={clinicName}>\n                      {clinicName}\n                    </option>\n                  ))}\n                </select>\n              </td>\n            </tr>\n            <tr>\n              <td><h5>Address:</h5></td>\n              <td>{schedules.find(schedule => schedule.clinicId === selectedClinicId)?.address}</td>\n            </tr>\n            <tr>\n              <td><h5>Contact Number:</h5></td>\n              <td>{schedules.find(schedule => schedule.clinicId === selectedClinicId)?.number}</td>\n            </tr>\n            <tr>\n              <td><h5>Email Address:</h5></td>\n              <td>{schedules.find(schedule => schedule.clinicId === selectedClinicId)?.email}</td>\n            </tr>\n            <tr>\n              <td style={{ width: \"150px\" }}>Day: </td>\n              <td>\n                <select\n                  name=\"sched\"\n                  id={`day-${selectedClinicId}`}\n                  style={{ width: \"250px\" }}\n                  value={selectedDay}\n                  onChange={(e) => {\n                    setSelectedDay(e.target.value);\n                    setSelectedSched('');\n                    setSelectedDate('');\n                    console.log(\"Selected Day changed:\", e.target.value);\n                  }}\n                >\n                  {/* Initial blank option */}\n                  <option value=\"\">Select Day</option>\n                  {/* Options for the selected clinic's unique days */}\n                  {[...new Set(schedules\n                    .filter(schedule => schedule.clinicId === selectedClinicId)\n                    .map(schedule => schedule.scheduleDay))]\n                    .map(scheduleDay => (\n                      <option key={`${selectedClinicId}-${scheduleDay}`} value={scheduleDay}>\n                        {scheduleDay}\n                      </option>\n                    ))}\n                </select>\n\n              </td>\n            </tr>\n            <tr>\n              <td style={{ width: \"150px\" }}>Timeslot: </td>\n              <td>\n                <select\n                  name=\"timeslot\"\n                  id={`timeslot-${selectedClinicId}`}\n                  style={{ width: \"250px\" }}\n                  value={selectedSched}\n                  onChange={(e) => {\n                    const selectedTimeslot = e.target.value;\n                    setSelectedSched(selectedTimeslot);\n                    console.log('Selected Schedule ID:', selectedTimeslot);\n                  }}\n                >\n                  {schedules\n                    .filter(schedule => schedule.clinicId === selectedClinicId && schedule.scheduleDay === selectedDay)\n                    .map(schedule => (\n                      <option key={schedule.scheduleId} value={schedule.scheduleId}>\n                        {convertMilitaryToStandardTime(schedule.start)} - {convertMilitaryToStandardTime(schedule.end)}\n                      </option>\n                    ))}\n                </select>\n\n              </td>\n            </tr>\n\n            {/* autogenerated dapat */}\n            <tr>\n              <td style={{ width: \"150px\" }}>Date: </td>\n              <td>\n              <select\n                          name=\"sched\"\n                          id={`sched-${selectedClinicId}`}\n                          style={{ width: \"250px\" }}\n                          value={selectedDate}\n                          onChange={(e) => {\n                            const selectedDateString = e.target.value;\n                            // Save the date in 'yyyy-mm-dd' format to selectedDate\n                            setSelectedDate(selectedDateString);\n                            console.log('Selected Date:', selectedDateString);\n                          }}\n                        >\n                          {/* Options for the selected clinic's nearest days */}\n                          {schedules\n                            .filter(schedule => schedule.clinicId === selectedClinicId)\n                            .flatMap(schedule => nearestDays.map(date => (\n                              <option\n                                key={`${selectedClinicId}-${schedule.scheduleId}-${date.toISOString()}`}\n                                value={date.toISOString().split('T')[0]}\n                              >\n                                {date.toLocaleDateString('en-US', {\n                                  year: 'numeric',\n                                  month: 'long',\n                                  day: 'numeric',\n                                })}\n                              </option>\n\n                            )))}\n                        </select>\n\n              </td>\n            </tr>\n            <tr><td colSpan={2}><button style={{ marginTop: \"10px\", borderRadius: 0, width: \"100%\" }}>Book an Appointment</button></td></tr>\n          </table>\n\n          <h1>Existing Appointments </h1>\n          <table>\n            <tr>\n              <td rowSpan={2} width={200} style={{ border: \"1px solid lightgray\", backgroundColor: \"lightgray\", paddingLeft: \"10px\" }}>11/06/23 MONDAY <br /> 2:00-5:00 PM</td>\n              <td><Link to=\"/patresched\"><button style={{ borderRadius: 0, width: \"200px\" }}>Reschedule</button></Link></td>\n            </tr>\n            <tr><td><button className='cancel'>Cancel</button></td></tr>\n          </table>\n        </div>\n      </div>\n      <PatientFooter />\n    </div>\n  );\n};\n\nexport default SetAppointment;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}