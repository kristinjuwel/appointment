{"ast":null,"code":"var _jsxFileName = \"D:\\\\3rd Year 1st Sem\\\\DocClickConnect\\\\appointment\\\\src\\\\pages\\\\PatientPages\\\\PatientAppointment.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport PatientNavBar from '../../components/PatientNavBar';\nimport PatientFooter from '../../components/PatientFooter';\nimport { Calendar, dateFnsLocalizer } from 'react-big-calendar';\nimport format from 'date-fns/format';\nimport parse from 'date-fns/parse';\nimport startOfWeek from 'date-fns/startOfWeek';\nimport getDay from 'date-fns/getDay';\nimport \"react-big-calendar/lib/css/react-big-calendar.css\";\nimport { Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PatientAppointment = () => {\n  _s();\n  const [appointments, setAppointments] = useState([{\n    title: '',\n    clinic: '',\n    address: '',\n    number: '',\n    start: new Date(),\n    end: new Date(),\n    // 5:00 PM\n    appointmentId: '',\n    appointmentStatus: ''\n  }]);\n  useEffect(() => {\n    // Replace 'http://localhost:8080' with your actual API URL\n    fetch('http://localhost:8080/checkLoggedInPatient').then(response => {\n      if (response.ok) {\n        return response.json();\n      }\n      throw new Error('Network response was not ok');\n    }).then(data => {\n      // Once you have the patientUserId, make another request to get appointments\n      fetch(`http://localhost:8080/appointments?patientUserId=${data}`).then(appointmentsResponse => {\n        if (appointmentsResponse.ok) {\n          return appointmentsResponse.json();\n        }\n        throw new Error('Network response was not ok');\n      }).then(appointmentsData => {\n        const formattedAppointments = appointmentsData.map(appointment => {\n          // Extract date and time components\n          const [year, month, day] = appointment.scheduleDate.split('-').map(Number);\n          const [hours, minutes] = appointment.startTime.split(':').map(Number);\n          const [hours2, minutes2] = appointment.endTime.split(':').map(Number);\n\n          // Create Date objects for start and end times\n          const startDate = new Date(year, month - 1, day, hours, minutes);\n          const endDate = new Date(year, month - 1, day, hours2, minutes2);\n\n          // Create an appointment object\n          return {\n            title: 'Dr. ' + appointment.doctorName,\n            clinic: appointment.clinicName,\n            address: appointment.address,\n            number: appointment.clinic.officeNumber,\n            start: startDate,\n            end: endDate,\n            appointmentId: appointment.transactionNo,\n            appointmentStatus: appointment.status\n          };\n        });\n        setAppointments(formattedAppointments);\n      }).catch(error => {\n        // Handle errors\n        console.error(error);\n      });\n    }).catch(error => {\n      console.error('Error:', error);\n    });\n  }, []);\n  const locales = {\n    \"en-US\": require(\"date-fns/locale/en-US\")\n  };\n  const localizer = dateFnsLocalizer({\n    format,\n    parse,\n    startOfWeek,\n    getDay,\n    locales\n  });\n  const handleCancel = async appointmentId => {\n    try {\n      // Find the appointment with the provided appointmentId\n      const appointmentToCancel = appointments.find(appointment => appointment.appointmentId === appointmentId);\n      if (!appointmentToCancel) {\n        // Handle the case where the appointment with the given ID is not found\n        console.error('Appointment not found');\n        return;\n      }\n\n      // Check if the appointment is already cancelled\n      if (appointmentToCancel.appointmentStatus === 'Cancelled') {\n        // Display error message as a pop-up\n        window.alert('Appointment is already cancelled');\n        return;\n      }\n\n      // Proceed with the request to cancel the appointment\n      const response = await fetch(`http://localhost:8080/appointmentChange/${appointmentId}?newStatus=Cancelled`, {\n        method: 'PUT'\n      });\n      if (response.ok) {\n        console.log('Appointment cancelled successfully');\n        window.location.reload();\n      } else {\n        console.error('Error cancelling appointment');\n      }\n    } catch (error) {\n      console.error('Error cancelling appointment:', error);\n    }\n  };\n  const handleReschedule = async appointmentId => {\n    const appointmentToCancel = appointments.find(appointment => appointment.appointmentId === appointmentId);\n    if (!appointmentToCancel) {\n      // Handle the case where the appointment with the given ID is not found\n      console.error('Appointment not found');\n      return;\n    }\n\n    // Check if the appointment is already cancelled\n    if (appointmentToCancel.appointmentStatus === 'Cancelled') {\n      // Display error message as a pop-up\n      window.alert('Appointment is already cancelled. It cannot be rescheduled.');\n      return;\n    }\n    window.location.href = `/patresched/${appointmentId}`;\n  };\n  const CustomEvent = ({\n    event\n  }) => /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      margin: '5px 0',\n      whiteSpace: 'nowrap',\n      overflow: 'hidden',\n      textOverflow: 'ellipsis'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n      style: {\n        margin: '0px 0',\n        overflow: 'hidden',\n        textOverflow: 'ellipsis',\n        whiteSpace: 'normal'\n      },\n      children: event.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        margin: '0px 0',\n        overflow: 'hidden',\n        textOverflow: 'ellipsis',\n        whiteSpace: 'normal'\n      },\n      children: [\"Clinic: \", event.clinic]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        margin: '0px 0',\n        overflow: 'hidden',\n        textOverflow: 'ellipsis',\n        whiteSpace: 'normal'\n      },\n      children: [\"Status: \", event.appointmentStatus]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 147,\n    columnNumber: 5\n  }, this);\n  const getBackgroundColor = status => {\n    switch (status) {\n      case 'Cancelled':\n        return '#FCA694';\n      case 'Rescheduled':\n        return '#FFB97F';\n      case 'Scheduled by Patient':\n        return '#FFFFDC';\n      case 'Approved by Doctor':\n        return '#BAFFC4';\n      default:\n        return 'lightgray';\n    }\n  };\n  const getBorderColor = status => {\n    switch (status) {\n      case 'Cancelled':\n        return '#A41D00';\n      case 'Rescheduled':\n        return '#FF7400';\n      case 'Scheduled by Patient':\n        return '#F8F547';\n      case 'Approved by Doctor':\n        return '#48DE66';\n      default:\n        return 'lightgray';\n    }\n  };\n  useEffect(() => {\n    const sortAppointments = () => {\n      const statusOrder = {\n        'Cancelled': 3,\n        'Rescheduled': 2,\n        'Scheduled by Patient': 2,\n        'Approved by Doctor': 1\n      };\n      const sorted = [...appointments].sort((a, b) => statusOrder[a.appointmentStatus] - statusOrder[b.appointmentStatus]);\n      setAppointments(sorted);\n    };\n    sortAppointments();\n    setAppointments;\n  }, [appointments]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(PatientNavBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"flex\",\n        margin: \"auto\",\n        width: \"100vw\",\n        justifyContent: \"center\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(Calendar, {\n        localizer: localizer,\n        events: appointments,\n        startAccessor: \"start\",\n        endAccessor: \"end\",\n        style: {\n          height: 800,\n          width: '70%'\n        },\n        components: {\n          event: CustomEvent // Use the custom Event component\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginLeft: \"30px\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"My Appointments\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            overflowY: 'auto',\n            maxHeight: '720px'\n          },\n          children: appointments.filter(appointment => appointment).length > 0 ?\n          // Display appointments\n          appointments.map((appointment, index) => /*#__PURE__*/_jsxDEV(\"table\", {\n            children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                rowSpan: 2,\n                width: 200,\n                style: {\n                  border: '3px dashed',\n                  borderRadius: '10px',\n                  borderColor: getBorderColor(appointment.appointmentStatus),\n                  backgroundColor: getBackgroundColor(appointment.appointmentStatus),\n                  paddingLeft: '10px'\n                },\n                children: [appointment.title, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 243,\n                  columnNumber: 43\n                }, this), appointment.clinic, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 244,\n                  columnNumber: 44\n                }, this), appointment.address, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 245,\n                  columnNumber: 45\n                }, this), appointment.number, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 246,\n                  columnNumber: 44\n                }, this), format(appointment.start, 'MM/dd/yyyy EEEE'), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 247,\n                  columnNumber: 70\n                }, this), format(appointment.start, 'h:mm a'), \" - \", format(appointment.end, 'h:mm a'), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 248,\n                  columnNumber: 99\n                }, this), appointment.appointmentStatus, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 249,\n                  columnNumber: 55\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 232,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  style: {\n                    borderRadius: 0,\n                    width: \"100%\",\n                    height: \"6vh\"\n                  },\n                  onClick: () => handleReschedule(appointment.appointmentId),\n                  children: \"Reschedule\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 252,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 252,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 231,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"cancel\",\n                  style: {\n                    height: \"6vh\"\n                  },\n                  onClick: () => handleCancel(appointment.appointmentId),\n                  type: \"submit\",\n                  children: \"Cancel\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 255,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 255,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 254,\n              columnNumber: 19\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 230,\n            columnNumber: 17\n          }, this)) :\n          /*#__PURE__*/\n          // Display a message if there are no appointments with appointmentStatus === \"Approved by Doctor\"\n          _jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"You have no appointments yet.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 264,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Link, {\n              to: \"/docsearch\",\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                children: \"Set an appointment now\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 266,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 265,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 263,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(PatientFooter, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 275,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 209,\n    columnNumber: 5\n  }, this);\n};\n_s(PatientAppointment, \"M54SLbqoOqMlu0VBoxmbc4hluTA=\");\n_c = PatientAppointment;\nexport default PatientAppointment;\nvar _c;\n$RefreshReg$(_c, \"PatientAppointment\");","map":{"version":3,"names":["React","useState","useEffect","PatientNavBar","PatientFooter","Calendar","dateFnsLocalizer","format","parse","startOfWeek","getDay","Link","jsxDEV","_jsxDEV","PatientAppointment","_s","appointments","setAppointments","title","clinic","address","number","start","Date","end","appointmentId","appointmentStatus","fetch","then","response","ok","json","Error","data","appointmentsResponse","appointmentsData","formattedAppointments","map","appointment","year","month","day","scheduleDate","split","Number","hours","minutes","startTime","hours2","minutes2","endTime","startDate","endDate","doctorName","clinicName","officeNumber","transactionNo","status","catch","error","console","locales","require","localizer","handleCancel","appointmentToCancel","find","window","alert","method","log","location","reload","handleReschedule","href","CustomEvent","event","style","margin","whiteSpace","overflow","textOverflow","children","fileName","_jsxFileName","lineNumber","columnNumber","getBackgroundColor","getBorderColor","sortAppointments","statusOrder","sorted","sort","a","b","display","width","justifyContent","events","startAccessor","endAccessor","height","components","marginLeft","overflowY","maxHeight","filter","length","index","rowSpan","border","borderRadius","borderColor","backgroundColor","paddingLeft","onClick","className","type","to","_c","$RefreshReg$"],"sources":["D:/3rd Year 1st Sem/DocClickConnect/appointment/src/pages/PatientPages/PatientAppointment.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport PatientNavBar from '../../components/PatientNavBar';\nimport PatientFooter from '../../components/PatientFooter';\nimport { Calendar, dateFnsLocalizer } from 'react-big-calendar';\nimport format from 'date-fns/format';\nimport parse from 'date-fns/parse';\nimport startOfWeek from 'date-fns/startOfWeek';\nimport getDay from 'date-fns/getDay';\nimport \"react-big-calendar/lib/css/react-big-calendar.css\";\nimport { Link } from 'react-router-dom';\n\nconst PatientAppointment = () => {\n  const [appointments, setAppointments] = useState([\n    {\n      title: '',\n      clinic: '',\n      address: '',\n      number: '',\n      start: new Date(),\n      end: new Date(),  // 5:00 PM\n      appointmentId: '',\n      appointmentStatus: ''\n    },\n  ]);\n  useEffect(() => {\n    // Replace 'http://localhost:8080' with your actual API URL\n    fetch('http://localhost:8080/checkLoggedInPatient')\n      .then((response) => {\n        if (response.ok) {\n          return response.json();\n        }\n        throw new Error('Network response was not ok');\n      })\n      .then((data) => {\n        // Once you have the patientUserId, make another request to get appointments\n        fetch(`http://localhost:8080/appointments?patientUserId=${data}`)\n          .then((appointmentsResponse) => {\n            if (appointmentsResponse.ok) {\n              return appointmentsResponse.json();\n            }\n            throw new Error('Network response was not ok');\n          })\n          .then((appointmentsData) => {\n            const formattedAppointments = appointmentsData.map((appointment) => {\n              // Extract date and time components\n              const [year, month, day] = appointment.scheduleDate.split('-').map(Number);\n              const [hours, minutes] = appointment.startTime.split(':').map(Number);\n              const [hours2, minutes2] = appointment.endTime.split(':').map(Number);\n\n              // Create Date objects for start and end times\n              const startDate = new Date(year, month - 1, day, hours, minutes);\n              const endDate = new Date(year, month - 1, day, hours2, minutes2);\n\n              // Create an appointment object\n              return {\n                title: 'Dr. ' + appointment.doctorName,\n                clinic: appointment.clinicName,\n                address: appointment.address,\n                number: appointment.clinic.officeNumber,\n                start: startDate,\n                end: endDate,\n                appointmentId: appointment.transactionNo,\n                appointmentStatus: appointment.status\n              };\n            });\n\n            setAppointments(formattedAppointments);\n          })\n          .catch((error) => {\n            // Handle errors\n            console.error(error);\n          });\n\n      })\n      .catch((error) => {\n        console.error('Error:', error);\n      });\n  }, []);\n\n  const locales = {\n    \"en-US\": require(\"date-fns/locale/en-US\")\n  }\n\n  const localizer = dateFnsLocalizer({\n    format,\n    parse,\n    startOfWeek,\n    getDay,\n    locales\n  })\n\n  const handleCancel = async (appointmentId) => {\n    try {\n      // Find the appointment with the provided appointmentId\n      const appointmentToCancel = appointments.find(appointment => appointment.appointmentId === appointmentId);\n  \n      if (!appointmentToCancel) {\n        // Handle the case where the appointment with the given ID is not found\n        console.error('Appointment not found');\n        return;\n      }\n  \n      // Check if the appointment is already cancelled\n      if (appointmentToCancel.appointmentStatus === 'Cancelled') {\n        // Display error message as a pop-up\n        window.alert('Appointment is already cancelled');\n        return;\n      }\n  \n      // Proceed with the request to cancel the appointment\n      const response = await fetch(`http://localhost:8080/appointmentChange/${appointmentId}?newStatus=Cancelled`, {\n        method: 'PUT',\n      });\n  \n      if (response.ok) {\n        console.log('Appointment cancelled successfully');\n        window.location.reload();\n      } else {\n        console.error('Error cancelling appointment');\n      }\n    } catch (error) {\n      console.error('Error cancelling appointment:', error);\n    }\n  };\n  \n  \n\n  const handleReschedule = async (appointmentId) => {\n    const appointmentToCancel = appointments.find(appointment => appointment.appointmentId === appointmentId);\n  \n    if (!appointmentToCancel) {\n      // Handle the case where the appointment with the given ID is not found\n      console.error('Appointment not found');\n      return;\n    }\n\n    // Check if the appointment is already cancelled\n    if (appointmentToCancel.appointmentStatus === 'Cancelled') {\n      // Display error message as a pop-up\n      window.alert('Appointment is already cancelled. It cannot be rescheduled.');\n      return;\n    }\n    window.location.href = `/patresched/${appointmentId}`;\n  };\n\n  const CustomEvent = ({ event }) => (\n    <div style={{ margin: '5px 0', whiteSpace: 'nowrap', overflow: 'hidden', textOverflow: 'ellipsis' }}>\n      <strong style={{ margin: '0px 0', overflow: 'hidden', textOverflow: 'ellipsis', whiteSpace: 'normal' }}>{event.title}</strong>\n      <p style={{ margin: '0px 0', overflow: 'hidden', textOverflow: 'ellipsis', whiteSpace: 'normal' }}>\n        Clinic: {event.clinic}\n      </p>\n      <p style={{ margin: '0px 0', overflow: 'hidden', textOverflow: 'ellipsis', whiteSpace: 'normal' }}>\n        Status: {event.appointmentStatus}\n      </p>\n    </div>\n  );\n\n\n  const getBackgroundColor = (status) => {\n    switch (status) {\n      case 'Cancelled':\n        return '#FCA694';\n      case 'Rescheduled':\n        return '#FFB97F';\n      case 'Scheduled by Patient':\n        return '#FFFFDC';\n      case 'Approved by Doctor':\n        return '#BAFFC4';\n      default:\n        return 'lightgray';\n    }\n  };\n\n  const getBorderColor = (status) => {\n    switch (status) {\n      case 'Cancelled':\n        return '#A41D00';\n      case 'Rescheduled':\n        return '#FF7400';\n      case 'Scheduled by Patient':\n        return '#F8F547';\n      case 'Approved by Doctor':\n        return '#48DE66';\n      default:\n        return 'lightgray';\n    }\n  };\n\n\n\n  useEffect(() => {\n    const sortAppointments = () => {\n      const statusOrder = {\n        'Cancelled': 3,\n        'Rescheduled': 2,\n        'Scheduled by Patient': 2,\n        'Approved by Doctor': 1,\n      };\n\n      const sorted = [...appointments].sort((a, b) => statusOrder[a.appointmentStatus] - statusOrder[b.appointmentStatus]);\n      setAppointments(sorted);\n    };\n\n    sortAppointments();\n    setAppointments\n  }, [appointments]);\n  \n  return (\n    <div>\n      <PatientNavBar />\n      <div style={{ display: \"flex\", margin: \"auto\", width: \"100vw\", justifyContent: \"center\" }}>\n        <Calendar\n          localizer={localizer}\n          events={appointments}\n          startAccessor=\"start\"\n          endAccessor=\"end\"\n          style={{ height: 800, width: '70%' }}\n          components={{\n            event: CustomEvent, // Use the custom Event component\n          }}\n        />\n\n\n        <div style={{ marginLeft: \"30px\" }}>\n          <h1>My Appointments</h1>\n          <div style={{ overflowY: 'auto', maxHeight: '720px' }}>\n            {appointments.filter(appointment => appointment).length > 0 ? (\n              // Display appointments\n              appointments.map((appointment, index) => ((\n                <table key={index}>\n                  <tr>\n                    <td\n                      rowSpan={2}\n                      width={200}\n                      style={{\n                        border: '3px dashed',\n                        borderRadius: '10px', \n                        borderColor: getBorderColor(appointment.appointmentStatus),\n                        backgroundColor: getBackgroundColor(appointment.appointmentStatus),\n                        paddingLeft: '10px',                  \n                      }}\n                    >\n                      {appointment.title} <br />\n                      {appointment.clinic} <br />\n                      {appointment.address} <br />\n                      {appointment.number} <br />\n                      {format(appointment.start, 'MM/dd/yyyy EEEE')} <br />\n                      {format(appointment.start, 'h:mm a')} - {format(appointment.end, 'h:mm a')} <br />\n                      {appointment.appointmentStatus} <br />\n                    </td>\n\n                    <td><button style={{ borderRadius: 0, width: \"100%\", height: \"6vh\" }} onClick={() => handleReschedule(appointment.appointmentId)}>Reschedule</button></td>\n                  </tr>\n                  <tr>\n                    <td><button className='cancel' style={{ height: \"6vh\" }} onClick={() => handleCancel(appointment.appointmentId)} type=\"submit\">Cancel</button></td>\n                    \n                  </tr>\n                </table>\n              )\n              ))\n            ) : (\n              // Display a message if there are no appointments with appointmentStatus === \"Approved by Doctor\"\n              <div>\n                <p>You have no appointments yet.</p>\n                <Link to=\"/docsearch\">\n                  <button>Set an appointment now</button>\n                </Link>\n              </div>\n            )}\n          </div>\n\n        </div>\n\n      </div>\n      <PatientFooter />\n    </div>\n  );\n}\n\nexport default PatientAppointment;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}