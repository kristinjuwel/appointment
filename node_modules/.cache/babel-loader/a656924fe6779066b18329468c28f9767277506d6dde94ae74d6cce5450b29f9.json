{"ast":null,"code":"var _jsxFileName = \"D:\\\\3rd Year 1st Sem\\\\DocClickConnect\\\\appointment\\\\src\\\\pages\\\\AppointmentPages\\\\PatientResched.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport PatientNavBar from '../../components/PatientNavBar';\nimport PatientFooter from '../../components/PatientFooter';\nimport { Calendar, dateFnsLocalizer } from 'react-big-calendar';\nimport format from 'date-fns/format';\nimport parse from 'date-fns/parse';\nimport startOfWeek from 'date-fns/startOfWeek';\nimport getDay from 'date-fns/getDay';\nimport \"react-big-calendar/lib/css/react-big-calendar.css\";\nimport { useParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PatientResched = () => {\n  _s();\n  const {\n    appointmentId\n  } = useParams();\n  const [patientUserId, setPatientUserId] = useState(''); // To store the patient's user ID\n  const [isError, setIsError] = useState(false);\n  const [error, setError] = useState('');\n  const [appointments, setAppointments] = useState([{\n    title: '',\n    start: new Date(),\n    end: new Date(),\n    // 5:00 PM\n    appointmentId: '',\n    appointmentStatus: ''\n  }]);\n  useEffect(() => {\n    const fetchAppointment = async () => {\n      try {\n        const response = await fetch(`http://localhost:8080/appointment/${appointmentId}`);\n        if (response.ok) {\n          const data = await response.json();\n          setAppointments(data);\n        } else {\n          setError('Error fetching appointment');\n        }\n      } catch (error) {\n        setError('Error fetching appointment');\n      }\n    };\n    fetchAppointment();\n  }, [appointmentId]);\n  const locales = {\n    \"en-US\": require(\"date-fns/locale/en-US\")\n  };\n  const localizer = dateFnsLocalizer({\n    format,\n    parse,\n    startOfWeek,\n    getDay,\n    locales\n  });\n\n  // Define your appointment data\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(PatientNavBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"flex\",\n        margin: \"auto\",\n        width: \"100vw\",\n        justifyContent: \"center\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(Calendar, {\n        localizer: localizer,\n        events: appointments,\n        startAccessor: \"start\",\n        endAccessor: \"end\",\n        style: {\n          height: 600,\n          width: \"65%\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginLeft: \"30px\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"My Appointments\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n          children: [appointments.map((appointment, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: /*#__PURE__*/_jsxDEV(\"td\", {\n              rowSpan: 2,\n              style: {\n                border: \"1px solid lightgray\",\n                backgroundColor: \"lightgray\",\n                paddingLeft: \"10px\",\n                width: \"300px\"\n              },\n              children: [appointment.title, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 78,\n                columnNumber: 43\n              }, this), format(appointment.start, \"MM/dd/yyyy EEEE\"), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 79,\n                columnNumber: 70\n              }, this), format(appointment.start, \"h:mm a\"), \" - \", format(appointment.end, \"h:mm a\")]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 21\n            }, this)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 19\n          }, this)), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: /*#__PURE__*/_jsxDEV(\"td\", {\n              children: [\" Date:\", /*#__PURE__*/_jsxDEV(\"select\", {\n                name: \"sched\",\n                id: \"sched\",\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"11/13/2023\",\n                  children: \"November 13, 2023 (MONDAY)\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 88,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"11/20/2023\",\n                  children: \"November 20, 2023 (MONDAY)\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 89,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"11/27/2023\",\n                  children: \"November 27, 2023 (MONDAY)\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 90,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"12/04/2023\",\n                  children: \"December 4, 2023 (MONDAY)\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 91,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 87,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              style: {\n                marginTop: \"10px\",\n                borderRadius: 0,\n                width: \"100%\"\n              },\n              children: \"Submit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(PatientFooter, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 9\n  }, this);\n};\n_s(PatientResched, \"BAVfWuC21eyTei46fpCZHdZSaoM=\", false, function () {\n  return [useParams];\n});\n_c = PatientResched;\nexport default PatientResched;\nvar _c;\n$RefreshReg$(_c, \"PatientResched\");","map":{"version":3,"names":["React","useState","useEffect","PatientNavBar","PatientFooter","Calendar","dateFnsLocalizer","format","parse","startOfWeek","getDay","useParams","jsxDEV","_jsxDEV","PatientResched","_s","appointmentId","patientUserId","setPatientUserId","isError","setIsError","error","setError","appointments","setAppointments","title","start","Date","end","appointmentStatus","fetchAppointment","response","fetch","ok","data","json","locales","require","localizer","children","fileName","_jsxFileName","lineNumber","columnNumber","style","display","margin","width","justifyContent","events","startAccessor","endAccessor","height","marginLeft","map","appointment","index","rowSpan","border","backgroundColor","paddingLeft","name","id","value","marginTop","borderRadius","_c","$RefreshReg$"],"sources":["D:/3rd Year 1st Sem/DocClickConnect/appointment/src/pages/AppointmentPages/PatientResched.jsx"],"sourcesContent":["import React, { useState, useEffect} from 'react';\nimport PatientNavBar from '../../components/PatientNavBar';\nimport PatientFooter from '../../components/PatientFooter';\nimport { Calendar, dateFnsLocalizer } from 'react-big-calendar';\nimport format from 'date-fns/format';\nimport parse from 'date-fns/parse';\nimport startOfWeek from 'date-fns/startOfWeek';\nimport getDay from 'date-fns/getDay';\nimport \"react-big-calendar/lib/css/react-big-calendar.css\";\nimport { useParams } from 'react-router-dom';\n\nconst PatientResched = () => {\n  const {appointmentId} = useParams();\n  const [patientUserId, setPatientUserId] = useState(''); // To store the patient's user ID\n  const [isError, setIsError] = useState(false);\n  const [error, setError] = useState('');\n  const [appointments, setAppointments] = useState([\n    {\n      title: '',\n      start: new Date(),\n      end: new Date(),  // 5:00 PM\n      appointmentId: '',\n      appointmentStatus: ''\n    },\n  ]);\n\n  useEffect(() => {\n    const fetchAppointment = async () => {\n      try {\n        const response = await fetch(`http://localhost:8080/appointment/${appointmentId}`);\n        \n        if (response.ok) {\n          const data = await response.json();\n          setAppointments(data);\n        } else {\n          setError('Error fetching appointment');\n        }\n      } catch (error) {\n        setError('Error fetching appointment');\n      }\n    };\n\n    fetchAppointment();\n  }, [appointmentId]);\n\n    const locales = {\n        \"en-US\": require(\"date-fns/locale/en-US\")\n      }\n    \n      const localizer = dateFnsLocalizer({\n        format,\n        parse,\n        startOfWeek,\n        getDay,\n        locales\n      })\n    \n      // Define your appointment data\n    \n      return (\n        <div>\n          <PatientNavBar />\n          <div style={{ display: \"flex\", margin: \"auto\", width: \"100vw\", justifyContent: \"center\" }}>\n            <Calendar\n              localizer={localizer}\n              events={appointments}\n              startAccessor=\"start\"\n              endAccessor=\"end\"\n              style={{ height: 600, width: \"65%\" }}\n            />\n    \n            <div style={{ marginLeft: \"30px\" }}>\n              <h1>My Appointments</h1>\n              <table>\n                {appointments.map((appointment, index) => (\n                  <tr key={index}>\n                    <td rowSpan={2} style={{ border: \"1px solid lightgray\", backgroundColor: \"lightgray\", paddingLeft: \"10px\", width:\"300px\"}}>\n                      {appointment.title} <br />\n                      {format(appointment.start, \"MM/dd/yyyy EEEE\")} <br />\n                      {format(appointment.start, \"h:mm a\")} - {format(appointment.end, \"h:mm a\")}\n                    </td>\n                  </tr>\n                ))}\n                <br/>\n                <tr>\n                  <td> Date: \n                    <select name=\"sched\" id=\"sched\">\n                    <option value=\"11/13/2023\">November 13, 2023 (MONDAY)</option>\n                    <option value=\"11/20/2023\">November 20, 2023 (MONDAY)</option>\n                    <option value=\"11/27/2023\">November 27, 2023 (MONDAY)</option>\n                    <option value=\"12/04/2023\">December 4, 2023 (MONDAY)</option>\n                  </select>\n                  </td>\n                </tr>\n                <tr><button style={{marginTop: \"10px\", borderRadius: 0, width:\"100%\"}}>Submit</button></tr>\n              </table>\n            </div>\n    \n          </div>\n          <PatientFooter />\n        </div>\n      );\n}\n\nexport default PatientResched\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}