{"ast":null,"code":"var _jsxFileName = \"D:\\\\3rd Year 1st Sem\\\\DocClickConnect\\\\appointment\\\\src\\\\pages\\\\AppointmentPages\\\\SetAppointment.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport PatientNavBar from '../../components/PatientNavBar';\nimport PatientFooter from '../../components/PatientFooter';\nimport { useParams } from 'react-router-dom';\nimport { startOfWeek, addWeeks, addDays, format } from 'date-fns';\nimport HomeFooter from '../../components/HomeFooter';\nimport HomeNavbar from '../../components/HomeNavbar';\nimport { Calendar, dateFnsLocalizer } from 'react-big-calendar';\nimport parse from 'date-fns/parse';\nimport getDay from 'date-fns/getDay';\nimport \"react-big-calendar/lib/css/react-big-calendar.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SetAppointment = () => {\n  _s();\n  var _schedules$find, _schedules$find2, _schedules$find3;\n  const {\n    doctorId\n  } = useParams();\n  const [error, setError] = useState(null);\n  const [selectedDay, setSelectedDay] = useState('');\n  const [selectedSched, setSelectedSched] = useState('');\n  const [selectedDate, setSelectedDate] = useState('');\n  const [status] = useState(\"Scheduled by Patient\");\n  const [selectedClinicId, setSelectedClinicId] = useState('');\n  const [patientUserId, setPatientUserId] = useState('');\n  const [isPatientLoggedIn, setIsPatientLoggedIn] = useState('');\n  const [schedules, setSchedules] = useState([{\n    scheduleId: '',\n    clinicId: '',\n    avatar: '',\n    doctorName: '',\n    specialization: '',\n    contactNumber: '',\n    docEmail: '',\n    scheduleDay: '',\n    start: new Date(),\n    end: new Date(),\n    // 5:00 PM\n    slots: '',\n    clinicName: '',\n    address: '',\n    number: '',\n    email: ''\n  }]);\n  const [appointments, setAppointments] = useState([{\n    title: '',\n    clinic: '',\n    address: '',\n    number: '',\n    start: new Date(),\n    end: new Date(),\n    // 5:00 PM\n    appointmentId: '',\n    appointmentStatus: ''\n  }]);\n  useEffect(() => {\n    // Replace 'http://localhost:8080' with your actual API URL\n    fetch('http://localhost:8080/checkLoggedInPatient').then(response => {\n      if (response.ok) {\n        return response.json();\n      }\n      throw new Error('Network response was not ok');\n    }).then(data => {\n      setPatientUserId(data);\n      // Once you have the patientUserId, make another request to get appointments\n      fetch(`http://localhost:8080/appointments?patientUserId=${data}`).then(appointmentsResponse => {\n        if (appointmentsResponse.ok) {\n          return appointmentsResponse.json();\n        }\n        throw new Error('Network response was not ok');\n      }).then(appointmentsData => {\n        const formattedAppointments = appointmentsData.map(appointment => {\n          // Extract date and time components\n          const [year, month, day] = appointment.scheduleDate.split('-').map(Number);\n          const [hours, minutes] = appointment.startTime.split(':').map(Number);\n          const [hours2, minutes2] = appointment.endTime.split(':').map(Number);\n\n          // Create Date objects for start and end times\n          const startDate = new Date(year, month - 1, day, hours, minutes);\n          const endDate = new Date(year, month - 1, day, hours2, minutes2);\n\n          // Create an appointment object\n          return {\n            title: 'Dr. ' + appointment.doctorName,\n            clinic: appointment.clinicName,\n            address: appointment.address,\n            number: appointment.clinic.officeNumber,\n            start: startDate,\n            end: endDate,\n            appointmentId: appointment.transactionNo,\n            appointmentStatus: appointment.status\n          };\n        });\n        setAppointments(formattedAppointments);\n      }).catch(error => {\n        // Handle errors\n        console.error(error);\n      });\n    }).catch(error => {\n      console.error('Error:', error);\n    });\n  }, []);\n  const locales = {\n    \"en-US\": require(\"date-fns/locale/en-US\")\n  };\n  const localizer = dateFnsLocalizer({\n    format,\n    parse,\n    startOfWeek,\n    getDay,\n    locales\n  });\n  const handleCancel = async appointmentId => {\n    try {\n      const response = await fetch(`http://localhost:8080/appointmentChange/${appointmentId}?newStatus=Cancelled`, {\n        method: 'PUT'\n      });\n      if (response.ok) {\n        // Handle success if needed\n        console.log('Appointment cancelled successfully');\n        window.location.reload();\n      } else {\n        console.error('Error cancelling appointment');\n      }\n    } catch (error) {\n      console.error('Error cancelling appointment:', error);\n    }\n  };\n  const handleReschedule = async appointmentId => {\n    window.location.href = `/patresched/${appointmentId}`;\n  };\n  useEffect(() => {\n    const fetchDoctorSchedules = async () => {\n      try {\n        const response = await fetch(`http://localhost:8080/docsched/${doctorId}`);\n        if (response.ok) {\n          const data = await response.json();\n          const formattedSchedules = data.map(schedule => ({\n            scheduleId: schedule.scheduleId,\n            clinicId: schedule.clinicId,\n            avatar: schedule.doctor.user.avatar,\n            doctorName: `Dr. ${schedule.doctor.user.firstName} ${schedule.doctor.user.middleName} ${schedule.doctor.user.lastName}`,\n            specialization: schedule.doctor.specialization,\n            contactNumber: schedule.doctor.user.contactNumber,\n            docEmail: schedule.doctor.user.email,\n            scheduleDay: schedule.scheduleDay,\n            start: schedule.startTime,\n            end: schedule.endTime,\n            slots: schedule.slots,\n            clinicName: schedule.clinic.name,\n            address: schedule.clinic.address,\n            number: schedule.clinic.officeNumber,\n            email: schedule.clinic.officeEmail\n          }));\n          setSchedules(formattedSchedules);\n        } else {\n          setError('Error fetching appointment');\n        }\n      } catch (error) {\n        setError('Error fetching appointment');\n      }\n    };\n    fetchDoctorSchedules();\n  }, [doctorId]);\n  const convertMilitaryToStandardTime = militaryTime => {\n    if (typeof militaryTime !== 'string' || militaryTime.length !== 8) {\n      return 'Invalid Time';\n    }\n    const [hours, minutes] = militaryTime.split(':');\n    const parsedHours = parseInt(hours, 10);\n    const period = parsedHours >= 12 ? 'PM' : 'AM';\n    const formattedHours = parsedHours % 12 || 12;\n    return `${formattedHours}:${minutes} ${period}`;\n  };\n  const getNearestDays = (selectedDay, numberOfOccurrences) => {\n    const today = new Date();\n    const daysInWeek = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];\n    const selectedDayIndex = daysInWeek.findIndex(day => day === selectedDay);\n    if (selectedDayIndex === -1) {\n      return []; // Invalid selected day\n    }\n\n    const nearestDays = Array.from({\n      length: numberOfOccurrences\n    }, (_, index) => {\n      const currentWeek = startOfWeek(today, {\n        weekStartsOn: 0\n      }); // Always start from Sunday\n      const startOfSelectedWeek = addWeeks(currentWeek, index);\n\n      // Find the next occurrence of the selected day in the current week\n      let nextDay = addDays(startOfSelectedWeek, selectedDayIndex - currentWeek.getDay());\n      if (nextDay < today) {\n        // If the selected day has already passed in the current week, move to the next week\n        nextDay = addDays(startOfSelectedWeek, selectedDayIndex - currentWeek.getDay() + 7);\n      }\n      return format(nextDay, 'yyyy-MM-dd');\n    });\n    return nearestDays;\n  };\n  const uniqueClinics = [...new Set(schedules.map(schedule => schedule.clinicName))];\n  const handleChangeClinic = clinicName => {\n    const selectedClinic = schedules.find(schedule => schedule.clinicName === clinicName);\n    setSelectedClinicId((selectedClinic === null || selectedClinic === void 0 ? void 0 : selectedClinic.clinicId) || '');\n    setSelectedDay('');\n    setSelectedDate('');\n  };\n  useEffect(() => {\n    const fetchLoggedInPatientId = async () => {\n      try {\n        const response = await fetch('http://localhost:8080/checkLoggedInPatient');\n        if (response.ok) {\n          const userId = await response.json();\n          setPatientUserId(userId);\n          setIsPatientLoggedIn(true);\n        } else {\n          setError('Failed to fetch logged-in patient user ID.');\n          setIsPatientLoggedIn(false);\n        }\n      } catch (error) {\n        setError('Error fetching logged-in patient user ID:', error);\n        setIsPatientLoggedIn(false);\n        // Handle the error or provide feedback to the user\n      }\n    };\n\n    fetchLoggedInPatientId();\n  }, []); // The empty dependency array ensures that this effect runs once when the component mounts\n\n  // Change this line\n\n  if (!isPatientLoggedIn) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(HomeNavbar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          textAlign: 'center',\n          marginTop: '50px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"No patient is logged in.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 267,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/login\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            children: \"Login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 268,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 268,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(HomeFooter, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 270,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 7\n    }, this);\n  }\n  const handleBookAppointment = async () => {\n    try {\n      // Validate your appointment data here if needed\n\n      const url = `http://localhost:8080/appointment?patientId=${patientUserId}&scheduleId=${selectedSched}&scheduleDate=${selectedDate}&status=${status}`;\n      const response = await fetch(url, {\n        method: 'POST'\n      });\n      if (response.ok) {\n        setError('Appointment added successfully!');\n        console.log('Clinic ID:', selectedClinicId);\n        console.log('Selected Day:', selectedDay);\n        console.log('Selected Timeslot:', selectedSched);\n        console.log('Selected Date:', selectedDate);\n        window.location.href = `/setappointment/${doctorId}`;\n\n        // You can handle any other logic after a successful appointment addition here\n      } else {\n        setError('Failed to add appointment.');\n        // Handle the error or provide feedback to the user\n      }\n    } catch (error) {\n      setError('Error adding appointment:', error);\n      // Handle the error or provide feedback to the user\n    }\n  };\n\n  const CustomEvent = ({\n    event\n  }) => /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      margin: '5px 0',\n      whiteSpace: 'nowrap',\n      overflow: 'hidden',\n      textOverflow: 'ellipsis'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n      style: {\n        margin: '0px 0',\n        overflow: 'hidden',\n        textOverflow: 'ellipsis',\n        whiteSpace: 'normal'\n      },\n      children: event.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 306,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        margin: '0px 0',\n        overflow: 'hidden',\n        textOverflow: 'ellipsis',\n        whiteSpace: 'normal'\n      },\n      children: [\"Clinic: \", event.clinic]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 307,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        margin: '0px 0',\n        overflow: 'hidden',\n        textOverflow: 'ellipsis',\n        whiteSpace: 'normal'\n      },\n      children: [\"Status: \", event.appointmentStatus]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 310,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 305,\n    columnNumber: 5\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(PatientNavBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 319,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"flex\",\n        margin: \"auto\",\n        width: \"100vw\",\n        justifyContent: \"center\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(Calendar, {\n        localizer: localizer,\n        events: appointments.filter(appointment => appointment.title === schedules[0].doctorName),\n        startAccessor: \"start\",\n        endAccessor: \"end\",\n        style: {\n          height: 800,\n          width: \"70%\"\n        },\n        components: {\n          event: CustomEvent // Use the custom Event component\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 321,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginLeft: \"30px\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: schedules[0].doctorName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 333,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [\"Specialization: \", schedules[0].specialization]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 334,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [\"Contact Number: \", schedules[0].contactNumber]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 335,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [\"Email Address: \", schedules[0].docEmail]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 336,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 337,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n          children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"h2\", {\n                style: {\n                  color: \"#0094d4\"\n                },\n                children: \"Clinic: \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 342,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 341,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"select\", {\n                name: \"clinic\",\n                id: \"clinic\",\n                style: {\n                  width: \"250px\",\n                  fontSize: \"1.5rem\",\n                  fontWeight: \"bold\",\n                  color: \"#0094d4\"\n                },\n                onChange: e => handleChangeClinic(e.target.value),\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"\",\n                  children: \"Select Clinic\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 356,\n                  columnNumber: 19\n                }, this), uniqueClinics.map((clinicName, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: clinicName,\n                  children: clinicName\n                }, index, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 358,\n                  columnNumber: 21\n                }, this))]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 345,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 344,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 340,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"h5\", {\n                children: \"Address:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 366,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 366,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"h5\", {\n                children: (_schedules$find = schedules.find(schedule => schedule.clinicId === selectedClinicId)) === null || _schedules$find === void 0 ? void 0 : _schedules$find.address\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 367,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 367,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 365,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"h5\", {\n                children: \"Contact Number:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 370,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 370,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"h5\", {\n                children: (_schedules$find2 = schedules.find(schedule => schedule.clinicId === selectedClinicId)) === null || _schedules$find2 === void 0 ? void 0 : _schedules$find2.number\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 371,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 371,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 369,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"h5\", {\n                children: \"Email Address:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 374,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 374,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"h5\", {\n                children: (_schedules$find3 = schedules.find(schedule => schedule.clinicId === selectedClinicId)) === null || _schedules$find3 === void 0 ? void 0 : _schedules$find3.email\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 375,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 375,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 373,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              style: {\n                width: \"150px\"\n              },\n              children: \"Day: \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 378,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"select\", {\n                name: \"sched\",\n                id: `day-${selectedClinicId}`,\n                style: {\n                  width: \"250px\"\n                },\n                value: selectedDay,\n                onChange: e => {\n                  setSelectedDay(e.target.value);\n                  setSelectedSched('');\n                  setSelectedDate('');\n                  console.log(\"Selected Day changed:\", e.target.value);\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"\",\n                  children: \"Select Day\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 393,\n                  columnNumber: 19\n                }, this), [...new Set(schedules.filter(schedule => schedule.clinicId === selectedClinicId).map(schedule => schedule.scheduleDay))].map(scheduleDay => /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: scheduleDay,\n                  children: scheduleDay\n                }, `${selectedClinicId}-${scheduleDay}`, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 399,\n                  columnNumber: 23\n                }, this))]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 380,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 379,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 377,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              style: {\n                width: \"150px\"\n              },\n              children: \"Timeslot: \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 408,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"select\", {\n                name: \"timeslot\",\n                id: `timeslot-${selectedClinicId}`,\n                style: {\n                  width: \"250px\"\n                },\n                value: selectedSched,\n                onChange: e => {\n                  const selectedTimeslot = e.target.value;\n                  setSelectedDate('');\n                  setSelectedSched(selectedTimeslot);\n                  console.log('Selected Schedule ID:', selectedTimeslot);\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"\",\n                  children: \"Select Timeslot\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 423,\n                  columnNumber: 19\n                }, this), schedules.filter(schedule => schedule.clinicId === selectedClinicId && schedule.scheduleDay === selectedDay).map(schedule => /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: schedule.scheduleId,\n                  children: [convertMilitaryToStandardTime(schedule.start), \" - \", convertMilitaryToStandardTime(schedule.end)]\n                }, schedule.scheduleId, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 429,\n                  columnNumber: 23\n                }, this))]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 410,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 409,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 407,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              style: {\n                width: \"150px\"\n              },\n              children: \"Date: \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 441,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"select\", {\n                name: \"sched\",\n                id: `sched-${selectedClinicId}`,\n                style: {\n                  width: \"250px\"\n                },\n                value: selectedDate,\n                onChange: e => {\n                  const selectedDateString = e.target.value;\n                  setSelectedDate(selectedDateString);\n                  console.log('Selected Date:', selectedDateString);\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"\",\n                  children: \"Select Date\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 455,\n                  columnNumber: 19\n                }, this), getNearestDays(selectedDay, 5).map((date, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: date,\n                  children: new Date(date).toLocaleDateString('en-US', {\n                    year: 'numeric',\n                    month: 'long',\n                    day: 'numeric'\n                  })\n                }, index, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 459,\n                  columnNumber: 21\n                }, this))]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 443,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 442,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 440,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: /*#__PURE__*/_jsxDEV(\"td\", {\n              colSpan: 2,\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                style: {\n                  marginTop: \"10px\",\n                  borderRadius: 0,\n                  width: \"100%\"\n                },\n                onClick: handleBookAppointment,\n                children: \"Book an Appointment\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 473,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 473,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 473,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: /*#__PURE__*/_jsxDEV(\"td\", {\n              colSpan: 2,\n              children: /*#__PURE__*/_jsxDEV(\"h3\", {\n                children: /*#__PURE__*/_jsxDEV(\"i\", {\n                  children: error\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 474,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 474,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 474,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 474,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 339,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Existing Appointments \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 477,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            overflowY: 'auto',\n            maxHeight: '100px'\n          },\n          children: appointments.filter(appointment => appointment.title === schedules[0].doctorName).length > 0 ?\n          // Display appointments\n          appointments.map((appointment, index) => appointment.title === schedules[0].doctorName && /*#__PURE__*/_jsxDEV(\"table\", {\n            children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                rowSpan: 2,\n                width: 200,\n                style: {\n                  border: \"1px solid lightgray\",\n                  backgroundColor: \"lightgray\",\n                  paddingLeft: \"10px\"\n                },\n                children: [appointment.title, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 486,\n                  columnNumber: 45\n                }, this), format(appointment.start, \"MM/dd/yyyy EEEE\"), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 487,\n                  columnNumber: 72\n                }, this), format(appointment.start, \"h:mm a\"), \" - \", format(appointment.end, \"h:mm a\")]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 485,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  style: {\n                    borderRadius: 0,\n                    width: \"100%\"\n                  },\n                  onClick: () => handleReschedule(appointment.appointmentId),\n                  children: \"Reschedule\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 490,\n                  columnNumber: 27\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 490,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 484,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"cancel\",\n                  onClick: () => handleCancel(appointment.appointmentId),\n                  type: \"submit\",\n                  children: \"Cancel\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 493,\n                  columnNumber: 27\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 493,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 492,\n              columnNumber: 21\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 483,\n            columnNumber: 19\n          }, this)) :\n          /*#__PURE__*/\n          // Display a message if there are no appointments with appointmentStatus === \"Approved by Doctor\"\n          _jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"You have no existing appointments yet.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 501,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 500,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 478,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 332,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 320,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(PatientFooter, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 507,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 318,\n    columnNumber: 5\n  }, this);\n};\n_s(SetAppointment, \"fvYYJwdxmjFYEhqLmPLmQJ/56WM=\", false, function () {\n  return [useParams];\n});\n_c = SetAppointment;\nexport default SetAppointment;\nvar _c;\n$RefreshReg$(_c, \"SetAppointment\");","map":{"version":3,"names":["React","useState","useEffect","Link","PatientNavBar","PatientFooter","useParams","startOfWeek","addWeeks","addDays","format","HomeFooter","HomeNavbar","Calendar","dateFnsLocalizer","parse","getDay","jsxDEV","_jsxDEV","SetAppointment","_s","_schedules$find","_schedules$find2","_schedules$find3","doctorId","error","setError","selectedDay","setSelectedDay","selectedSched","setSelectedSched","selectedDate","setSelectedDate","status","selectedClinicId","setSelectedClinicId","patientUserId","setPatientUserId","isPatientLoggedIn","setIsPatientLoggedIn","schedules","setSchedules","scheduleId","clinicId","avatar","doctorName","specialization","contactNumber","docEmail","scheduleDay","start","Date","end","slots","clinicName","address","number","email","appointments","setAppointments","title","clinic","appointmentId","appointmentStatus","fetch","then","response","ok","json","Error","data","appointmentsResponse","appointmentsData","formattedAppointments","map","appointment","year","month","day","scheduleDate","split","Number","hours","minutes","startTime","hours2","minutes2","endTime","startDate","endDate","officeNumber","transactionNo","catch","console","locales","require","localizer","handleCancel","method","log","window","location","reload","handleReschedule","href","fetchDoctorSchedules","formattedSchedules","schedule","doctor","user","firstName","middleName","lastName","name","officeEmail","convertMilitaryToStandardTime","militaryTime","length","parsedHours","parseInt","period","formattedHours","getNearestDays","numberOfOccurrences","today","daysInWeek","selectedDayIndex","findIndex","nearestDays","Array","from","_","index","currentWeek","weekStartsOn","startOfSelectedWeek","nextDay","uniqueClinics","Set","handleChangeClinic","selectedClinic","find","fetchLoggedInPatientId","userId","children","fileName","_jsxFileName","lineNumber","columnNumber","style","textAlign","marginTop","to","handleBookAppointment","url","CustomEvent","event","margin","whiteSpace","overflow","textOverflow","display","width","justifyContent","events","filter","startAccessor","endAccessor","height","components","marginLeft","color","id","fontSize","fontWeight","onChange","e","target","value","selectedTimeslot","selectedDateString","date","toLocaleDateString","colSpan","borderRadius","onClick","overflowY","maxHeight","rowSpan","border","backgroundColor","paddingLeft","className","type","_c","$RefreshReg$"],"sources":["D:/3rd Year 1st Sem/DocClickConnect/appointment/src/pages/AppointmentPages/SetAppointment.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport PatientNavBar from '../../components/PatientNavBar';\nimport PatientFooter from '../../components/PatientFooter';\nimport { useParams } from 'react-router-dom';\nimport { startOfWeek, addWeeks, addDays, format } from 'date-fns';\nimport HomeFooter from '../../components/HomeFooter';\nimport HomeNavbar from '../../components/HomeNavbar';\nimport { Calendar, dateFnsLocalizer } from 'react-big-calendar';\nimport parse from 'date-fns/parse';\nimport getDay from 'date-fns/getDay';\nimport \"react-big-calendar/lib/css/react-big-calendar.css\";\nconst SetAppointment = () => {\n  const { doctorId } = useParams();\n  const [error, setError] = useState(null);\n  const [selectedDay, setSelectedDay] = useState('');\n  const [selectedSched, setSelectedSched] = useState('');\n  const [selectedDate, setSelectedDate] = useState('');\n  const [status] = useState(\"Scheduled by Patient\");\n  const [selectedClinicId, setSelectedClinicId] = useState('');\n  const [patientUserId, setPatientUserId] = useState('');\n  const [isPatientLoggedIn, setIsPatientLoggedIn] = useState('');\n  const [schedules, setSchedules] = useState([\n    {\n      scheduleId: '',\n      clinicId: '',\n      avatar: '',\n      doctorName: '',\n      specialization: '',\n      contactNumber: '',\n      docEmail: '',\n      scheduleDay: '',\n      start: new Date(),\n      end: new Date(),  // 5:00 PM\n      slots: '',\n      clinicName: '',\n      address: '',\n      number: '',\n      email: ''\n    },\n  ]);\n  const [appointments, setAppointments] = useState([\n    {\n      title: '',\n      clinic: '',\n      address: '',\n      number: '',\n      start: new Date(),\n      end: new Date(),  // 5:00 PM\n      appointmentId: '',\n      appointmentStatus: ''\n    },\n  ]);\n  useEffect(() => {\n    // Replace 'http://localhost:8080' with your actual API URL\n    fetch('http://localhost:8080/checkLoggedInPatient')\n      .then((response) => {\n        if (response.ok) {\n          return response.json();\n        }\n        throw new Error('Network response was not ok');\n      })\n      .then((data) => {\n        setPatientUserId(data);\n        // Once you have the patientUserId, make another request to get appointments\n        fetch(`http://localhost:8080/appointments?patientUserId=${data}`)\n          .then((appointmentsResponse) => {\n            if (appointmentsResponse.ok) {\n              return appointmentsResponse.json();\n            }\n            throw new Error('Network response was not ok');\n          })\n          .then((appointmentsData) => {\n            const formattedAppointments = appointmentsData.map((appointment) => {\n              // Extract date and time components\n              const [year, month, day] = appointment.scheduleDate.split('-').map(Number);\n              const [hours, minutes] = appointment.startTime.split(':').map(Number);\n              const [hours2, minutes2] = appointment.endTime.split(':').map(Number);\n\n              // Create Date objects for start and end times\n              const startDate = new Date(year, month - 1, day, hours, minutes);\n              const endDate = new Date(year, month - 1, day, hours2, minutes2);\n\n              // Create an appointment object\n              return {\n                title: 'Dr. ' + appointment.doctorName,\n                clinic: appointment.clinicName,\n                address: appointment.address,\n                number: appointment.clinic.officeNumber,\n                start: startDate,\n                end: endDate,\n                appointmentId: appointment.transactionNo,\n                appointmentStatus: appointment.status\n              };\n            });\n\n            setAppointments(formattedAppointments);\n          })\n          .catch((error) => {\n            // Handle errors\n            console.error(error);\n          });\n\n      })\n      .catch((error) => {\n        console.error('Error:', error);\n      });\n  }, []);\n\n  const locales = {\n    \"en-US\": require(\"date-fns/locale/en-US\")\n  }\n\n  const localizer = dateFnsLocalizer({\n    format,\n    parse,\n    startOfWeek,\n    getDay,\n    locales\n  })\n\n  const handleCancel = async (appointmentId) => {\n    try {\n      const response = await fetch(`http://localhost:8080/appointmentChange/${appointmentId}?newStatus=Cancelled`, {\n        method: 'PUT',\n      });\n\n      if (response.ok) {\n        // Handle success if needed\n        console.log('Appointment cancelled successfully');\n        window.location.reload();\n      } else {\n        console.error('Error cancelling appointment');\n      }\n    } catch (error) {\n      console.error('Error cancelling appointment:', error);\n    }\n  };\n\n  const handleReschedule = async (appointmentId) => {\n    window.location.href = `/patresched/${appointmentId}`;\n  };\n\n\n  useEffect(() => {\n    const fetchDoctorSchedules = async () => {\n      try {\n        const response = await fetch(`http://localhost:8080/docsched/${doctorId}`);\n\n        if (response.ok) {\n          const data = await response.json();\n\n          const formattedSchedules = data.map(schedule => ({\n            scheduleId: schedule.scheduleId,\n            clinicId: schedule.clinicId,\n            avatar: schedule.doctor.user.avatar,\n            doctorName: `Dr. ${schedule.doctor.user.firstName} ${schedule.doctor.user.middleName} ${schedule.doctor.user.lastName}`,\n            specialization: schedule.doctor.specialization,\n            contactNumber: schedule.doctor.user.contactNumber,\n            docEmail: schedule.doctor.user.email,\n            scheduleDay: schedule.scheduleDay,\n            start: schedule.startTime,\n            end: schedule.endTime,\n            slots: schedule.slots,\n            clinicName: schedule.clinic.name,\n            address: schedule.clinic.address,\n            number: schedule.clinic.officeNumber,\n            email: schedule.clinic.officeEmail\n          }));\n\n          setSchedules(formattedSchedules);\n\n        } else {\n          setError('Error fetching appointment');\n        }\n      } catch (error) {\n        setError('Error fetching appointment');\n      }\n    };\n\n    fetchDoctorSchedules();\n  }, [doctorId]);\n\n  const convertMilitaryToStandardTime = (militaryTime) => {\n    if (typeof militaryTime !== 'string' || militaryTime.length !== 8) {\n      return 'Invalid Time';\n    }\n\n    const [hours, minutes] = militaryTime.split(':');\n    const parsedHours = parseInt(hours, 10);\n    const period = parsedHours >= 12 ? 'PM' : 'AM';\n    const formattedHours = parsedHours % 12 || 12;\n    return `${formattedHours}:${minutes} ${period}`;\n  };\n\n\n\n  const getNearestDays = (selectedDay, numberOfOccurrences) => {\n    const today = new Date();\n    const daysInWeek = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];\n    const selectedDayIndex = daysInWeek.findIndex(day => day === selectedDay);\n\n    if (selectedDayIndex === -1) {\n      return []; // Invalid selected day\n    }\n\n    const nearestDays = Array.from({ length: numberOfOccurrences }, (_, index) => {\n      const currentWeek = startOfWeek(today, { weekStartsOn: 0 }); // Always start from Sunday\n      const startOfSelectedWeek = addWeeks(currentWeek, index);\n\n      // Find the next occurrence of the selected day in the current week\n      let nextDay = addDays(startOfSelectedWeek, selectedDayIndex - currentWeek.getDay());\n\n      if (nextDay < today) {\n        // If the selected day has already passed in the current week, move to the next week\n        nextDay = addDays(startOfSelectedWeek, selectedDayIndex - currentWeek.getDay() + 7);\n      }\n\n      return format(nextDay, 'yyyy-MM-dd');\n    });\n\n    return nearestDays;\n  };\n\n\n\n\n  const uniqueClinics = [...new Set(schedules.map(schedule => schedule.clinicName))];\n\n\n  const handleChangeClinic = (clinicName) => {\n    const selectedClinic = schedules.find(schedule => schedule.clinicName === clinicName);\n    setSelectedClinicId(selectedClinic?.clinicId || '');\n    setSelectedDay('');\n    setSelectedDate('');\n\n  };\n  useEffect(() => {\n    const fetchLoggedInPatientId = async () => {\n      try {\n        const response = await fetch('http://localhost:8080/checkLoggedInPatient');\n        if (response.ok) {\n          const userId = await response.json();\n          setPatientUserId(userId);\n          setIsPatientLoggedIn(true);\n        } else {\n          setError('Failed to fetch logged-in patient user ID.');\n          setIsPatientLoggedIn(false);\n        }\n      } catch (error) {\n        setError('Error fetching logged-in patient user ID:', error);\n        setIsPatientLoggedIn(false);\n        // Handle the error or provide feedback to the user\n      }\n    };\n\n    fetchLoggedInPatientId();\n  }, []); // The empty dependency array ensures that this effect runs once when the component mounts\n\n  // Change this line\n\n  if (!isPatientLoggedIn) {\n    return (\n      <div>\n        <HomeNavbar />\n        <div style={{ textAlign: 'center', marginTop: '50px' }}>\n          <h1>No patient is logged in.</h1>\n          <Link to=\"/login\"><button>Login</button></Link>\n        </div>\n        <HomeFooter />\n      </div>\n\n    );\n  }\n  const handleBookAppointment = async () => {\n    try {\n      // Validate your appointment data here if needed\n\n      const url = `http://localhost:8080/appointment?patientId=${patientUserId}&scheduleId=${selectedSched}&scheduleDate=${selectedDate}&status=${status}`;\n\n      const response = await fetch(url, {\n        method: 'POST',\n      });\n\n      if (response.ok) {\n        setError('Appointment added successfully!');\n        console.log('Clinic ID:', selectedClinicId);\n        console.log('Selected Day:', selectedDay);\n        console.log('Selected Timeslot:', selectedSched);\n        console.log('Selected Date:', selectedDate);\n        window.location.href = `/setappointment/${doctorId}`;\n\n        // You can handle any other logic after a successful appointment addition here\n      } else {\n        setError('Failed to add appointment.');\n        // Handle the error or provide feedback to the user\n      }\n    } catch (error) {\n      setError('Error adding appointment:', error);\n      // Handle the error or provide feedback to the user\n    }\n  };\n\n  const CustomEvent = ({ event }) => (\n    <div style={{ margin: '5px 0', whiteSpace: 'nowrap', overflow: 'hidden', textOverflow: 'ellipsis' }}>\n      <strong style={{ margin: '0px 0', overflow: 'hidden', textOverflow: 'ellipsis', whiteSpace: 'normal' }}>{event.title}</strong>\n      <p style={{ margin: '0px 0', overflow: 'hidden', textOverflow: 'ellipsis', whiteSpace: 'normal' }}>\n        Clinic: {event.clinic}\n      </p>\n      <p style={{ margin: '0px 0', overflow: 'hidden', textOverflow: 'ellipsis', whiteSpace: 'normal' }}>\n        Status: {event.appointmentStatus}\n      </p>\n    </div>\n  );\n\n\n  return (\n    <div>\n      <PatientNavBar />\n      <div style={{ display: \"flex\", margin: \"auto\", width: \"100vw\", justifyContent: \"center\" }}>\n        <Calendar\n          localizer={localizer}\n          events={appointments.filter(appointment => appointment.title === schedules[0].doctorName)}\n          startAccessor=\"start\"\n          endAccessor=\"end\"\n          style={{ height: 800, width: \"70%\" }}\n          components={{\n            event: CustomEvent, // Use the custom Event component\n          }}\n        />\n\n        <div style={{ marginLeft: \"30px\" }}>\n          <h1>{schedules[0].doctorName}</h1>\n          <h2>Specialization: {schedules[0].specialization}</h2>\n          <h3>Contact Number: {schedules[0].contactNumber}</h3>\n          <h3>Email Address: {schedules[0].docEmail}</h3>\n          <br />\n\n          <table>\n            <tr>\n              <td>\n                <h2 style={{ color: \"#0094d4\" }}>Clinic: </h2>\n              </td>\n              <td>\n                <select\n                  name=\"clinic\"\n                  id=\"clinic\"\n                  style={{\n                    width: \"250px\",\n                    fontSize: \"1.5rem\",\n                    fontWeight: \"bold\",\n                    color: \"#0094d4\",\n                  }}\n                  onChange={(e) => handleChangeClinic(e.target.value)}\n                >\n                  <option value=\"\">Select Clinic</option>\n                  {uniqueClinics.map((clinicName, index) => (\n                    <option key={index} value={clinicName}>\n                      {clinicName}\n                    </option>\n                  ))}\n                </select>\n              </td>\n            </tr>\n            <tr>\n              <td><h5>Address:</h5></td>\n              <td><h5>{schedules.find(schedule => schedule.clinicId === selectedClinicId)?.address}</h5></td>\n            </tr>\n            <tr>\n              <td><h5>Contact Number:</h5></td>\n              <td><h5>{schedules.find(schedule => schedule.clinicId === selectedClinicId)?.number}</h5></td>\n            </tr>\n            <tr>\n              <td><h5>Email Address:</h5></td>\n              <td><h5>{schedules.find(schedule => schedule.clinicId === selectedClinicId)?.email}</h5></td>\n            </tr>\n            <tr>\n              <td style={{ width: \"150px\" }}>Day: </td>\n              <td>\n                <select\n                  name=\"sched\"\n                  id={`day-${selectedClinicId}`}\n                  style={{ width: \"250px\" }}\n                  value={selectedDay}\n                  onChange={(e) => {\n                    setSelectedDay(e.target.value);\n                    setSelectedSched('');\n                    setSelectedDate('');\n                    console.log(\"Selected Day changed:\", e.target.value);\n                  }}\n                >\n                  {/* Initial blank option */}\n                  <option value=\"\">Select Day</option>\n                  {/* Options for the selected clinic's unique days */}\n                  {[...new Set(schedules\n                    .filter(schedule => schedule.clinicId === selectedClinicId)\n                    .map(schedule => schedule.scheduleDay))]\n                    .map(scheduleDay => (\n                      <option key={`${selectedClinicId}-${scheduleDay}`} value={scheduleDay}>\n                        {scheduleDay}\n                      </option>\n                    ))}\n                </select>\n\n              </td>\n            </tr>\n            <tr>\n              <td style={{ width: \"150px\" }}>Timeslot: </td>\n              <td>\n                <select\n                  name=\"timeslot\"\n                  id={`timeslot-${selectedClinicId}`}\n                  style={{ width: \"250px\" }}\n                  value={selectedSched}\n                  onChange={(e) => {\n                    const selectedTimeslot = e.target.value;\n                    setSelectedDate('');\n                    setSelectedSched(selectedTimeslot);\n                    console.log('Selected Schedule ID:', selectedTimeslot);\n                  }}\n                >\n                  {/* Initial blank option */}\n                  <option value=\"\">Select Timeslot</option>\n\n                  {/* Options for the selected clinic's timeslots */}\n                  {schedules\n                    .filter(schedule => schedule.clinicId === selectedClinicId && schedule.scheduleDay === selectedDay)\n                    .map(schedule => (\n                      <option key={schedule.scheduleId} value={schedule.scheduleId}>\n                        {convertMilitaryToStandardTime(schedule.start)} - {convertMilitaryToStandardTime(schedule.end)}\n                      </option>\n                    ))}\n                </select>\n\n\n              </td>\n            </tr>\n\n            {/* autogenerated dapat */}\n            <tr>\n              <td style={{ width: \"150px\" }}>Date: </td>\n              <td>\n                <select\n                  name=\"sched\"\n                  id={`sched-${selectedClinicId}`}\n                  style={{ width: \"250px\" }}\n                  value={selectedDate}\n                  onChange={(e) => {\n                    const selectedDateString = e.target.value;\n                    setSelectedDate(selectedDateString);\n                    console.log('Selected Date:', selectedDateString);\n                  }}\n                >\n                  {/* Initial blank option */}\n                  <option value=\"\">Select Date</option>\n\n                  {/* Options for the selected clinic's nearest days (only 5) */}\n                  {getNearestDays(selectedDay, 5).map((date, index) => (\n                    <option key={index} value={date}>\n                      {new Date(date).toLocaleDateString('en-US', {\n                        year: 'numeric',\n                        month: 'long',\n                        day: 'numeric',\n                      })}\n                    </option>\n                  ))}\n                </select>\n\n\n\n              </td>\n            </tr>\n            <tr><td colSpan={2}><button style={{ marginTop: \"10px\", borderRadius: 0, width: \"100%\" }} onClick={handleBookAppointment}>Book an Appointment</button></td></tr>\n            <tr><td colSpan={2}><h3><i>{error}</i></h3></td></tr>\n          </table>\n\n          <h1>Existing Appointments </h1>\n          <div style={{ overflowY: 'auto', maxHeight: '100px' }}>\n            {appointments.filter(appointment => appointment.title === schedules[0].doctorName).length > 0 ? (\n              // Display appointments\n              appointments.map((appointment, index) => (appointment.title === schedules[0].doctorName &&\n                (\n                  <table key={index}>\n                    <tr>\n                      <td rowSpan={2} width={200} style={{ border: \"1px solid lightgray\", backgroundColor: \"lightgray\", paddingLeft: \"10px\" }}>\n                        {appointment.title} <br />\n                        {format(appointment.start, \"MM/dd/yyyy EEEE\")} <br />\n                        {format(appointment.start, \"h:mm a\")} - {format(appointment.end, \"h:mm a\")}\n                      </td>\n                      <td><button style={{ borderRadius: 0, width: \"100%\" }} onClick={() => handleReschedule(appointment.appointmentId)}>Reschedule</button></td>\n                    </tr>\n                    <tr>\n                      <td><button className='cancel' onClick={() => handleCancel(appointment.appointmentId)} type=\"submit\">Cancel</button></td>\n                    </tr>\n                  </table>\n                )\n              ))\n            ) : (\n              // Display a message if there are no appointments with appointmentStatus === \"Approved by Doctor\"\n              <div>\n                <p>You have no existing appointments yet.</p>\n              </div>\n            )}\n          </div>\n        </div>\n      </div>\n      <PatientFooter />\n    </div>\n  );\n};\n\nexport default SetAppointment;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}