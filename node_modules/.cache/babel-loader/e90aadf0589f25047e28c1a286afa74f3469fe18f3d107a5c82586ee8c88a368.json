{"ast":null,"code":"var _jsxFileName = \"D:\\\\3rd Year 1st Sem\\\\DocClickConnect\\\\appointment\\\\src\\\\pages\\\\AdminHome.jsx\",\n  _s3 = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport \"../styles/Search.css\";\nimport { Link } from 'react-router-dom';\nimport HomeFooter from '../components/HomeFooter';\nimport DoctorForApproval from '../components/DoctorsForApproval';\nimport Popup from '../components/Popup';\nimport avatar00 from '../images/defaultIcon.png';\nimport avatar01 from '../assets/DoctorIcons/Icon01.png';\nimport avatar02 from '../assets/DoctorIcons/Icon02.png';\nimport avatar03 from '../assets/DoctorIcons/Icon03.png';\nimport avatar04 from '../assets/DoctorIcons/Icon04.png';\nimport avatar05 from '../assets/DoctorIcons/Icon05.png';\nimport avatar06 from '../assets/DoctorIcons/Icon06.png';\nimport avatar07 from '../assets/DoctorIcons/Icon07.png';\nimport avatar08 from '../assets/DoctorIcons/Icon08.png';\nimport avatar09 from '../assets/DoctorIcons/Icon09.png';\nimport avatar10 from '../assets/DoctorIcons/Icon10.png';\nimport avatar11 from '../assets/DoctorIcons/Icon11.png';\nimport avatar12 from '../assets/DoctorIcons/Icon12.png';\nimport avatar13 from '../assets/DoctorIcons/Icon13.png';\nimport avatar14 from '../assets/DoctorIcons/Icon14.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction AdminHome() {\n  _s3();\n  var _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n  const [message, setMessage] = useState('');\n  const [selectedAvatar, setSelectedAvatar] = useState('');\n  const [isPopupVisible, setPopupVisibility] = useState(false);\n  const [doctors, setDoctors] = useState([{\n    doctorId: '',\n    firstName: '',\n    lastName: '',\n    contactNumber: '',\n    specialization: '',\n    credentials: '',\n    profilePicture: ''\n  }]);\n  const [result, setResult] = useState('');\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [currentDoctor, setCurrentDoctor] = useState('');\n  const [avatar] = useState(currentDoctor.profilePicture || '');\n  const [schedules, setSchedules] = useState([{\n    doctorUserId: '',\n    clinicId: '',\n    clinicName: '',\n    clinicAddress: '',\n    clinicNumber: '',\n    scheduleDay: '',\n    slots: ''\n  }]);\n  useEffect(() => {\n    const fetchSchedules = async () => {\n      try {\n        const response = await fetch('http://localhost:8080/schedules');\n        if (!response.ok) {\n          throw new Error('Failed to fetch schedules');\n        }\n        const schedulesData = await response.json();\n        const formattedSchedules = schedulesData.map(schedulesData => ({\n          doctorUserId: schedulesData.doctorUserId,\n          clinicId: schedulesData.clinicId,\n          clinicName: schedulesData.clinic.name,\n          clinicAddress: schedulesData.clinic.address,\n          clinicNumber: schedulesData.clinic.officeNumber,\n          scheduleDay: schedulesData.scheduleDay,\n          slots: schedulesData.slots\n        }));\n        setSchedules(formattedSchedules);\n        console.log(\"nakuha q sched hehe\");\n      } catch (error) {\n        console.error('Error fetching schedules:', error.message);\n      }\n    };\n    fetchSchedules();\n  }, []);\n  useEffect(() => {\n    const fetchAllDoctors = async () => {\n      try {\n        const response = await fetch('http://localhost:8080/allusers');\n        if (response.ok) {\n          const data = await response.json();\n          const formattedDoctors = data.map(doctorData => ({\n            doctorId: doctorData.userId,\n            firstName: `Dr. ${doctorData.user.firstName}`,\n            lastName: doctorData.user.lastName,\n            contactNumber: doctorData.user.contactNumber,\n            specialization: doctorData.specialization,\n            credentials: doctorData.credentials,\n            profilePicture: doctorData.user.avatar\n          }));\n          setDoctors(formattedDoctors);\n        } else {\n          setError('Failed to fetch doctors');\n        }\n      } catch (error) {\n        setError('Error while fetching doctors');\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    fetchAllDoctors();\n  }, []);\n  const setDisplayedAvatars = avatar => {\n    const avatarImports = {\n      'avatar01': avatar01,\n      'avatar02': avatar02,\n      'avatar03': avatar03,\n      'avatar04': avatar04,\n      'avatar05': avatar05,\n      'avatar06': avatar06,\n      'avatar07': avatar07,\n      'avatar08': avatar08,\n      'avatar09': avatar09,\n      'avatar10': avatar10,\n      'avatar11': avatar11,\n      'avatar12': avatar12,\n      'avatar13': avatar13,\n      'avatar14': avatar14\n    };\n\n    // Set selectedAvatar using the corresponding import\n    setSelectedAvatar(avatarImports[avatar] || avatar00);\n  };\n  useEffect(() => {\n    // Set displayed avatars based on the doctor's avatar value\n    setDisplayedAvatars(currentDoctor.profilePicture);\n  }, [currentDoctor.profilePicture]);\n  const [uniqueClinics, setUniqueClinics] = useState([]);\n  const getDoctorClinics = doctorId => {\n    // Filter schedules based on the doctorId\n    const doctorSchedules = schedules.filter(schedule => schedule.doctorUserId === doctorId);\n\n    // Extract unique clinic IDs\n    const uniqueClinicIds = Array.from(new Set(doctorSchedules.map(schedule => schedule.clinicId)));\n\n    // Create an array of objects for each unique clinic ID\n    const uniqueClinicInfo = uniqueClinicIds.map(clinicId => {\n      var _clinicSchedules$, _clinicSchedules$2, _clinicSchedules$3;\n      const clinicSchedules = doctorSchedules.filter(schedule => schedule.clinicId === clinicId);\n      const clinicName = ((_clinicSchedules$ = clinicSchedules[0]) === null || _clinicSchedules$ === void 0 ? void 0 : _clinicSchedules$.clinicName) || ''; // Get the clinic name from the first schedule\n      const clinicAddress = ((_clinicSchedules$2 = clinicSchedules[0]) === null || _clinicSchedules$2 === void 0 ? void 0 : _clinicSchedules$2.clinicAddress) || '';\n      const clinicNumber = ((_clinicSchedules$3 = clinicSchedules[0]) === null || _clinicSchedules$3 === void 0 ? void 0 : _clinicSchedules$3.clinicNumber) || '';\n      const scheduleDays = Array.from(new Set(clinicSchedules.map(schedule => schedule.scheduleDay)));\n      return {\n        clinicId,\n        clinicName,\n        clinicAddress,\n        clinicNumber,\n        scheduleDays\n      };\n    });\n\n    // Set the extracted information in the component state\n    setUniqueClinics(uniqueClinicInfo);\n    console.log(uniqueClinics);\n  };\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 14\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Error: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 14\n    }, this);\n  }\n  const handleLogout = async () => {\n    try {\n      const response = await fetch(\"http://localhost:8080/adminlogout\", {\n        method: 'POST'\n      });\n      if (response.status === 200) {\n        setMessage('Logged out successfully');\n        window.location.href = '/';\n      } else if (response.status === 401) {\n        setMessage('No user is currently logged in');\n      } else {\n        setMessage('An error occurred');\n      }\n    } catch (error) {\n      setMessage('An error occurred');\n    }\n  };\n  const handleApprovalSubmit = async doctorId => {\n    _s();\n    const [approvalStatus] = useState('Verified by Admin');\n    try {\n      const url = `\"http://localhost:8080/approval?userId=${doctorId}&approvalStatus=${approvalStatus}`;\n      const response = await fetch(url, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/x-www-form-urlencoded'\n        }\n      });\n      if (response.ok) {\n        const data = await response.text();\n        setResult(data);\n      } else {\n        setResult('Error submitting approval');\n      }\n    } catch (error) {\n      console.error('Error submitting approval:', error);\n      setResult('Error submitting approval');\n    }\n  };\n  _s(handleApprovalSubmit, \"uU73+/+Ht0N5fim/G+2U0YM2chs=\");\n  const handleRejectSubmit = async doctorId => {\n    _s2();\n    const [approvalStatus] = useState('Rejected by Admin');\n    try {\n      const url = `\"http://localhost:8080/approval?userId=${doctorId}&approvalStatus=${approvalStatus}`;\n      const response = await fetch(url, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/x-www-form-urlencoded'\n        }\n      });\n      if (response.ok) {\n        const data = await response.text();\n        setResult(data);\n      } else {\n        setResult('Error submitting approval');\n      }\n    } catch (error) {\n      console.error('Error submitting approval:', error);\n      setResult('Error submitting approval');\n    }\n  };\n  _s2(handleRejectSubmit, \"S8rqWlE1LM8eOzMsbYDfglZDMHA=\");\n  const closePopup = () => {\n    // Close the popup\n    setPopupVisibility(false);\n  };\n  const handleReview = doctorId => {\n    // Set the currentDoctor state based on the doctorId\n    setCurrentDoctor(doctors.find(doctor => doctor.doctorId === doctorId) || {});\n    try {\n      // Call getDoctorClinics with the currentDoctor's doctorId\n      getDoctorClinics(doctorId);\n      console.log(doctorId);\n\n      // If getDoctorClinics was successful, set the Popup visibility to true\n      setPopupVisibility(true);\n    } catch (error) {\n      // Handle the error as needed\n      console.error('Error fetching doctor clinics:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"search-container\",\n    id: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"navbar\",\n      children: /*#__PURE__*/_jsxDEV(\"nav\", {\n        children: /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: [/*#__PURE__*/_jsxDEV(\"li\", {\n            style: {\n              float: 'left'\n            },\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              to: \"/\",\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: require('../images/DOC LOGO.png'),\n                alt: \"Doc Click Connect\",\n                style: {\n                  maxWidth: '100px',\n                  maxHeight: '40px',\n                  marginRight: '20px',\n                  marginLeft: '-50px'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 281,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 280,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 279,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            style: {\n              float: 'right'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: handleLogout,\n              children: \"Log Out\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 288,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: message\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 289,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 287,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 278,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 277,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 276,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"block\",\n        width: \"100%\",\n        marginTop: \"10%\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        style: {\n          textAlign: \"center\"\n        },\n        children: \"Doctor Profiles to Review\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 295,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"doctor-grid\",\n        style: {\n          marginLeft: \"7%\"\n        },\n        children: doctors.map((doctor, index) => /*#__PURE__*/_jsxDEV(DoctorForApproval, {\n          doctor: doctor,\n          onReview: () => handleReview(doctor.doctorId)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 298,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 296,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 294,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(HomeFooter, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 305,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Popup, {\n      trigger: isPopupVisible,\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        action: \"#\",\n        id: \"signin-form\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            style: {\n              float: \"left\",\n              marginRight: \"225px\"\n            },\n            children: \"Doctor Details\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 311,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n            style: {\n              float: \"right\",\n              fontSize: \"25px\",\n              color: \"gray\",\n              cursor: \"pointer\"\n            },\n            onClick: closePopup,\n            children: \"x\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 312,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 310,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"infield\",\n          style: {\n            overflowY: 'auto',\n            maxHeight: '500px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: selectedAvatar && /*#__PURE__*/_jsxDEV(\"img\", {\n              src: selectedAvatar,\n              alt: \"Selected Avatar\",\n              style: {\n                float: \"left\",\n                marginRight: \"5%\",\n                width: \"120px\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 317,\n              columnNumber: 23\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 315,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Doctor Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 325,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"docName\",\n              placeholder: \"Doctor Name\",\n              style: {\n                width: \"280px\",\n                marginBottom: \"0px\"\n              },\n              value: `${currentDoctor.firstName} ${currentDoctor.lastName}`,\n              readOnly: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 326,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 324,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Doctor Credentials\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 336,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"credentials\",\n              placeholder: \"Doctor Credentials\",\n              style: {\n                width: \"280px\",\n                marginBottom: \"10px\",\n                padding: \"15px\"\n              },\n              value: currentDoctor.credentials,\n              readOnly: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 337,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 335,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Specialization\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 340,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"specialization\",\n              placeholder: \"Specialization\",\n              style: {\n                padding: \"15px\"\n              },\n              value: currentDoctor.specialization,\n              readOnly: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 341,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 339,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Email Address\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 344,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"emailAddress\",\n              placeholder: \"Email Address\",\n              style: {\n                padding: \"15px\"\n              },\n              value: currentDoctor.contactNumber,\n              readOnly: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 345,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 343,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Contact Number\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 348,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"contactNumber\",\n              placeholder: \"Contact Number\",\n              style: {\n                padding: \"15px\"\n              },\n              value: currentDoctor.contactNumber,\n              readOnly: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 349,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 347,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 352,\n            columnNumber: 17\n          }, this), uniqueClinics.map((clinic, index) => /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(\"h2\", {\n                children: `Clinic ${String(index + 1).padStart(2, '0')}`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 356,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 355,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                children: \"Clinic or Hospital Affiliation\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 359,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                name: \"clinicName\",\n                placeholder: \"Clinic or Hospital Affiliation\",\n                style: {\n                  padding: \"15px\"\n                },\n                value: clinic.clinicName,\n                readOnly: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 360,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 358,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                children: \"Clinic Address\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 370,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                name: \"clinicSched\",\n                placeholder: \"Clinic Schedule\",\n                style: {\n                  padding: \"15px\"\n                },\n                value: clinic.clinicAddress,\n                readOnly: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 371,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 369,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                children: \"Clinic Schedule\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 381,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                name: \"clinicSched\",\n                placeholder: \"Clinic Schedule\",\n                style: {\n                  padding: \"15px\"\n                },\n                value: clinic.scheduleDays,\n                readOnly: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 382,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 380,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 391,\n              columnNumber: 19\n            }, this)]\n          }, clinic.clinicId, true, {\n            fileName: _jsxFileName,\n            lineNumber: 354,\n            columnNumber: 17\n          }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n            style: {\n              padding: 5,\n              borderRadius: 0,\n              width: \"48.8%\",\n              textAlign: \"center\",\n              marginTop: \"20px\",\n              height: \"40px\",\n              marginRight: \"10px\"\n            },\n            onClick: () => handleApprovalSubmit(currentDoctor.doctorId),\n            children: \"Approve Profile\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 395,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"cancel\",\n            style: {\n              padding: 5,\n              borderRadius: 0,\n              width: \"48.9%\",\n              textAlign: \"center\",\n              marginTop: \"20px\",\n              height: \"40px\"\n            },\n            onClick: () => handleRejectSubmit(currentDoctor.doctorId),\n            children: \"Reject Profile\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 396,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 314,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 309,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 308,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 275,\n    columnNumber: 5\n  }, this);\n}\n_s3(AdminHome, \"Z8cHS5m/M5JU7+bfowpnP8kYgRo=\");\n_c = AdminHome;\n;\nexport default AdminHome;\nvar _c;\n$RefreshReg$(_c, \"AdminHome\");","map":{"version":3,"names":["React","useState","useEffect","Link","HomeFooter","DoctorForApproval","Popup","avatar00","avatar01","avatar02","avatar03","avatar04","avatar05","avatar06","avatar07","avatar08","avatar09","avatar10","avatar11","avatar12","avatar13","avatar14","jsxDEV","_jsxDEV","AdminHome","_s3","_s","$RefreshSig$","_s2","message","setMessage","selectedAvatar","setSelectedAvatar","isPopupVisible","setPopupVisibility","doctors","setDoctors","doctorId","firstName","lastName","contactNumber","specialization","credentials","profilePicture","result","setResult","isLoading","setIsLoading","error","setError","currentDoctor","setCurrentDoctor","avatar","schedules","setSchedules","doctorUserId","clinicId","clinicName","clinicAddress","clinicNumber","scheduleDay","slots","fetchSchedules","response","fetch","ok","Error","schedulesData","json","formattedSchedules","map","clinic","name","address","officeNumber","console","log","fetchAllDoctors","data","formattedDoctors","doctorData","userId","user","setDisplayedAvatars","avatarImports","uniqueClinics","setUniqueClinics","getDoctorClinics","doctorSchedules","filter","schedule","uniqueClinicIds","Array","from","Set","uniqueClinicInfo","_clinicSchedules$","_clinicSchedules$2","_clinicSchedules$3","clinicSchedules","scheduleDays","children","fileName","_jsxFileName","lineNumber","columnNumber","handleLogout","method","status","window","location","href","handleApprovalSubmit","approvalStatus","url","headers","text","handleRejectSubmit","closePopup","handleReview","find","doctor","className","id","style","float","to","src","require","alt","maxWidth","maxHeight","marginRight","marginLeft","onClick","display","width","marginTop","textAlign","index","onReview","trigger","action","fontSize","color","cursor","overflowY","type","placeholder","marginBottom","value","readOnly","padding","String","padStart","borderRadius","height","_c","$RefreshReg$"],"sources":["D:/3rd Year 1st Sem/DocClickConnect/appointment/src/pages/AdminHome.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport \"../styles/Search.css\";\nimport { Link } from 'react-router-dom';\nimport HomeFooter from '../components/HomeFooter';\nimport DoctorForApproval from '../components/DoctorsForApproval';\nimport Popup from '../components/Popup'\nimport avatar00 from '../images/defaultIcon.png';\nimport avatar01 from '../assets/DoctorIcons/Icon01.png';\nimport avatar02 from '../assets/DoctorIcons/Icon02.png';\nimport avatar03 from '../assets/DoctorIcons/Icon03.png';\nimport avatar04 from '../assets/DoctorIcons/Icon04.png';\nimport avatar05 from '../assets/DoctorIcons/Icon05.png';\nimport avatar06 from '../assets/DoctorIcons/Icon06.png';\nimport avatar07 from '../assets/DoctorIcons/Icon07.png';\nimport avatar08 from '../assets/DoctorIcons/Icon08.png';\nimport avatar09 from '../assets/DoctorIcons/Icon09.png';\nimport avatar10 from '../assets/DoctorIcons/Icon10.png';\nimport avatar11 from '../assets/DoctorIcons/Icon11.png';\nimport avatar12 from '../assets/DoctorIcons/Icon12.png';\nimport avatar13 from '../assets/DoctorIcons/Icon13.png';\nimport avatar14 from '../assets/DoctorIcons/Icon14.png';\n\nfunction AdminHome() {\n  const [message, setMessage] = useState('');\n  const [selectedAvatar, setSelectedAvatar] = useState('');\n  const [isPopupVisible, setPopupVisibility] = useState(false);\n  const [doctors, setDoctors] = useState([\n    {\n      doctorId: '',\n      firstName: '',\n      lastName: '',\n      contactNumber: '',\n      specialization: '',\n      credentials: '',\n      profilePicture: '',\n    }]);\n    const [result, setResult] = useState('');\n    const [isLoading, setIsLoading] = useState(true);\n    const [error, setError] = useState(null);\n    const [currentDoctor, setCurrentDoctor] = useState('');\n    const [avatar] = useState(currentDoctor.profilePicture ||'');\n    const [schedules, setSchedules] = useState([\n      {\n        doctorUserId: '',\n        clinicId: '',\n        clinicName: '',\n        clinicAddress: '',\n        clinicNumber: '',\n        scheduleDay: '',\n        slots: '',\n      }\n    ]);\n\n    useEffect(() => {\n      const fetchSchedules = async () => {\n        try {\n          const response = await fetch('http://localhost:8080/schedules');\n          \n          if (!response.ok) {\n            throw new Error('Failed to fetch schedules');\n          }\n  \n          const schedulesData = await response.json();\n          const formattedSchedules = schedulesData.map((schedulesData) => ({\n            doctorUserId: schedulesData.doctorUserId,\n            clinicId: schedulesData.clinicId,\n            clinicName: schedulesData.clinic.name ,\n            clinicAddress: schedulesData.clinic.address,\n            clinicNumber: schedulesData.clinic.officeNumber,\n            scheduleDay: schedulesData.scheduleDay,\n            slots: schedulesData.slots,\n          }));\n  \n          setSchedules(formattedSchedules);\n          console.log(\"nakuha q sched hehe\");\n  \n        } catch (error) {\n          console.error('Error fetching schedules:', error.message);\n        }\n      };\n  \n      fetchSchedules();\n    }, []);\n  \n  \n    useEffect(() => {\n      const fetchAllDoctors = async () => {\n        try {\n          const response = await fetch('http://localhost:8080/allusers');\n  \n          if (response.ok) {\n            const data = await response.json();\n            const formattedDoctors = data.map((doctorData) => ({\n              doctorId: doctorData.userId,\n              firstName: `Dr. ${doctorData.user.firstName}`,\n              lastName: doctorData.user.lastName,\n              contactNumber: doctorData.user.contactNumber,\n              specialization: doctorData.specialization,\n              credentials: doctorData.credentials,\n              profilePicture: doctorData.user.avatar\n            }));\n  \n            setDoctors(formattedDoctors);\n          } else {\n            setError('Failed to fetch doctors');\n          }\n        } catch (error) {\n          setError('Error while fetching doctors');\n        } finally {\n          setIsLoading(false);\n        }\n      };\n  \n      fetchAllDoctors();\n    }, []);\n  \n    const setDisplayedAvatars = (avatar) => {\n      const avatarImports = {\n      'avatar01': avatar01,\n      'avatar02': avatar02,\n      'avatar03': avatar03,\n      'avatar04': avatar04,\n      'avatar05': avatar05,\n      'avatar06': avatar06,\n      'avatar07': avatar07,\n      'avatar08': avatar08,\n      'avatar09': avatar09,\n      'avatar10': avatar10,\n      'avatar11': avatar11,\n      'avatar12': avatar12,\n      'avatar13': avatar13,\n      'avatar14': avatar14,\n    };\n  \n      // Set selectedAvatar using the corresponding import\n      setSelectedAvatar(avatarImports[avatar] || avatar00);\n    };\n  \n  \n    useEffect(() => {\n      // Set displayed avatars based on the doctor's avatar value\n      setDisplayedAvatars(currentDoctor.profilePicture);\n    }, [currentDoctor.profilePicture]);\n\n    const [uniqueClinics, setUniqueClinics] = useState([]);\n\n    const getDoctorClinics = (doctorId) => {\n      // Filter schedules based on the doctorId\n      const doctorSchedules = schedules.filter((schedule) => schedule.doctorUserId === doctorId);\n\n      // Extract unique clinic IDs\n      const uniqueClinicIds = Array.from(new Set(doctorSchedules.map((schedule) => schedule.clinicId)));\n\n      // Create an array of objects for each unique clinic ID\n      const uniqueClinicInfo = uniqueClinicIds.map((clinicId) => {\n        const clinicSchedules = doctorSchedules.filter((schedule) => schedule.clinicId === clinicId);\n        const clinicName = clinicSchedules[0]?.clinicName || ''; // Get the clinic name from the first schedule\n        const clinicAddress = clinicSchedules[0]?.clinicAddress || '';\n        const clinicNumber = clinicSchedules[0]?.clinicNumber || '';\n        const scheduleDays = Array.from(new Set(clinicSchedules.map((schedule) => schedule.scheduleDay)));\n\n        return {\n          clinicId,\n          clinicName,\n          clinicAddress,\n          clinicNumber,\n          scheduleDays,\n        };\n      });\n\n      // Set the extracted information in the component state\n      setUniqueClinics(uniqueClinicInfo);\n      console.log(uniqueClinics);\n    };\n  \n\n\n    if (isLoading) {\n      return <p>Loading...</p>;\n    }\n  \n    if (error) {\n      return <p>Error: {error}</p>;\n    }\n  const handleLogout = async () => {\n    try {\n        const response = await fetch(\"http://localhost:8080/adminlogout\", {\n        method: 'POST',\n        });\n\n        if (response.status === 200) {\n        setMessage('Logged out successfully');\n        window.location.href = '/';\n        } else if (response.status === 401) {\n        setMessage('No user is currently logged in');\n        } else {\n        setMessage('An error occurred');\n        }\n    } catch (error) {\n        setMessage('An error occurred');\n    }\n  };\n\n  const handleApprovalSubmit = async (doctorId) => {\n    const [approvalStatus] = useState('Verified by Admin')\n    try {\n      const url = `\"http://localhost:8080/approval?userId=${doctorId}&approvalStatus=${approvalStatus}`;\n      const response = await fetch(url, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/x-www-form-urlencoded',\n        },\n      });\n\n      if (response.ok) {\n        const data = await response.text();\n        setResult(data);\n      } else {\n        setResult('Error submitting approval');\n      }\n    } catch (error) {\n      console.error('Error submitting approval:', error);\n      setResult('Error submitting approval');\n    }\n  };\n\n  const handleRejectSubmit = async (doctorId) => {\n    const [approvalStatus] = useState('Rejected by Admin')\n    try {\n      const url = `\"http://localhost:8080/approval?userId=${doctorId}&approvalStatus=${approvalStatus}`;\n      const response = await fetch(url, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/x-www-form-urlencoded',\n        },\n      });\n\n      if (response.ok) {\n        const data = await response.text();\n        setResult(data);\n      } else {\n        setResult('Error submitting approval');\n      }\n    } catch (error) {\n      console.error('Error submitting approval:', error);\n      setResult('Error submitting approval');\n    }\n  };\n\n\n  const closePopup = () => {\n    // Close the popup\n    setPopupVisibility(false);\n  };\n\n  const handleReview = (doctorId) => {\n    // Set the currentDoctor state based on the doctorId\n    setCurrentDoctor(doctors.find((doctor) => doctor.doctorId === doctorId) || {});\n    try {\n      // Call getDoctorClinics with the currentDoctor's doctorId\n      getDoctorClinics(doctorId);\n      console.log(doctorId);\n  \n      // If getDoctorClinics was successful, set the Popup visibility to true\n      setPopupVisibility(true);\n    } catch (error) {\n      // Handle the error as needed\n      console.error('Error fetching doctor clinics:', error);\n    }\n  };\n  \n  \n\n  return (\n    <div className=\"search-container\" id=\"container\">\n        <div id=\"navbar\">\n        <nav>\n            <ul>\n                <li style={{ float: 'left' }}>\n                    <Link to=\"/\">\n                    <img\n                    src={require('../images/DOC LOGO.png')}\n                    alt=\"Doc Click Connect\"\n                    style={{ maxWidth: '100px', maxHeight: '40px', marginRight: '20px', marginLeft: '-50px' }}\n                    /></Link>\n                </li>\n                <li style={{ float: 'right' }}>\n                <button onClick={handleLogout}>Log Out</button>\n                <p>{message}</p>\n              </li>\n            </ul>\n        </nav>\n    </div>\n    <div style={{ display: \"block\", width: \"100%\", marginTop: \"10%\"}}>\n          <h1 style={{textAlign: \"center\"}}>Doctor Profiles to Review</h1>\n          <div className=\"doctor-grid\" style={{marginLeft: \"7%\"}}>\n            {doctors.map((doctor, index) => (\n              <DoctorForApproval \n                key={index} \n                doctor={doctor} \n                onReview= {() => handleReview(doctor.doctorId)}/>\n            ))}\n          </div>\n      </div>\n      <HomeFooter />\n\n    {/* Popup */}\n    <Popup trigger={isPopupVisible}>\n            <form action=\"#\" id=\"signin-form\">\n              <div>\n                <h1 style={{float: \"left\", marginRight: \"225px\"}}>Doctor Details</h1>\n                <h1 style={{float: \"right\", fontSize: \"25px\", color: \"gray\", cursor: \"pointer\"}} onClick={closePopup}>x</h1>\n              </div>\n              <div className=\"infield\" style={{overflowY: 'auto', maxHeight: '500px' }}>\n              <div>\n                    {selectedAvatar && (\n                      <img\n                        src={selectedAvatar}\n                        alt=\"Selected Avatar\"\n                        style={{float:\"left\", marginRight:\"5%\", width:\"120px\"}}\n                      />\n                    )}\n                </div>\n                <div>\n                  <h3>Doctor Name</h3>\n                  <input\n                      type=\"text\"\n                      name=\"docName\"\n                      placeholder=\"Doctor Name\"\n                      style={{ width: \"280px\", marginBottom: \"0px\" }}\n                      value={`${currentDoctor.firstName} ${currentDoctor.lastName}`}\n                      readOnly\n                    />                \n                    </div>\n                <div>\n                  <h3>Doctor Credentials</h3>\n                  <input type=\"text\" name=\"credentials\" placeholder=\"Doctor Credentials\" style={{width: \"280px\", marginBottom: \"10px\", padding: \"15px\"}} value={currentDoctor.credentials} readOnly></input>\n                </div>\n                <div>\n                  <h3>Specialization</h3>\n                  <input type=\"text\" name=\"specialization\" placeholder=\"Specialization\" style={{padding: \"15px\"}} value={currentDoctor.specialization} readOnly></input>\n                </div>\n                <div>\n                  <h3>Email Address</h3>\n                  <input type=\"text\" name=\"emailAddress\" placeholder=\"Email Address\" style={{padding: \"15px\"}} value={currentDoctor.contactNumber} readOnly></input>\n                </div>\n                <div>\n                  <h3>Contact Number</h3>\n                  <input type=\"text\" name=\"contactNumber\" placeholder=\"Contact Number\" style={{padding: \"15px\"}} value={currentDoctor.contactNumber} readOnly></input>\n                </div>\n             \n                <br></br>\n                {uniqueClinics.map((clinic, index) => (\n                <ul key={clinic.clinicId}>\n                  <div>\n                    <h2>{`Clinic ${String(index + 1).padStart(2, '0')}`}</h2>\n                  </div>\n                  <div>\n                    <h3>Clinic or Hospital Affiliation</h3>\n                    <input\n                      type=\"text\"\n                      name=\"clinicName\"\n                      placeholder=\"Clinic or Hospital Affiliation\"\n                      style={{ padding: \"15px\" }}\n                      value={clinic.clinicName}\n                      readOnly\n                    ></input>\n                  </div>\n                  <div>\n                    <h3>Clinic Address</h3>\n                    <input\n                      type=\"text\"\n                      name=\"clinicSched\"\n                      placeholder=\"Clinic Schedule\"\n                      style={{ padding: \"15px\" }}\n                      value={clinic.clinicAddress}\n                      readOnly\n                    ></input>\n                  </div>\n                  <div>\n                    <h3>Clinic Schedule</h3>\n                    <input\n                      type=\"text\"\n                      name=\"clinicSched\"\n                      placeholder=\"Clinic Schedule\"\n                      style={{ padding: \"15px\" }}\n                      value={clinic.scheduleDays}\n                      readOnly\n                    ></input>\n                  </div>\n                  <br></br>\n                </ul>\n              ))}\n\n                <button style={{padding: 5, borderRadius: 0, width: \"48.8%\", textAlign: \"center\", marginTop: \"20px\", height: \"40px\", marginRight: \"10px\"}} onClick={() => handleApprovalSubmit(currentDoctor.doctorId)}>Approve Profile</button>\n                <button className='cancel' style={{padding: 5, borderRadius: 0, width: \"48.9%\", textAlign: \"center\", marginTop: \"20px\", height: \"40px\"}} onClick={() => handleRejectSubmit(currentDoctor.doctorId)}>Reject Profile</button>\n              </div>\n              \n            </form>\n          </Popup>\n    </div>\n  );\n};\n\n\nexport default AdminHome;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}